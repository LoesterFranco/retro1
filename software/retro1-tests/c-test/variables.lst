ca65 V2.15 - Git f7cdfbf
Main file   : variables.s
Current file: variables.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.15 - Git f7cdfbf
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.15 - Git f7cdfbf"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.import		_sprintf
000000r 1               	.import		_malloc
000000r 1               	.import		_free
000000r 1               	.import		_rand
000000r 1               	.import		_strcpy
000000r 1               	.import		_strlen
000000r 1               	.import		_syntax_error_msg_with_arg
000000r 1               	.import		_print_buffer
000000r 1               	.importzp	_millis
000000r 1               	.importzp	_seconds
000000r 1               	.importzp	_minutes
000000r 1               	.importzp	_hours
000000r 1               	.export		_init_builtin_variables
000000r 1               	.export		_find_variable
000000r 1               	.export		_create_variable
000000r 1               	.export		_delete_variable
000000r 1               	.export		_print_variable
000000r 1               	.export		_clear_variables
000000r 1               	.export		_print_all_variables
000000r 1               	.export		_get_string_variable_value
000000r 1               	.export		_get_integer_variable_value
000000r 1               	.import		_acia_putc
000000r 1               	.import		_acia_puts
000000r 1               	.import		_acia_put_newline
000000r 1               	.export		_variables
000000r 1               	.export		_builtin_var_time_string
000000r 1               	.export		_builtin_var_time_integer
000000r 1               	.export		_builtin_var_random_integer
000000r 1               
000000r 1               .segment	"DATA"
000000r 1               
000000r 1               _variables:
000000r 1  00 00        	.word	$0000
000002r 1               
000002r 1               .segment	"RODATA"
000000r 1               
000000r 1               L0029:
000000r 1  43 61 6E 6E  	.byte	$43,$61,$6E,$6E,$6F,$74,$20,$6F,$76,$65,$72,$77,$72,$69,$74,$65
000004r 1  6F 74 20 6F  
000008r 1  76 65 72 77  
000010r 1  20 62 75 69  	.byte	$20,$62,$75,$69,$6C,$74,$69,$6E,$21,$00
000014r 1  6C 74 69 6E  
000018r 1  21 00        
00001Ar 1               L0068:
00001Ar 1  43 61 6E 6E  	.byte	$43,$61,$6E,$6E,$6F,$74,$20,$64,$65,$6C,$65,$74,$65,$20,$62,$75
00001Er 1  6F 74 20 64  
000022r 1  65 6C 65 74  
00002Ar 1  69 6C 74 69  	.byte	$69,$6C,$74,$69,$6E,$21,$00
00002Er 1  6E 21 00     
000031r 1               L00A7:
000031r 1  25 30 32 64  	.byte	$25,$30,$32,$64,$3A,$25,$30,$32,$64,$3A,$25,$30,$32,$64,$00
000035r 1  3A 25 30 32  
000039r 1  64 3A 25 30  
000040r 1               L00EE:
000040r 1  20 3D 20 00  	.byte	$20,$3D,$20,$00
000044r 1               L008C:
000044r 1  25 64 00     	.byte	$25,$64,$00
000047r 1               L0086	:=	L008C+0
000047r 1               
000047r 1               ; ---------------------------------------------------------------
000047r 1               ; void __near__ init_builtin_variables (void)
000047r 1               ; ---------------------------------------------------------------
000047r 1               
000047r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_init_builtin_variables: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1  A2 74        	ldx     #$74
000002r 1  A9 69        	lda     #$69
000004r 1  20 rr rr     	jsr     pushax
000007r 1  A9 80        	lda     #$80
000009r 1  20 rr rr     	jsr     pusha
00000Cr 1  A9 rr        	lda     #<(_builtin_var_time_integer)
00000Er 1  A2 rr        	ldx     #>(_builtin_var_time_integer)
000010r 1  20 rr rr     	jsr     _create_variable
000013r 1  A2 74        	ldx     #$74
000015r 1  A9 69        	lda     #$69
000017r 1  20 rr rr     	jsr     pushax
00001Ar 1  A9 81        	lda     #$81
00001Cr 1  20 rr rr     	jsr     pusha
00001Fr 1  A9 rr        	lda     #<(_builtin_var_time_string)
000021r 1  A2 rr        	ldx     #>(_builtin_var_time_string)
000023r 1  20 rr rr     	jsr     _create_variable
000026r 1  A2 72        	ldx     #$72
000028r 1  A9 6E        	lda     #$6E
00002Ar 1  20 rr rr     	jsr     pushax
00002Dr 1  A9 80        	lda     #$80
00002Fr 1  20 rr rr     	jsr     pusha
000032r 1  A9 rr        	lda     #<(_builtin_var_random_integer)
000034r 1  A2 rr        	ldx     #>(_builtin_var_random_integer)
000036r 1  4C rr rr     	jmp     _create_variable
000039r 1               
000039r 1               .endproc
000039r 1               
000039r 1               ; ---------------------------------------------------------------
000039r 1               ; __near__ struct _variable * __near__ find_variable (unsigned int, unsigned char, __near__ __near__ struct _variable * *)
000039r 1               ; ---------------------------------------------------------------
000039r 1               
000039r 1               .segment	"CODE"
000039r 1               
000039r 1               .proc	_find_variable: near
000039r 1               
000039r 1               .segment	"CODE"
000039r 1               
000039r 1  20 rr rr     	jsr     pushax
00003Cr 1  AD rr rr     	lda     _variables
00003Fr 1  AE rr rr     	ldx     _variables+1
000042r 1  20 rr rr     	jsr     pushax
000045r 1  A0 03        	ldy     #$03
000047r 1  B1 rr        	lda     (sp),y
000049r 1  88           	dey
00004Ar 1  11 rr        	ora     (sp),y
00004Cr 1  F0 3A        	beq     L0010
00004Er 1  C8           	iny
00004Fr 1  20 rr rr     	jsr     ldaxysp
000052r 1  85 rr        	sta     ptr1
000054r 1  86 rr        	stx     ptr1+1
000056r 1  A9 00        	lda     #$00
000058r 1  A8           	tay
000059r 1  91 rr        	sta     (ptr1),y
00005Br 1  C8           	iny
00005Cr 1  91 rr        	sta     (ptr1),y
00005Er 1  4C rr rr     	jmp     L0108
000061r 1  A0 03        L000E:	ldy     #$03
000063r 1  B1 rr        	lda     (sp),y
000065r 1  88           	dey
000066r 1  11 rr        	ora     (sp),y
000068r 1  F0 13        	beq     L0018
00006Ar 1  C8           	iny
00006Br 1  20 rr rr     	jsr     ldaxysp
00006Er 1  85 rr        	sta     ptr1
000070r 1  86 rr        	stx     ptr1+1
000072r 1  20 rr rr     	jsr     ldax0sp
000075r 1  A0 00        	ldy     #$00
000077r 1  91 rr        	sta     (ptr1),y
000079r 1  C8           	iny
00007Ar 1  8A           	txa
00007Br 1  91 rr        	sta     (ptr1),y
00007Dr 1  20 rr rr     L0018:	jsr     ldax0sp
000080r 1  A0 06        	ldy     #$06
000082r 1  20 rr rr     	jsr     ldaxidx
000085r 1  20 rr rr     	jsr     stax0sp
000088r 1  A0 01        L0010:	ldy     #$01
00008Ar 1  B1 rr        L0108:	lda     (sp),y
00008Cr 1  88           	dey
00008Dr 1  11 rr        	ora     (sp),y
00008Fr 1  F0 2D        	beq     L0103
000091r 1  20 rr rr     	jsr     ldax0sp
000094r 1  20 rr rr     	jsr     ldaxi
000097r 1  A0 05        	ldy     #$05
000099r 1  D1 rr        	cmp     (sp),y
00009Br 1  D0 C4        	bne     L000E
00009Dr 1  8A           	txa
00009Er 1  C8           	iny
00009Fr 1  D1 rr        	cmp     (sp),y
0000A1r 1  D0 BE        	bne     L000E
0000A3r 1  20 rr rr     	jsr     ldax0sp
0000A6r 1  85 rr        	sta     ptr1
0000A8r 1  86 rr        	stx     ptr1+1
0000AAr 1  A0 02        	ldy     #$02
0000ACr 1  B1 rr        	lda     (ptr1),y
0000AEr 1  29 0F        	and     #$0F
0000B0r 1  20 rr rr     	jsr     pusha0
0000B3r 1  A0 06        	ldy     #$06
0000B5r 1  B1 rr        	lda     (sp),y
0000B7r 1  29 0F        	and     #$0F
0000B9r 1  20 rr rr     	jsr     tosicmp0
0000BCr 1  D0 A3        	bne     L000E
0000BEr 1  20 rr rr     L0103:	jsr     ldax0sp
0000C1r 1  4C rr rr     	jmp     incsp7
0000C4r 1               
0000C4r 1               .endproc
0000C4r 1               
0000C4r 1               ; ---------------------------------------------------------------
0000C4r 1               ; void __near__ create_variable (unsigned int, unsigned char, __near__ void *)
0000C4r 1               ; ---------------------------------------------------------------
0000C4r 1               
0000C4r 1               .segment	"CODE"
0000C4r 1               
0000C4r 1               .proc	_create_variable: near
0000C4r 1               
0000C4r 1               .segment	"CODE"
0000C4r 1               
0000C4r 1  20 rr rr     	jsr     pushax
0000C7r 1  20 rr rr     	jsr     decsp4
0000CAr 1  A0 0A        	ldy     #$0A
0000CCr 1  20 rr rr     	jsr     pushwysp
0000CFr 1  A0 08        	ldy     #$08
0000D1r 1  B1 rr        	lda     (sp),y
0000D3r 1  20 rr rr     	jsr     pusha
0000D6r 1  A9 03        	lda     #$03
0000D8r 1  20 rr rr     	jsr     leaa0sp
0000DBr 1  20 rr rr     	jsr     _find_variable
0000DEr 1  20 rr rr     	jsr     pushax
0000E1r 1  A0 01        	ldy     #$01
0000E3r 1  B1 rr        	lda     (sp),y
0000E5r 1  88           	dey
0000E6r 1  11 rr        	ora     (sp),y
0000E8r 1  F0 0F        	beq     L0026
0000EAr 1  20 rr rr     	jsr     ldax0sp
0000EDr 1  85 rr        	sta     ptr1
0000EFr 1  86 rr        	stx     ptr1+1
0000F1r 1  A0 02        	ldy     #$02
0000F3r 1  B1 rr        	lda     (ptr1),y
0000F5r 1  29 80        	and     #$80
0000F7r 1  D0 04        	bne     L0109
0000F9r 1  AA           L0026:	tax
0000FAr 1  4C rr rr     	jmp     L0024
0000FDr 1  A9 rr        L0109:	lda     #<(L0029)
0000FFr 1  A2 rr        	ldx     #>(L0029)
000101r 1  20 rr rr     	jsr     pushax
000104r 1  A2 00        	ldx     #$00
000106r 1  8A           	txa
000107r 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
00010Ar 1  4C rr rr     	jmp     L0044
00010Dr 1  A0 01        L0024:	ldy     #$01
00010Fr 1  B1 rr        	lda     (sp),y
000111r 1  88           	dey
000112r 1  11 rr        	ora     (sp),y
000114r 1  F0 27        	beq     L010A
000116r 1  20 rr rr     	jsr     ldax0sp
000119r 1  85 rr        	sta     ptr1
00011Br 1  86 rr        	stx     ptr1+1
00011Dr 1  A0 02        	ldy     #$02
00011Fr 1  B1 rr        	lda     (ptr1),y
000121r 1  29 0F        	and     #$0F
000123r 1  C9 01        	cmp     #$01
000125r 1  D0 0B        	bne     L002E
000127r 1  20 rr rr     	jsr     ldax0sp
00012Ar 1  A0 04        	ldy     #$04
00012Cr 1  20 rr rr     	jsr     ldaxidx
00012Fr 1  20 rr rr     	jsr     _free
000132r 1  20 rr rr     L002E:	jsr     ldax0sp
000135r 1  A0 04        	ldy     #$04
000137r 1  20 rr rr     	jsr     staxysp
00013Ar 1  4C rr rr     	jmp     L0036
00013Dr 1  A9 07        L010A:	lda     #$07
00013Fr 1  20 rr rr     	jsr     _malloc
000142r 1  A0 04        	ldy     #$04
000144r 1  20 rr rr     	jsr     staxysp
000147r 1  85 rr        	sta     ptr1
000149r 1  86 rr        	stx     ptr1+1
00014Br 1  A0 0A        	ldy     #$0A
00014Dr 1  20 rr rr     	jsr     ldaxysp
000150r 1  A0 00        	ldy     #$00
000152r 1  91 rr        	sta     (ptr1),y
000154r 1  C8           	iny
000155r 1  8A           	txa
000156r 1  91 rr        	sta     (ptr1),y
000158r 1  A0 05        	ldy     #$05
00015Ar 1  20 rr rr     	jsr     ldaxysp
00015Dr 1  85 rr        	sta     ptr1
00015Fr 1  86 rr        	stx     ptr1+1
000161r 1  AD rr rr     	lda     _variables
000164r 1  A0 05        	ldy     #$05
000166r 1  91 rr        	sta     (ptr1),y
000168r 1  C8           	iny
000169r 1  AD rr rr     	lda     _variables+1
00016Cr 1  91 rr        	sta     (ptr1),y
00016Er 1  88           	dey
00016Fr 1  20 rr rr     	jsr     ldaxysp
000172r 1  8D rr rr     	sta     _variables
000175r 1  8E rr rr     	stx     _variables+1
000178r 1  A0 05        L0036:	ldy     #$05
00017Ar 1  20 rr rr     	jsr     ldaxysp
00017Dr 1  85 rr        	sta     ptr1
00017Fr 1  86 rr        	stx     ptr1+1
000181r 1  A0 08        	ldy     #$08
000183r 1  B1 rr        	lda     (sp),y
000185r 1  A0 02        	ldy     #$02
000187r 1  91 rr        	sta     (ptr1),y
000189r 1  A0 08        	ldy     #$08
00018Br 1  B1 rr        	lda     (sp),y
00018Dr 1  29 0F        	and     #$0F
00018Fr 1  F0 07        	beq     L010C
000191r 1  C9 01        	cmp     #$01
000193r 1  F0 3E        	beq     L010E
000195r 1  4C rr rr     	jmp     L0044
000198r 1  B1 rr        L010C:	lda     (sp),y
00019Ar 1  29 80        	and     #$80
00019Cr 1  F0 19        	beq     L0047
00019Er 1  A0 05        	ldy     #$05
0001A0r 1  20 rr rr     	jsr     ldaxysp
0001A3r 1  85 rr        	sta     ptr1
0001A5r 1  86 rr        	stx     ptr1+1
0001A7r 1  A0 07        	ldy     #$07
0001A9r 1  20 rr rr     	jsr     ldaxysp
0001ACr 1  A0 03        	ldy     #$03
0001AEr 1  91 rr        	sta     (ptr1),y
0001B0r 1  C8           	iny
0001B1r 1  8A           	txa
0001B2r 1  91 rr        	sta     (ptr1),y
0001B4r 1  4C rr rr     	jmp     L0044
0001B7r 1  A0 05        L0047:	ldy     #$05
0001B9r 1  20 rr rr     	jsr     ldaxysp
0001BCr 1  85 rr        	sta     sreg
0001BEr 1  86 rr        	stx     sreg+1
0001C0r 1  A0 07        	ldy     #$07
0001C2r 1  20 rr rr     	jsr     ldaxysp
0001C5r 1  20 rr rr     	jsr     ldaxi
0001C8r 1  A0 03        	ldy     #$03
0001CAr 1  91 rr        	sta     (sreg),y
0001CCr 1  C8           	iny
0001CDr 1  8A           	txa
0001CEr 1  91 rr        	sta     (sreg),y
0001D0r 1  4C rr rr     	jmp     L0044
0001D3r 1  B1 rr        L010E:	lda     (sp),y
0001D5r 1  29 80        	and     #$80
0001D7r 1  F0 19        	beq     L0051
0001D9r 1  A0 05        	ldy     #$05
0001DBr 1  20 rr rr     	jsr     ldaxysp
0001DEr 1  85 rr        	sta     ptr1
0001E0r 1  86 rr        	stx     ptr1+1
0001E2r 1  A0 07        	ldy     #$07
0001E4r 1  20 rr rr     	jsr     ldaxysp
0001E7r 1  A0 03        	ldy     #$03
0001E9r 1  91 rr        	sta     (ptr1),y
0001EBr 1  C8           	iny
0001ECr 1  8A           	txa
0001EDr 1  91 rr        	sta     (ptr1),y
0001EFr 1  4C rr rr     	jmp     L0044
0001F2r 1  88           L0051:	dey
0001F3r 1  20 rr rr     	jsr     ldaxysp
0001F6r 1  20 rr rr     	jsr     _strlen
0001F9r 1  20 rr rr     	jsr     pusha
0001FCr 1  A0 08        	ldy     #$08
0001FEr 1  20 rr rr     	jsr     pushwysp
000201r 1  A0 02        	ldy     #$02
000203r 1  A2 00        	ldx     #$00
000205r 1  B1 rr        	lda     (sp),y
000207r 1  20 rr rr     	jsr     incax1
00020Ar 1  20 rr rr     	jsr     _malloc
00020Dr 1  A0 03        	ldy     #$03
00020Fr 1  20 rr rr     	jsr     staxspidx
000212r 1  A0 06        	ldy     #$06
000214r 1  20 rr rr     	jsr     ldaxysp
000217r 1  A0 04        	ldy     #$04
000219r 1  20 rr rr     	jsr     pushwidx
00021Cr 1  A0 0A        	ldy     #$0A
00021Er 1  20 rr rr     	jsr     ldaxysp
000221r 1  20 rr rr     	jsr     _strcpy
000224r 1  20 rr rr     	jsr     incsp1
000227r 1  A0 0B        L0044:	ldy     #$0B
000229r 1  4C rr rr     	jmp     addysp
00022Cr 1               
00022Cr 1               .endproc
00022Cr 1               
00022Cr 1               ; ---------------------------------------------------------------
00022Cr 1               ; void __near__ delete_variable (unsigned int, unsigned char)
00022Cr 1               ; ---------------------------------------------------------------
00022Cr 1               
00022Cr 1               .segment	"CODE"
00022Cr 1               
00022Cr 1               .proc	_delete_variable: near
00022Cr 1               
00022Cr 1               .segment	"CODE"
00022Cr 1               
00022Cr 1  20 rr rr     	jsr     pusha
00022Fr 1  20 rr rr     	jsr     decsp2
000232r 1  A0 06        	ldy     #$06
000234r 1  20 rr rr     	jsr     pushwysp
000237r 1  A0 04        	ldy     #$04
000239r 1  B1 rr        	lda     (sp),y
00023Br 1  20 rr rr     	jsr     pusha
00023Er 1  A9 03        	lda     #$03
000240r 1  20 rr rr     	jsr     leaa0sp
000243r 1  20 rr rr     	jsr     _find_variable
000246r 1  20 rr rr     	jsr     pushax
000249r 1  A0 01        	ldy     #$01
00024Br 1  B1 rr        	lda     (sp),y
00024Dr 1  88           	dey
00024Er 1  11 rr        	ora     (sp),y
000250r 1  F0 1F        	beq     L0063
000252r 1  20 rr rr     	jsr     ldax0sp
000255r 1  85 rr        	sta     ptr1
000257r 1  86 rr        	stx     ptr1+1
000259r 1  A0 02        	ldy     #$02
00025Br 1  B1 rr        	lda     (ptr1),y
00025Dr 1  29 80        	and     #$80
00025Fr 1  F0 10        	beq     L0063
000261r 1  A9 rr        	lda     #<(L0068)
000263r 1  A2 rr        	ldx     #>(L0068)
000265r 1  20 rr rr     	jsr     pushax
000268r 1  A2 00        	ldx     #$00
00026Ar 1  8A           	txa
00026Br 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
00026Er 1  4C rr rr     	jmp     incsp7
000271r 1  A0 01        L0063:	ldy     #$01
000273r 1  B1 rr        	lda     (sp),y
000275r 1  88           	dey
000276r 1  11 rr        	ora     (sp),y
000278r 1  F0 59        	beq     L006B
00027Ar 1  20 rr rr     	jsr     ldax0sp
00027Dr 1  85 rr        	sta     ptr1
00027Fr 1  86 rr        	stx     ptr1+1
000281r 1  A0 02        	ldy     #$02
000283r 1  B1 rr        	lda     (ptr1),y
000285r 1  29 0F        	and     #$0F
000287r 1  C9 01        	cmp     #$01
000289r 1  D0 0B        	bne     L006D
00028Br 1  20 rr rr     	jsr     ldax0sp
00028Er 1  A0 04        	ldy     #$04
000290r 1  20 rr rr     	jsr     ldaxidx
000293r 1  20 rr rr     	jsr     _free
000296r 1  20 rr rr     L006D:	jsr     ldax0sp
000299r 1  EC rr rr     	cpx     _variables+1
00029Cr 1  D0 16        	bne     L0073
00029Er 1  CD rr rr     	cmp     _variables
0002A1r 1  D0 11        	bne     L0073
0002A3r 1  20 rr rr     	jsr     ldax0sp
0002A6r 1  A0 06        	ldy     #$06
0002A8r 1  20 rr rr     	jsr     ldaxidx
0002ABr 1  8D rr rr     	sta     _variables
0002AEr 1  8E rr rr     	stx     _variables+1
0002B1r 1  4C rr rr     	jmp     L0077
0002B4r 1  A0 03        L0073:	ldy     #$03
0002B6r 1  20 rr rr     	jsr     ldaxysp
0002B9r 1  85 rr        	sta     sreg
0002BBr 1  86 rr        	stx     sreg+1
0002BDr 1  20 rr rr     	jsr     ldax0sp
0002C0r 1  A0 06        	ldy     #$06
0002C2r 1  20 rr rr     	jsr     ldaxidx
0002C5r 1  A0 05        	ldy     #$05
0002C7r 1  91 rr        	sta     (sreg),y
0002C9r 1  C8           	iny
0002CAr 1  8A           	txa
0002CBr 1  91 rr        	sta     (sreg),y
0002CDr 1  20 rr rr     L0077:	jsr     ldax0sp
0002D0r 1  20 rr rr     	jsr     _free
0002D3r 1  4C rr rr     L006B:	jmp     incsp7
0002D6r 1               
0002D6r 1               .endproc
0002D6r 1               
0002D6r 1               ; ---------------------------------------------------------------
0002D6r 1               ; void __near__ print_variable (__near__ struct _variable *, unsigned char)
0002D6r 1               ; ---------------------------------------------------------------
0002D6r 1               
0002D6r 1               .segment	"CODE"
0002D6r 1               
0002D6r 1               .proc	_print_variable: near
0002D6r 1               
0002D6r 1               .segment	"CODE"
0002D6r 1               
0002D6r 1  20 rr rr     	jsr     pusha
0002D9r 1  A0 02        	ldy     #$02
0002DBr 1  20 rr rr     	jsr     ldaxysp
0002DEr 1  85 rr        	sta     ptr1
0002E0r 1  86 rr        	stx     ptr1+1
0002E2r 1  A0 02        	ldy     #$02
0002E4r 1  B1 rr        	lda     (ptr1),y
0002E6r 1  29 0F        	and     #$0F
0002E8r 1  F0 07        	beq     L0113
0002EAr 1  C9 01        	cmp     #$01
0002ECr 1  F0 5A        	beq     L0092
0002EEr 1  4C rr rr     	jmp     incsp3
0002F1r 1  20 rr rr     L0113:	jsr     ldaxysp
0002F4r 1  85 rr        	sta     ptr1
0002F6r 1  86 rr        	stx     ptr1+1
0002F8r 1  A0 02        	ldy     #$02
0002FAr 1  B1 rr        	lda     (ptr1),y
0002FCr 1  29 80        	and     #$80
0002FEr 1  F0 1E        	beq     L0082
000300r 1  A9 rr        	lda     #<(_print_buffer)
000302r 1  A2 rr        	ldx     #>(_print_buffer)
000304r 1  20 rr rr     	jsr     pushax
000307r 1  A9 rr        	lda     #<(L0086)
000309r 1  A2 rr        	ldx     #>(L0086)
00030Br 1  20 rr rr     	jsr     pushax
00030Er 1  A0 06        	ldy     #$06
000310r 1  20 rr rr     	jsr     ldaxysp
000313r 1  A0 04        	ldy     #$04
000315r 1  20 rr rr     	jsr     ldaxidx
000318r 1  20 rr rr     	jsr     callax
00031Br 1  4C rr rr     	jmp     L0116
00031Er 1  A9 rr        L0082:	lda     #<(_print_buffer)
000320r 1  A2 rr        	ldx     #>(_print_buffer)
000322r 1  20 rr rr     	jsr     pushax
000325r 1  A9 rr        	lda     #<(L008C)
000327r 1  A2 rr        	ldx     #>(L008C)
000329r 1  20 rr rr     	jsr     pushax
00032Cr 1  A0 06        	ldy     #$06
00032Er 1  20 rr rr     	jsr     ldaxysp
000331r 1  A0 04        	ldy     #$04
000333r 1  20 rr rr     	jsr     ldaxidx
000336r 1  20 rr rr     L0116:	jsr     pushax
000339r 1  A0 06        	ldy     #$06
00033Br 1  20 rr rr     	jsr     _sprintf
00033Er 1  A9 rr        	lda     #<(_print_buffer)
000340r 1  A2 rr        	ldx     #>(_print_buffer)
000342r 1  20 rr rr     	jsr     _acia_puts
000345r 1  4C rr rr     	jmp     incsp3
000348r 1  A0 00        L0092:	ldy     #$00
00034Ar 1  B1 rr        	lda     (sp),y
00034Cr 1  C9 01        	cmp     #$01
00034Er 1  D0 05        	bne     L0093
000350r 1  A9 22        	lda     #$22
000352r 1  20 rr rr     	jsr     _acia_putc
000355r 1  A0 02        L0093:	ldy     #$02
000357r 1  20 rr rr     	jsr     ldaxysp
00035Ar 1  85 rr        	sta     ptr1
00035Cr 1  86 rr        	stx     ptr1+1
00035Er 1  A0 02        	ldy     #$02
000360r 1  B1 rr        	lda     (ptr1),y
000362r 1  29 80        	and     #$80
000364r 1  F0 0E        	beq     L0114
000366r 1  20 rr rr     	jsr     ldaxysp
000369r 1  A0 04        	ldy     #$04
00036Br 1  20 rr rr     	jsr     ldaxidx
00036Er 1  20 rr rr     	jsr     callax
000371r 1  4C rr rr     	jmp     L0112
000374r 1  20 rr rr     L0114:	jsr     ldaxysp
000377r 1  A0 04        	ldy     #$04
000379r 1  20 rr rr     	jsr     ldaxidx
00037Cr 1  20 rr rr     L0112:	jsr     _acia_puts
00037Fr 1  A0 00        	ldy     #$00
000381r 1  B1 rr        	lda     (sp),y
000383r 1  C9 01        	cmp     #$01
000385r 1  D0 05        	bne     L007F
000387r 1  A9 22        	lda     #$22
000389r 1  20 rr rr     	jsr     _acia_putc
00038Cr 1  4C rr rr     L007F:	jmp     incsp3
00038Fr 1               
00038Fr 1               .endproc
00038Fr 1               
00038Fr 1               ; ---------------------------------------------------------------
00038Fr 1               ; void __near__ clear_variables (void)
00038Fr 1               ; ---------------------------------------------------------------
00038Fr 1               
00038Fr 1               .segment	"CODE"
00038Fr 1               
00038Fr 1               .proc	_clear_variables: near
00038Fr 1               
00038Fr 1               .segment	"CODE"
00038Fr 1               
00038Fr 1  AD rr rr     	lda     _variables
000392r 1  AE rr rr     	ldx     _variables+1
000395r 1  20 rr rr     	jsr     pushax
000398r 1  20 rr rr     	jsr     decsp2
00039Br 1  4C rr rr     	jmp     L00C8
00039Er 1  A0 03        L00C6:	ldy     #$03
0003A0r 1  20 rr rr     	jsr     ldaxysp
0003A3r 1  20 rr rr     	jsr     stax0sp
0003A6r 1  A0 03        	ldy     #$03
0003A8r 1  20 rr rr     	jsr     ldaxysp
0003ABr 1  A0 06        	ldy     #$06
0003ADr 1  20 rr rr     	jsr     ldaxidx
0003B0r 1  A0 02        	ldy     #$02
0003B2r 1  20 rr rr     	jsr     staxysp
0003B5r 1  20 rr rr     	jsr     ldax0sp
0003B8r 1  85 rr        	sta     ptr1
0003BAr 1  86 rr        	stx     ptr1+1
0003BCr 1  A0 02        	ldy     #$02
0003BEr 1  B1 rr        	lda     (ptr1),y
0003C0r 1  C9 01        	cmp     #$01
0003C2r 1  D0 0B        	bne     L00CE
0003C4r 1  20 rr rr     	jsr     ldax0sp
0003C7r 1  A0 04        	ldy     #$04
0003C9r 1  20 rr rr     	jsr     ldaxidx
0003CCr 1  20 rr rr     	jsr     _free
0003CFr 1  20 rr rr     L00CE:	jsr     ldax0sp
0003D2r 1  20 rr rr     	jsr     _free
0003D5r 1  A0 03        L00C8:	ldy     #$03
0003D7r 1  B1 rr        	lda     (sp),y
0003D9r 1  88           	dey
0003DAr 1  11 rr        	ora     (sp),y
0003DCr 1  D0 C0        	bne     L00C6
0003DEr 1  8D rr rr     	sta     _variables
0003E1r 1  8D rr rr     	sta     _variables+1
0003E4r 1  20 rr rr     	jsr     _init_builtin_variables
0003E7r 1  4C rr rr     	jmp     incsp4
0003EAr 1               
0003EAr 1               .endproc
0003EAr 1               
0003EAr 1               ; ---------------------------------------------------------------
0003EAr 1               ; void __near__ print_all_variables (void)
0003EAr 1               ; ---------------------------------------------------------------
0003EAr 1               
0003EAr 1               .segment	"CODE"
0003EAr 1               
0003EAr 1               .proc	_print_all_variables: near
0003EAr 1               
0003EAr 1               .segment	"CODE"
0003EAr 1               
0003EAr 1  A9 01        	lda     #$01
0003ECr 1  20 rr rr     	jsr     pusha
0003EFr 1  AD rr rr     	lda     _variables
0003F2r 1  AE rr rr     	ldx     _variables+1
0003F5r 1  20 rr rr     	jsr     pushax
0003F8r 1  4C rr rr     	jmp     L00DC
0003FBr 1  A0 02        L00DA:	ldy     #$02
0003FDr 1  B1 rr        	lda     (sp),y
0003FFr 1  F0 04        	beq     L00DE
000401r 1  A9 00        	lda     #$00
000403r 1  91 rr        	sta     (sp),y
000405r 1  20 rr rr     L00DE:	jsr     ldax0sp
000408r 1  20 rr rr     	jsr     ldaxi
00040Br 1  C9 01        	cmp     #$01
00040Dr 1  8A           	txa
00040Er 1  E9 01        	sbc     #$01
000410r 1  90 0A        	bcc     L00E3
000412r 1  20 rr rr     	jsr     ldax0sp
000415r 1  20 rr rr     	jsr     ldaxi
000418r 1  8A           	txa
000419r 1  20 rr rr     	jsr     _acia_putc
00041Cr 1  20 rr rr     L00E3:	jsr     ldax0sp
00041Fr 1  20 rr rr     	jsr     ldaxi
000422r 1  20 rr rr     	jsr     _acia_putc
000425r 1  20 rr rr     	jsr     ldax0sp
000428r 1  85 rr        	sta     ptr1
00042Ar 1  86 rr        	stx     ptr1+1
00042Cr 1  A0 02        	ldy     #$02
00042Er 1  B1 rr        	lda     (ptr1),y
000430r 1  C9 01        	cmp     #$01
000432r 1  D0 05        	bne     L00E9
000434r 1  A9 24        	lda     #$24
000436r 1  20 rr rr     	jsr     _acia_putc
000439r 1  A9 rr        L00E9:	lda     #<(L00EE)
00043Br 1  A2 rr        	ldx     #>(L00EE)
00043Dr 1  20 rr rr     	jsr     _acia_puts
000440r 1  20 rr rr     	jsr     pushw0sp
000443r 1  A9 01        	lda     #$01
000445r 1  20 rr rr     	jsr     _print_variable
000448r 1  20 rr rr     	jsr     _acia_put_newline
00044Br 1  20 rr rr     	jsr     ldax0sp
00044Er 1  A0 06        	ldy     #$06
000450r 1  20 rr rr     	jsr     ldaxidx
000453r 1  20 rr rr     	jsr     stax0sp
000456r 1  A0 01        L00DC:	ldy     #$01
000458r 1  B1 rr        	lda     (sp),y
00045Ar 1  88           	dey
00045Br 1  11 rr        	ora     (sp),y
00045Dr 1  D0 9C        	bne     L00DA
00045Fr 1  4C rr rr     	jmp     incsp3
000462r 1               
000462r 1               .endproc
000462r 1               
000462r 1               ; ---------------------------------------------------------------
000462r 1               ; __near__ unsigned char * __near__ get_string_variable_value (__near__ struct _variable *)
000462r 1               ; ---------------------------------------------------------------
000462r 1               
000462r 1               .segment	"CODE"
000462r 1               
000462r 1               .proc	_get_string_variable_value: near
000462r 1               
000462r 1               .segment	"CODE"
000462r 1               
000462r 1  20 rr rr     	jsr     pushax
000465r 1  20 rr rr     	jsr     ldax0sp
000468r 1  85 rr        	sta     ptr1
00046Ar 1  86 rr        	stx     ptr1+1
00046Cr 1  A0 02        	ldy     #$02
00046Er 1  B1 rr        	lda     (ptr1),y
000470r 1  29 80        	and     #$80
000472r 1  F0 0E        	beq     L00F7
000474r 1  20 rr rr     	jsr     ldax0sp
000477r 1  A0 04        	ldy     #$04
000479r 1  20 rr rr     	jsr     ldaxidx
00047Cr 1  20 rr rr     	jsr     callax
00047Fr 1  4C rr rr     	jmp     incsp2
000482r 1  20 rr rr     L00F7:	jsr     ldax0sp
000485r 1  A0 04        	ldy     #$04
000487r 1  20 rr rr     	jsr     ldaxidx
00048Ar 1  4C rr rr     	jmp     incsp2
00048Dr 1               
00048Dr 1               .endproc
00048Dr 1               
00048Dr 1               ; ---------------------------------------------------------------
00048Dr 1               ; int __near__ get_integer_variable_value (__near__ struct _variable *)
00048Dr 1               ; ---------------------------------------------------------------
00048Dr 1               
00048Dr 1               .segment	"CODE"
00048Dr 1               
00048Dr 1               .proc	_get_integer_variable_value: near
00048Dr 1               
00048Dr 1               .segment	"CODE"
00048Dr 1               
00048Dr 1  20 rr rr     	jsr     pushax
000490r 1  20 rr rr     	jsr     ldax0sp
000493r 1  85 rr        	sta     ptr1
000495r 1  86 rr        	stx     ptr1+1
000497r 1  A0 02        	ldy     #$02
000499r 1  B1 rr        	lda     (ptr1),y
00049Br 1  29 80        	and     #$80
00049Dr 1  F0 0E        	beq     L00FD
00049Fr 1  20 rr rr     	jsr     ldax0sp
0004A2r 1  A0 04        	ldy     #$04
0004A4r 1  20 rr rr     	jsr     ldaxidx
0004A7r 1  20 rr rr     	jsr     callax
0004AAr 1  4C rr rr     	jmp     incsp2
0004ADr 1  20 rr rr     L00FD:	jsr     ldax0sp
0004B0r 1  A0 04        	ldy     #$04
0004B2r 1  20 rr rr     	jsr     ldaxidx
0004B5r 1  4C rr rr     	jmp     incsp2
0004B8r 1               
0004B8r 1               .endproc
0004B8r 1               
0004B8r 1               ; ---------------------------------------------------------------
0004B8r 1               ; __near__ unsigned char * __near__ builtin_var_time_string (void)
0004B8r 1               ; ---------------------------------------------------------------
0004B8r 1               
0004B8r 1               .segment	"CODE"
0004B8r 1               
0004B8r 1               .proc	_builtin_var_time_string: near
0004B8r 1               
0004B8r 1               .segment	"BSS"
000000r 1               
000000r 1               L00A4:
000000r 1  00 00 00 00  	.res	9,$00
000004r 1  00 00 00 00  
000008r 1  00           
000009r 1               
000009r 1               .segment	"CODE"
0004B8r 1               
0004B8r 1  A9 rr        	lda     #<(L00A4)
0004BAr 1  A2 rr        	ldx     #>(L00A4)
0004BCr 1  20 rr rr     	jsr     pushax
0004BFr 1  A9 rr        	lda     #<(L00A7)
0004C1r 1  A2 rr        	ldx     #>(L00A7)
0004C3r 1  20 rr rr     	jsr     pushax
0004C6r 1  A5 rr        	lda     _hours
0004C8r 1  20 rr rr     	jsr     pusha0
0004CBr 1  A5 rr        	lda     _minutes
0004CDr 1  20 rr rr     	jsr     pusha0
0004D0r 1  A5 rr        	lda     _seconds
0004D2r 1  20 rr rr     	jsr     pusha0
0004D5r 1  A0 0A        	ldy     #$0A
0004D7r 1  20 rr rr     	jsr     _sprintf
0004DAr 1  A9 rr        	lda     #<(L00A4)
0004DCr 1  A2 rr        	ldx     #>(L00A4)
0004DEr 1  60           	rts
0004DFr 1               
0004DFr 1               .endproc
0004DFr 1               
0004DFr 1               ; ---------------------------------------------------------------
0004DFr 1               ; int __near__ builtin_var_time_integer (void)
0004DFr 1               ; ---------------------------------------------------------------
0004DFr 1               
0004DFr 1               .segment	"CODE"
0004DFr 1               
0004DFr 1               .proc	_builtin_var_time_integer: near
0004DFr 1               
0004DFr 1               .segment	"CODE"
0004DFr 1               
0004DFr 1  A5 rr        	lda     _millis
0004E1r 1  A6 rr        	ldx     _millis+1
0004E3r 1  60           	rts
0004E4r 1               
0004E4r 1               .endproc
0004E4r 1               
0004E4r 1               ; ---------------------------------------------------------------
0004E4r 1               ; int __near__ builtin_var_random_integer (void)
0004E4r 1               ; ---------------------------------------------------------------
0004E4r 1               
0004E4r 1               .segment	"CODE"
0004E4r 1               
0004E4r 1               .proc	_builtin_var_random_integer: near
0004E4r 1               
0004E4r 1               .segment	"CODE"
0004E4r 1               
0004E4r 1  4C rr rr     	jmp     _rand
0004E7r 1               
0004E7r 1               .endproc
0004E7r 1               
0004E7r 1               
