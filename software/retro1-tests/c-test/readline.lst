ca65 V2.15 - Git f7cdfbf
Main file   : readline.s
Current file: readline.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.15 - Git f7cdfbf
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.15 - Git f7cdfbf"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.import		_strlen
000000r 1               	.export		_readline
000000r 1               	.export		_readline_buffer
000000r 1               	.export		_readline_reedit
000000r 1               	.importzp	_interrupted
000000r 1               	.import		_acia_putc
000000r 1               	.import		_acia_puts
000000r 1               	.import		_acia_put_newline
000000r 1               	.import		_acia_getc
000000r 1               	.export		_insert_character
000000r 1               	.export		_delete_prev_character
000000r 1               	.export		_delete_character
000000r 1               	.export		_delete_all_characters
000000r 1               	.export		_cursor_left
000000r 1               	.export		_cursor_right
000000r 1               	.export		_cursor_start
000000r 1               	.export		_cursor_end
000000r 1               	.export		_buffer_end
000000r 1               	.export		_buffer_pos
000000r 1               	.export		_reedit
000000r 1               
000000r 1               .segment	"DATA"
000000r 1               
000000r 1               _reedit:
000000r 1  00           	.byte	$00
000001r 1               
000001r 1               .segment	"BSS"
000000r 1               
000000r 1               _readline_buffer:
000000r 1  00 00 00 00  	.res	80,$00
000004r 1  00 00 00 00  
000008r 1  00 00 00 00  
000050r 1               _buffer_end:
000050r 1  00 00        	.res	2,$00
000052r 1               _buffer_pos:
000052r 1  00 00        	.res	2,$00
000054r 1               
000054r 1               ; ---------------------------------------------------------------
000054r 1               ; __near__ unsigned char * __near__ readline (unsigned char)
000054r 1               ; ---------------------------------------------------------------
000054r 1               
000054r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_readline: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1  20 rr rr     	jsr     pusha
000003r 1  20 rr rr     	jsr     decsp2
000006r 1  A9 00        	lda     #$00
000008r 1  85 rr        	sta     _interrupted
00000Ar 1  85 rr        	sta     _interrupted+1
00000Cr 1  85 rr        	sta     _interrupted+2
00000Er 1  85 rr        	sta     _interrupted+3
000010r 1  AD rr rr     	lda     _reedit
000013r 1  F0 08        	beq     L0070
000015r 1  A9 00        	lda     #$00
000017r 1  8D rr rr     	sta     _reedit
00001Ar 1  4C rr rr     	jmp     L0015
00001Dr 1  8D rr rr     L0070:	sta     _readline_buffer
000020r 1  A9 rr        	lda     #<(_readline_buffer)
000022r 1  8D rr rr     	sta     _buffer_pos
000025r 1  A9 rr        	lda     #>(_readline_buffer)
000027r 1  8D rr rr     	sta     _buffer_pos+1
00002Ar 1  A9 rr        	lda     #<(_readline_buffer)
00002Cr 1  8D rr rr     	sta     _buffer_end
00002Fr 1  A9 rr        	lda     #>(_readline_buffer)
000031r 1  8D rr rr     	sta     _buffer_end+1
000034r 1  A0 02        L0015:	ldy     #$02
000036r 1  B1 rr        	lda     (sp),y
000038r 1  F0 14        	beq     L0016
00003Ar 1  A5 rr        	lda     _interrupted+3
00003Cr 1  05 rr        	ora     _interrupted+2
00003Er 1  05 rr        	ora     _interrupted+1
000040r 1  05 rr        	ora     _interrupted+0
000042r 1  F0 0A        	beq     L0016
000044r 1  20 rr rr     	jsr     _acia_put_newline
000047r 1  A9 rr        	lda     #<(_readline_buffer)
000049r 1  A2 rr        	ldx     #>(_readline_buffer)
00004Br 1  4C rr rr     	jmp     incsp3
00004Er 1  20 rr rr     L0016:	jsr     _acia_getc
000051r 1  A0 01        	ldy     #$01
000053r 1  91 rr        	sta     (sp),y
000055r 1  20 rr rr     	jsr     _insert_character
000058r 1  4C rr rr     	jmp     L0015
00005Br 1               
00005Br 1               .endproc
00005Br 1               
00005Br 1               ; ---------------------------------------------------------------
00005Br 1               ; void __near__ readline_reedit (void)
00005Br 1               ; ---------------------------------------------------------------
00005Br 1               
00005Br 1               .segment	"CODE"
00005Br 1               
00005Br 1               .proc	_readline_reedit: near
00005Br 1               
00005Br 1               .segment	"CODE"
00005Br 1               
00005Br 1  A9 rr        	lda     #<(_readline_buffer)
00005Dr 1  A2 rr        	ldx     #>(_readline_buffer)
00005Fr 1  20 rr rr     	jsr     _acia_puts
000062r 1  A0 FF        	ldy     #$FF
000064r 1  C8           L006A:	iny
000065r 1  B9 rr rr     	lda     _readline_buffer,y
000068r 1  D0 FA        	bne     L006A
00006Ar 1  98           	tya
00006Br 1  18           	clc
00006Cr 1  69 rr        	adc     #<(_readline_buffer)
00006Er 1  A8           	tay
00006Fr 1  A9 00        	lda     #$00
000071r 1  69 rr        	adc     #>(_readline_buffer)
000073r 1  AA           	tax
000074r 1  98           	tya
000075r 1  8D rr rr     	sta     _buffer_pos
000078r 1  8E rr rr     	stx     _buffer_pos+1
00007Br 1  8D rr rr     	sta     _buffer_end
00007Er 1  8E rr rr     	stx     _buffer_end+1
000081r 1  A9 01        	lda     #$01
000083r 1  8D rr rr     	sta     _reedit
000086r 1  60           	rts
000087r 1               
000087r 1               .endproc
000087r 1               
000087r 1               ; ---------------------------------------------------------------
000087r 1               ; void __near__ insert_character (unsigned char)
000087r 1               ; ---------------------------------------------------------------
000087r 1               
000087r 1               .segment	"CODE"
000087r 1               
000087r 1               .proc	_insert_character: near
000087r 1               
000087r 1               .segment	"CODE"
000087r 1               
000087r 1  20 rr rr     	jsr     pusha
00008Ar 1  AD rr rr     	lda     _buffer_end
00008Dr 1  38           	sec
00008Er 1  E9 rr        	sbc     #<(_readline_buffer)
000090r 1  48           	pha
000091r 1  AD rr rr     	lda     _buffer_end+1
000094r 1  E9 rr        	sbc     #>(_readline_buffer)
000096r 1  AA           	tax
000097r 1  68           	pla
000098r 1  C9 4F        	cmp     #$4F
00009Ar 1  8A           	txa
00009Br 1  E9 00        	sbc     #$00
00009Dr 1  50 02        	bvc     L0024
00009Fr 1  49 80        	eor     #$80
0000A1r 1  10 26        L0024:	bpl     L0022
0000A3r 1  A0 00        	ldy     #$00
0000A5r 1  B1 rr        	lda     (sp),y
0000A7r 1  20 rr rr     	jsr     _acia_putc
0000AAr 1  EE rr rr     	inc     _buffer_pos
0000ADr 1  D0 03        	bne     L0028
0000AFr 1  EE rr rr     	inc     _buffer_pos+1
0000B2r 1  EE rr rr     L0028:	inc     _buffer_end
0000B5r 1  D0 03        	bne     L002A
0000B7r 1  EE rr rr     	inc     _buffer_end+1
0000BAr 1  AD rr rr     L002A:	lda     _buffer_end
0000BDr 1  85 rr        	sta     ptr1
0000BFr 1  AD rr rr     	lda     _buffer_end+1
0000C2r 1  85 rr        	sta     ptr1+1
0000C4r 1  A9 00        	lda     #$00
0000C6r 1  A8           	tay
0000C7r 1  91 rr        	sta     (ptr1),y
0000C9r 1  4C rr rr     L0022:	jmp     incsp1
0000CCr 1               
0000CCr 1               .endproc
0000CCr 1               
0000CCr 1               ; ---------------------------------------------------------------
0000CCr 1               ; void __near__ delete_prev_character (void)
0000CCr 1               ; ---------------------------------------------------------------
0000CCr 1               
0000CCr 1               .segment	"CODE"
0000CCr 1               
0000CCr 1               .proc	_delete_prev_character: near
0000CCr 1               
0000CCr 1               .segment	"CODE"
0000CCr 1               
0000CCr 1  AD rr rr     	lda     _buffer_pos
0000CFr 1  38           	sec
0000D0r 1  E9 rr        	sbc     #<(_readline_buffer)
0000D2r 1  85 rr        	sta     tmp1
0000D4r 1  AD rr rr     	lda     _buffer_pos+1
0000D7r 1  E9 rr        	sbc     #>(_readline_buffer)
0000D9r 1  05 rr        	ora     tmp1
0000DBr 1  90 64        	bcc     L0038
0000DDr 1  F0 62        	beq     L0038
0000DFr 1  AD rr rr     	lda     _buffer_end
0000E2r 1  AE rr rr     	ldx     _buffer_end+1
0000E5r 1  EC rr rr     	cpx     _buffer_pos+1
0000E8r 1  D0 2C        	bne     L0030
0000EAr 1  CD rr rr     	cmp     _buffer_pos
0000EDr 1  D0 27        	bne     L0030
0000EFr 1  AD rr rr     	lda     _buffer_pos
0000F2r 1  38           	sec
0000F3r 1  E9 01        	sbc     #$01
0000F5r 1  8D rr rr     	sta     _buffer_pos
0000F8r 1  B0 03        	bcs     L0033
0000FAr 1  CE rr rr     	dec     _buffer_pos+1
0000FDr 1  AD rr rr     L0033:	lda     _buffer_end
000100r 1  38           	sec
000101r 1  E9 01        	sbc     #$01
000103r 1  8D rr rr     	sta     _buffer_end
000106r 1  B0 03        	bcs     L0035
000108r 1  CE rr rr     	dec     _buffer_end+1
00010Br 1  AD rr rr     L0035:	lda     _buffer_pos
00010Er 1  85 rr        	sta     ptr1
000110r 1  AD rr rr     	lda     _buffer_pos+1
000113r 1  4C rr rr     	jmp     L0075
000116r 1  AD rr rr     L0030:	lda     _buffer_pos
000119r 1  38           	sec
00011Ar 1  E9 01        	sbc     #$01
00011Cr 1  8D rr rr     	sta     _buffer_pos
00011Fr 1  B0 03        	bcs     L003A
000121r 1  CE rr rr     	dec     _buffer_pos+1
000124r 1  AD rr rr     L003A:	lda     _buffer_end
000127r 1  38           	sec
000128r 1  E9 01        	sbc     #$01
00012Ar 1  8D rr rr     	sta     _buffer_end
00012Dr 1  B0 03        	bcs     L003C
00012Fr 1  CE rr rr     	dec     _buffer_end+1
000132r 1  AD rr rr     L003C:	lda     _buffer_end
000135r 1  85 rr        	sta     ptr1
000137r 1  AD rr rr     	lda     _buffer_end+1
00013Ar 1  85 rr        L0075:	sta     ptr1+1
00013Cr 1  A9 00        	lda     #$00
00013Er 1  A8           	tay
00013Fr 1  91 rr        	sta     (ptr1),y
000141r 1  60           L0038:	rts
000142r 1               
000142r 1               .endproc
000142r 1               
000142r 1               ; ---------------------------------------------------------------
000142r 1               ; void __near__ delete_character (void)
000142r 1               ; ---------------------------------------------------------------
000142r 1               
000142r 1               .segment	"CODE"
000142r 1               
000142r 1               .proc	_delete_character: near
000142r 1               
000142r 1               .segment	"CODE"
000142r 1               
000142r 1  AD rr rr     	lda     _buffer_pos
000145r 1  CD rr rr     	cmp     _buffer_end
000148r 1  AD rr rr     	lda     _buffer_pos+1
00014Br 1  ED rr rr     	sbc     _buffer_end+1
00014Er 1  B0 22        	bcs     L0040
000150r 1  A9 20        	lda     #$20
000152r 1  20 rr rr     	jsr     _acia_putc
000155r 1  AD rr rr     	lda     _buffer_end
000158r 1  38           	sec
000159r 1  E9 01        	sbc     #$01
00015Br 1  8D rr rr     	sta     _buffer_end
00015Er 1  B0 03        	bcs     L0045
000160r 1  CE rr rr     	dec     _buffer_end+1
000163r 1  AD rr rr     L0045:	lda     _buffer_end
000166r 1  85 rr        	sta     ptr1
000168r 1  AD rr rr     	lda     _buffer_end+1
00016Br 1  85 rr        	sta     ptr1+1
00016Dr 1  A9 00        	lda     #$00
00016Fr 1  A8           	tay
000170r 1  91 rr        	sta     (ptr1),y
000172r 1  60           L0040:	rts
000173r 1               
000173r 1               .endproc
000173r 1               
000173r 1               ; ---------------------------------------------------------------
000173r 1               ; void __near__ delete_all_characters (void)
000173r 1               ; ---------------------------------------------------------------
000173r 1               
000173r 1               .segment	"CODE"
000173r 1               
000173r 1               .proc	_delete_all_characters: near
000173r 1               
000173r 1               .segment	"CODE"
000173r 1               
000173r 1  4C rr rr     	jmp     L004B
000176r 1  20 rr rr     L0049:	jsr     _delete_prev_character
000179r 1  A9 rr        L004B:	lda     #<(_readline_buffer)
00017Br 1  A2 rr        	ldx     #>(_readline_buffer)
00017Dr 1  EC rr rr     	cpx     _buffer_pos+1
000180r 1  D0 F4        	bne     L0049
000182r 1  CD rr rr     	cmp     _buffer_pos
000185r 1  D0 EF        	bne     L0049
000187r 1  60           	rts
000188r 1               
000188r 1               .endproc
000188r 1               
000188r 1               ; ---------------------------------------------------------------
000188r 1               ; void __near__ cursor_left (void)
000188r 1               ; ---------------------------------------------------------------
000188r 1               
000188r 1               .segment	"CODE"
000188r 1               
000188r 1               .proc	_cursor_left: near
000188r 1               
000188r 1               .segment	"CODE"
000188r 1               
000188r 1  AD rr rr     	lda     _buffer_pos
00018Br 1  38           	sec
00018Cr 1  E9 rr        	sbc     #<(_readline_buffer)
00018Er 1  85 rr        	sta     tmp1
000190r 1  AD rr rr     	lda     _buffer_pos+1
000193r 1  E9 rr        	sbc     #>(_readline_buffer)
000195r 1  05 rr        	ora     tmp1
000197r 1  90 10        	bcc     L004F
000199r 1  F0 0E        	beq     L004F
00019Br 1  AD rr rr     	lda     _buffer_pos
00019Er 1  38           	sec
00019Fr 1  E9 01        	sbc     #$01
0001A1r 1  8D rr rr     	sta     _buffer_pos
0001A4r 1  B0 03        	bcs     L004F
0001A6r 1  CE rr rr     	dec     _buffer_pos+1
0001A9r 1  60           L004F:	rts
0001AAr 1               
0001AAr 1               .endproc
0001AAr 1               
0001AAr 1               ; ---------------------------------------------------------------
0001AAr 1               ; void __near__ cursor_right (void)
0001AAr 1               ; ---------------------------------------------------------------
0001AAr 1               
0001AAr 1               .segment	"CODE"
0001AAr 1               
0001AAr 1               .proc	_cursor_right: near
0001AAr 1               
0001AAr 1               .segment	"CODE"
0001AAr 1               
0001AAr 1  AD rr rr     	lda     _buffer_pos
0001ADr 1  CD rr rr     	cmp     _buffer_end
0001B0r 1  AD rr rr     	lda     _buffer_pos+1
0001B3r 1  ED rr rr     	sbc     _buffer_end+1
0001B6r 1  B0 08        	bcs     L0054
0001B8r 1  EE rr rr     	inc     _buffer_pos
0001BBr 1  D0 03        	bne     L0054
0001BDr 1  EE rr rr     	inc     _buffer_pos+1
0001C0r 1  60           L0054:	rts
0001C1r 1               
0001C1r 1               .endproc
0001C1r 1               
0001C1r 1               ; ---------------------------------------------------------------
0001C1r 1               ; void __near__ cursor_start (void)
0001C1r 1               ; ---------------------------------------------------------------
0001C1r 1               
0001C1r 1               .segment	"CODE"
0001C1r 1               
0001C1r 1               .proc	_cursor_start: near
0001C1r 1               
0001C1r 1               .segment	"CODE"
0001C1r 1               
0001C1r 1  4C rr rr     	jmp     L005B
0001C4r 1  20 rr rr     L0059:	jsr     _cursor_left
0001C7r 1  AD rr rr     L005B:	lda     _buffer_pos
0001CAr 1  38           	sec
0001CBr 1  E9 rr        	sbc     #<(_readline_buffer)
0001CDr 1  85 rr        	sta     tmp1
0001CFr 1  AD rr rr     	lda     _buffer_pos+1
0001D2r 1  E9 rr        	sbc     #>(_readline_buffer)
0001D4r 1  05 rr        	ora     tmp1
0001D6r 1  F0 02        	beq     L0077
0001D8r 1  B0 EA        	bcs     L0059
0001DAr 1  60           L0077:	rts
0001DBr 1               
0001DBr 1               .endproc
0001DBr 1               
0001DBr 1               ; ---------------------------------------------------------------
0001DBr 1               ; void __near__ cursor_end (void)
0001DBr 1               ; ---------------------------------------------------------------
0001DBr 1               
0001DBr 1               .segment	"CODE"
0001DBr 1               
0001DBr 1               .proc	_cursor_end: near
0001DBr 1               
0001DBr 1               .segment	"CODE"
0001DBr 1               
0001DBr 1  4C rr rr     	jmp     L0061
0001DEr 1  20 rr rr     L005F:	jsr     _cursor_right
0001E1r 1  AD rr rr     L0061:	lda     _buffer_pos
0001E4r 1  CD rr rr     	cmp     _buffer_end
0001E7r 1  AD rr rr     	lda     _buffer_pos+1
0001EAr 1  ED rr rr     	sbc     _buffer_end+1
0001EDr 1  90 EF        	bcc     L005F
0001EFr 1  60           	rts
0001F0r 1               
0001F0r 1               .endproc
0001F0r 1               
0001F0r 1               
