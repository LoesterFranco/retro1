ca65 V2.15 - Git f7cdfbf
Main file   : basic.s
Current file: basic.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.15 - Git f7cdfbf
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.15 - Git f7cdfbf"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.import		_strchr
000000r 1               	.import		_strcmp
000000r 1               	.import		_strcpy
000000r 1               	.import		_strlen
000000r 1               	.import		_strncmp
000000r 1               	.import		_strncpy
000000r 1               	.import		_strncasecmp
000000r 1               	.import		_sprintf
000000r 1               	.import		_sscanf
000000r 1               	.import		_malloc
000000r 1               	.import		_free
000000r 1               	.import		__heapmemavail
000000r 1               	.import		_srand
000000r 1               	.import		_isalnum
000000r 1               	.import		_isalpha
000000r 1               	.import		_isdigit
000000r 1               	.import		_led_set
000000r 1               	.export		_basic_init
000000r 1               	.export		_interpret
000000r 1               	.export		_syntax_error
000000r 1               	.export		_syntax_error_msg_with_arg
000000r 1               	.export		_print_buffer
000000r 1               	.import		_acia_putc
000000r 1               	.import		_acia_puts
000000r 1               	.import		_acia_put_newline
000000r 1               	.import		_acia_gets
000000r 1               	.import		_readline
000000r 1               	.import		_readline_buffer
000000r 1               	.import		_readline_reedit
000000r 1               	.importzp	_interrupted
000000r 1               	.import		_init_builtin_variables
000000r 1               	.import		_find_variable
000000r 1               	.import		_create_variable
000000r 1               	.import		_delete_variable
000000r 1               	.import		_clear_variables
000000r 1               	.import		_print_all_variables
000000r 1               	.import		_get_string_variable_value
000000r 1               	.import		_get_integer_variable_value
000000r 1               	.importzp	_millis
000000r 1               	.export		_execute
000000r 1               	.export		_print_ready
000000r 1               	.export		_print_interrupted
000000r 1               	.export		_parse_number_expression
000000r 1               	.export		_parse_number_term
000000r 1               	.export		_parse_integer
000000r 1               	.export		_parse_string_expression
000000r 1               	.export		_parse_string
000000r 1               	.export		_parse_variable
000000r 1               	.export		_next_token
000000r 1               	.export		_consume_token
000000r 1               	.export		_skip_whitespace
000000r 1               	.export		_find_args
000000r 1               	.export		_find_keyword
000000r 1               	.export		_syntax_error_invalid_token
000000r 1               	.export		_delete_line
000000r 1               	.export		_create_line
000000r 1               	.export		_cmd_goto
000000r 1               	.export		_cmd_run
000000r 1               	.export		_cmd_led
000000r 1               	.export		_cmd_print
000000r 1               	.export		_cmd_put
000000r 1               	.export		_cmd_list
000000r 1               	.export		_cmd_new
000000r 1               	.export		_cmd_free
000000r 1               	.export		_cmd_load
000000r 1               	.export		_cmd_sleep
000000r 1               	.export		_cmd_let
000000r 1               	.export		_cmd_input
000000r 1               	.export		_cmd_seed
000000r 1               	.export		_cmd_if
000000r 1               	.export		_cmd_end
000000r 1               	.export		_cmd_edit
000000r 1               	.export		_cmd_rem
000000r 1               	.export		_cmd_write
000000r 1               	.export		_command_functions
000000r 1               	.export		_keywords
000000r 1               	.export		_parsebuf
000000r 1               	.export		_tmpbuf
000000r 1               	.export		_program
000000r 1               	.export		_current_line
000000r 1               	.export		_current_line_changed
000000r 1               	.export		_running
000000r 1               	.export		_error
000000r 1               	.export		_token_strings
000000r 1               	.export		_cmd_clear
000000r 1               
000000r 1               .segment	"DATA"
000000r 1               
000000r 1               _keywords:
000000r 1  rr rr        	.addr	L001A
000002r 1  rr rr        	.addr	L001C
000004r 1  rr rr        	.addr	L001E
000006r 1  rr rr        	.addr	L0020
000008r 1  rr rr        	.addr	L0022
00000Ar 1  rr rr        	.addr	L0024
00000Cr 1  rr rr        	.addr	L0026
00000Er 1  rr rr        	.addr	L0028
000010r 1  rr rr        	.addr	L002A
000012r 1  rr rr        	.addr	L002C
000014r 1  rr rr        	.addr	L002E
000016r 1  rr rr        	.addr	L0030
000018r 1  rr rr        	.addr	L0032
00001Ar 1  rr rr        	.addr	L0034
00001Cr 1  rr rr        	.addr	L0036
00001Er 1  rr rr        	.addr	L0038
000020r 1  rr rr        	.addr	L003A
000022r 1  rr rr        	.addr	L003C
000024r 1  rr rr        	.addr	L003E
000026r 1  00 00        	.word	$0000
000028r 1               _program:
000028r 1  00 00        	.word	$0000
00002Ar 1               _running:
00002Ar 1  00           	.byte	$00
00002Br 1               _error:
00002Br 1  00           	.byte	$00
00002Cr 1               _token_strings:
00002Cr 1  rr rr        	.addr	L0047
00002Er 1  rr rr        	.addr	L0049
000030r 1  rr rr        	.addr	L004B
000032r 1  rr rr        	.addr	L004D
000034r 1  rr rr        	.addr	L004F
000036r 1  rr rr        	.addr	L0051
000038r 1  rr rr        	.addr	L0053
00003Ar 1  rr rr        	.addr	L0055
00003Cr 1  rr rr        	.addr	L0057
00003Er 1  rr rr        	.addr	L0059
000040r 1  rr rr        	.addr	L005B
000042r 1  rr rr        	.addr	L005D
000044r 1  rr rr        	.addr	L005F
000046r 1  rr rr        	.addr	L0061
000048r 1  rr rr        	.addr	L0063
00004Ar 1  rr rr        	.addr	L0065
00004Cr 1  rr rr        	.addr	L0067
00004Er 1  rr rr        	.addr	L0069
000050r 1  rr rr        	.addr	L006B
000052r 1  rr rr        	.addr	L006D
000054r 1  rr rr        	.addr	L006F
000056r 1               
000056r 1               .segment	"RODATA"
000000r 1               
000000r 1               _command_functions:
000000r 1  rr rr        	.addr	_cmd_goto
000002r 1  rr rr        	.addr	_cmd_run
000004r 1  rr rr        	.addr	_cmd_led
000006r 1  rr rr        	.addr	_cmd_print
000008r 1  rr rr        	.addr	_cmd_put
00000Ar 1  rr rr        	.addr	_cmd_list
00000Cr 1  rr rr        	.addr	_cmd_new
00000Er 1  rr rr        	.addr	_cmd_free
000010r 1  rr rr        	.addr	_cmd_load
000012r 1  rr rr        	.addr	_cmd_sleep
000014r 1  rr rr        	.addr	_cmd_let
000016r 1  rr rr        	.addr	_cmd_input
000018r 1  rr rr        	.addr	_cmd_seed
00001Ar 1  rr rr        	.addr	_cmd_if
00001Cr 1  rr rr        	.addr	_cmd_end
00001Er 1  rr rr        	.addr	_cmd_edit
000020r 1  rr rr        	.addr	_cmd_rem
000022r 1  rr rr        	.addr	_cmd_write
000024r 1               L04F4:
000024r 1  49 6E 76 61  	.byte	$49,$6E,$76,$61,$6C,$69,$64,$20,$6E,$75,$6D,$62,$65,$72,$20,$65
000028r 1  6C 69 64 20  
00002Cr 1  6E 75 6D 62  
000034r 1  78 70 72 65  	.byte	$78,$70,$72,$65,$73,$73,$69,$6F,$6E,$00
000038r 1  73 73 69 6F  
00003Cr 1  6E 00        
00003Er 1               L01AB:
00003Er 1  49 6E 76 61  	.byte	$49,$6E,$76,$61,$6C,$69,$64,$20,$73,$74,$72,$69,$6E,$67,$20,$65
000042r 1  6C 69 64 20  
000046r 1  73 74 72 69  
00004Er 1  78 70 72 65  	.byte	$78,$70,$72,$65,$73,$73,$69,$6F,$6E,$00
000052r 1  73 73 69 6F  
000056r 1  6E 00        
000058r 1               L017A	:=	L04F4+0
000058r 1               L01C3:
000058r 1  56 61 72 69  	.byte	$56,$61,$72,$69,$61,$62,$6C,$65,$20,$6E,$6F,$74,$20,$66,$6F,$75
00005Cr 1  61 62 6C 65  
000060r 1  20 6E 6F 74  
000068r 1  6E 64 00     	.byte	$6E,$64,$00
00006Br 1               L0192	:=	L01C3+0
00006Br 1               L0369:
00006Br 1  55 6E 6B 6E  	.byte	$55,$6E,$6B,$6E,$6F,$77,$6E,$20,$63,$6F,$6D,$6D,$61,$6E,$64,$21
00006Fr 1  6F 77 6E 20  
000073r 1  63 6F 6D 6D  
00007Br 1  0A 00        	.byte	$0A,$00
00007Dr 1               L00AD	:=	L0369+0
00007Dr 1               L0554:
00007Dr 1  49 6E 76 61  	.byte	$49,$6E,$76,$61,$6C,$69,$64,$20,$61,$72,$67,$75,$6D,$65,$6E,$74
000081r 1  6C 69 64 20  
000085r 1  61 72 67 75  
00008Dr 1  00           	.byte	$00
00008Er 1               L04FC	:=	L0554+0
00008Er 1               L0472	:=	L0554+0
00008Er 1               L0501	:=	L0554+0
00008Er 1               L0051:
00008Er 1  73 74 72 69  	.byte	$73,$74,$72,$69,$6E,$67,$20,$76,$61,$72,$69,$61,$62,$6C,$65,$00
000092r 1  6E 67 20 76  
000096r 1  61 72 69 61  
00009Er 1               L004F:
00009Er 1  6E 75 6D 62  	.byte	$6E,$75,$6D,$62,$65,$72,$20,$76,$61,$72,$69,$61,$62,$6C,$65,$00
0000A2r 1  65 72 20 76  
0000A6r 1  61 72 69 61  
0000AEr 1               L0432:
0000AEr 1  25 75 20 62  	.byte	$25,$75,$20,$62,$79,$74,$65,$73,$20,$66,$72,$65,$65,$2E,$0A,$00
0000B2r 1  79 74 65 73  
0000B6r 1  20 66 72 65  
0000BEr 1               L031D:
0000BEr 1  49 6E 76 61  	.byte	$49,$6E,$76,$61,$6C,$69,$64,$20,$74,$6F,$6B,$65,$6E,$3A,$20,$00
0000C2r 1  6C 69 64 20  
0000C6r 1  74 6F 6B 65  
0000CEr 1               L0540:
0000CEr 1  4C 69 6E 65  	.byte	$4C,$69,$6E,$65,$20,$6E,$6F,$74,$20,$66,$6F,$75,$6E,$64,$00
0000D2r 1  20 6E 6F 74  
0000D6r 1  20 66 6F 75  
0000DDr 1               L041B	:=	L0540+0
0000DDr 1               L0464:
0000DDr 1  46 69 6C 65  	.byte	$46,$69,$6C,$65,$20,$6E,$6F,$74,$20,$66,$6F,$75,$6E,$64,$00
0000E1r 1  20 6E 6F 74  
0000E5r 1  20 66 6F 75  
0000ECr 1               L0047:
0000ECr 1  55 6E 6B 6E  	.byte	$55,$6E,$6B,$6E,$6F,$77,$6E,$20,$74,$6F,$6B,$65,$6E,$00
0000F0r 1  6F 77 6E 20  
0000F4r 1  74 6F 6B 65  
0000FAr 1               L04F8:
0000FAr 1  45 6E 74 65  	.byte	$45,$6E,$74,$65,$72,$20,$61,$67,$61,$69,$6E,$3A,$20,$00
0000FEr 1  72 20 61 67  
000102r 1  61 69 6E 3A  
000108r 1               L00B7:
000108r 1  49 6E 74 65  	.byte	$49,$6E,$74,$65,$72,$72,$75,$70,$74,$65,$64,$2E,$0A,$00
00010Cr 1  72 72 75 70  
000110r 1  74 65 64 2E  
000116r 1               L0316:
000116r 1  53 79 6E 74  	.byte	$53,$79,$6E,$74,$61,$78,$20,$65,$72,$72,$6F,$72,$00
00011Ar 1  61 78 20 65  
00011Er 1  72 72 6F 72  
000123r 1               L043F:
000123r 1  4C 6F 61 64  	.byte	$4C,$6F,$61,$64,$69,$6E,$67,$2E,$2E,$2E,$00
000127r 1  69 6E 67 2E  
00012Br 1  2E 2E 00     
00012Er 1               L03D6:
00012Er 1  25 75 20 25  	.byte	$25,$75,$20,$25,$73,$20,$25,$73,$0A,$00
000132r 1  73 20 25 73  
000136r 1  0A 00        
000138r 1               L045D:
000138r 1  21 4E 4F 54  	.byte	$21,$4E,$4F,$54,$46,$4F,$55,$4E,$44,$00
00013Cr 1  46 4F 55 4E  
000140r 1  44 00        
000142r 1               L0536:
000142r 1  25 75 20 25  	.byte	$25,$75,$20,$25,$73,$20,$25,$73,$00
000146r 1  73 20 25 73  
00014Ar 1  00           
00014Br 1               L028D:
00014Br 1  6F 6E 65 72  	.byte	$6F,$6E,$65,$72,$72,$6F,$72,$00
00014Fr 1  72 6F 72 00  
000153r 1               L00B3:
000153r 1  52 65 61 64  	.byte	$52,$65,$61,$64,$79,$2E,$0A,$00
000157r 1  79 2E 0A 00  
00015Br 1               L006F	:=	L028D+0
00015Br 1               L0442:
00015Br 1  2A 4C 4F 41  	.byte	$2A,$4C,$4F,$41,$44,$20,$22,$00
00015Fr 1  44 20 22 00  
000163r 1               L026E	:=	L028D+0
000163r 1               L004D:
000163r 1  73 74 72 69  	.byte	$73,$74,$72,$69,$6E,$67,$00
000167r 1  6E 67 00     
00016Ar 1               L004B:
00016Ar 1  64 69 67 69  	.byte	$64,$69,$67,$69,$74,$73,$00
00016Er 1  74 73 00     
000171r 1               L044E:
000171r 1  2A 4E 45 58  	.byte	$2A,$4E,$45,$58,$54,$0A,$00
000175r 1  54 0A 00     
000178r 1               L003E:
000178r 1  77 72 69 74  	.byte	$77,$72,$69,$74,$65,$00
00017Cr 1  65 00        
00017Er 1               L0032:
00017Er 1  69 6E 70 75  	.byte	$69,$6E,$70,$75,$74,$00
000182r 1  74 00        
000184r 1               L002C:
000184r 1  73 6C 65 65  	.byte	$73,$6C,$65,$65,$70,$00
000188r 1  70 00        
00018Ar 1               L0020:
00018Ar 1  70 72 69 6E  	.byte	$70,$72,$69,$6E,$74,$00
00018Er 1  74 00        
000190r 1               L0455:
000190r 1  2A 45 4F 46  	.byte	$2A,$45,$4F,$46,$00
000194r 1  00           
000195r 1               L003A:
000195r 1  65 64 69 74  	.byte	$65,$64,$69,$74,$00
000199r 1  00           
00019Ar 1               L0034:
00019Ar 1  73 65 65 64  	.byte	$73,$65,$65,$64,$00
00019Er 1  00           
00019Fr 1               L0306:
00019Fr 1  25 75 3A 20  	.byte	$25,$75,$3A,$20,$00
0001A3r 1  00           
0001A4r 1               L0263:
0001A4r 1  74 68 65 6E  	.byte	$74,$68,$65,$6E,$00
0001A8r 1  00           
0001A9r 1               L002E:
0001A9r 1  68 6F 6D 65  	.byte	$68,$6F,$6D,$65,$00
0001ADr 1  00           
0001AEr 1               L002A:
0001AEr 1  6C 6F 61 64  	.byte	$6C,$6F,$61,$64,$00
0001B2r 1  00           
0001B3r 1               L0028:
0001B3r 1  66 72 65 65  	.byte	$66,$72,$65,$65,$00
0001B7r 1  00           
0001B8r 1               L006D	:=	L0263+0
0001B8r 1               L0284	:=	L0263+0
0001B8r 1               L001A:
0001B8r 1  67 6F 74 6F  	.byte	$67,$6F,$74,$6F,$00
0001BCr 1  00           
0001BDr 1               L0024:
0001BDr 1  6C 69 73 74  	.byte	$6C,$69,$73,$74,$00
0001C1r 1  00           
0001C2r 1               L0026:
0001C2r 1  6E 65 77 00  	.byte	$6E,$65,$77,$00
0001C6r 1               L001E:
0001C6r 1  6C 65 64 00  	.byte	$6C,$65,$64,$00
0001CAr 1               L0022	:=	L0032+2
0001CAr 1               L0030:
0001CAr 1  6C 65 74 00  	.byte	$6C,$65,$74,$00
0001CEr 1               L0038:
0001CEr 1  65 6E 64 00  	.byte	$65,$6E,$64,$00
0001D2r 1               L003C:
0001D2r 1  72 65 6D 00  	.byte	$72,$65,$6D,$00
0001D6r 1               L047E:
0001D6r 1  25 75 6C 00  	.byte	$25,$75,$6C,$00
0001DAr 1               L0377:
0001DAr 1  6F 66 66 00  	.byte	$6F,$66,$66,$00
0001DEr 1               L001C:
0001DEr 1  72 75 6E 00  	.byte	$72,$75,$6E,$00
0001E2r 1               L036E	:=	L04F4+23
0001E2r 1               L0409:
0001E2r 1  25 75 00     	.byte	$25,$75,$00
0001E5r 1               L039C:
0001E5r 1  25 64 00     	.byte	$25,$64,$00
0001E8r 1               L03BC	:=	L0409+0
0001E8r 1               L01EA	:=	L039C+0
0001E8r 1               L0063:
0001E8r 1  21 3D 00     	.byte	$21,$3D,$00
0001EBr 1               L0061:
0001EBr 1  3D 3D 00     	.byte	$3D,$3D,$00
0001EEr 1               L0312	:=	L0369+15
0001EEr 1               L0447:
0001EEr 1  22 0A 00     	.byte	$22,$0A,$00
0001F1r 1               L0036:
0001F1r 1  69 66 00     	.byte	$69,$66,$00
0001F4r 1               L0529	:=	L0409+0
0001F4r 1               L0085	:=	L0409+0
0001F4r 1               L006B:
0001F4r 1  3E 3D 00     	.byte	$3E,$3D,$00
0001F7r 1               L0067:
0001F7r 1  3C 3D 00     	.byte	$3C,$3D,$00
0001FAr 1               L0069:
0001FAr 1  3E 00        	.byte	$3E,$00
0001FCr 1               L0053	:=	L0063+1
0001FCr 1               L0049:
0001FCr 1  3B 00        	.byte	$3B,$00
0001FEr 1               L0057:
0001FEr 1  2D 00        	.byte	$2D,$00
000200r 1               L0059:
000200r 1  2A 00        	.byte	$2A,$00
000202r 1               L005B:
000202r 1  2F 00        	.byte	$2F,$00
000204r 1               L005D:
000204r 1  25 00        	.byte	$25,$00
000206r 1               L005F:
000206r 1  2C 00        	.byte	$2C,$00
000208r 1               L0065:
000208r 1  3C 00        	.byte	$3C,$00
00020Ar 1               L0055:
00020Ar 1  2B 00        	.byte	$2B,$00
00020Cr 1               
00020Cr 1               .segment	"BSS"
000000r 1               
000000r 1               _print_buffer:
000000r 1  00 00 00 00  	.res	41,$00
000004r 1  00 00 00 00  
000008r 1  00 00 00 00  
000029r 1               _parsebuf:
000029r 1  00 00 00 00  	.res	256,$00
00002Dr 1  00 00 00 00  
000031r 1  00 00 00 00  
000129r 1               _tmpbuf:
000129r 1  00 00 00 00  	.res	256,$00
00012Dr 1  00 00 00 00  
000131r 1  00 00 00 00  
000229r 1               _current_line:
000229r 1  00 00        	.res	2,$00
00022Br 1               _current_line_changed:
00022Br 1  00           	.res	1,$00
00022Cr 1               
00022Cr 1               ; ---------------------------------------------------------------
00022Cr 1               ; void __near__ basic_init (void)
00022Cr 1               ; ---------------------------------------------------------------
00022Cr 1               
00022Cr 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_basic_init: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1  4C rr rr     	jmp     _init_builtin_variables
000003r 1               
000003r 1               .endproc
000003r 1               
000003r 1               ; ---------------------------------------------------------------
000003r 1               ; void __near__ interpret (__near__ unsigned char *)
000003r 1               ; ---------------------------------------------------------------
000003r 1               
000003r 1               .segment	"CODE"
000003r 1               
000003r 1               .proc	_interpret: near
000003r 1               
000003r 1               .segment	"CODE"
000003r 1               
000003r 1  20 rr rr     	jsr     pushax
000006r 1  20 rr rr     	jsr     pushw0sp
000009r 1  20 rr rr     	jsr     decsp2
00000Cr 1  A9 00        	lda     #$00
00000Er 1  8D rr rr     	sta     _error
000011r 1  8D rr rr     	sta     _current_line
000014r 1  8D rr rr     	sta     _current_line+1
000017r 1  8D rr rr     	sta     _running
00001Ar 1  A0 05        	ldy     #$05
00001Cr 1  20 rr rr     	jsr     ldaxysp
00001Fr 1  20 rr rr     	jsr     _strlen
000022r 1  E0 00        	cpx     #$00
000024r 1  D0 04        	bne     L0557
000026r 1  C9 00        	cmp     #$00
000028r 1  F0 72        	beq     L0097
00002Ar 1  A0 05        L0557:	ldy     #$05
00002Cr 1  20 rr rr     	jsr     ldaxysp
00002Fr 1  85 rr        	sta     ptr1
000031r 1  86 rr        	stx     ptr1+1
000033r 1  A0 00        	ldy     #$00
000035r 1  B1 rr        	lda     (ptr1),y
000037r 1  A2 00        	ldx     #$00
000039r 1  20 rr rr     	jsr     _isdigit
00003Cr 1  86 rr        	stx     tmp1
00003Er 1  05 rr        	ora     tmp1
000040r 1  F0 52        	beq     L007F
000042r 1  A0 07        	ldy     #$07
000044r 1  20 rr rr     	jsr     pushwysp
000047r 1  A9 rr        	lda     #<(L0085)
000049r 1  A2 rr        	ldx     #>(L0085)
00004Br 1  20 rr rr     	jsr     pushax
00004Er 1  A9 04        	lda     #$04
000050r 1  20 rr rr     	jsr     leaa0sp
000053r 1  20 rr rr     	jsr     pushax
000056r 1  A0 06        	ldy     #$06
000058r 1  20 rr rr     	jsr     _sscanf
00005Br 1  A0 07        	ldy     #$07
00005Dr 1  20 rr rr     	jsr     pushwysp
000060r 1  A2 00        	ldx     #$00
000062r 1  A9 20        	lda     #$20
000064r 1  20 rr rr     	jsr     _strchr
000067r 1  A0 02        	ldy     #$02
000069r 1  20 rr rr     	jsr     staxysp
00006Cr 1  20 rr rr     	jsr     _skip_whitespace
00006Fr 1  A0 02        	ldy     #$02
000071r 1  20 rr rr     	jsr     staxysp
000074r 1  A0 03        	ldy     #$03
000076r 1  B1 rr        	lda     (sp),y
000078r 1  88           	dey
000079r 1  11 rr        	ora     (sp),y
00007Br 1  F0 0E        	beq     L008F
00007Dr 1  20 rr rr     	jsr     pushw0sp
000080r 1  A0 05        	ldy     #$05
000082r 1  20 rr rr     	jsr     ldaxysp
000085r 1  20 rr rr     	jsr     _create_line
000088r 1  4C rr rr     	jmp     incsp6
00008Br 1  20 rr rr     L008F:	jsr     ldax0sp
00008Er 1  20 rr rr     	jsr     _delete_line
000091r 1  4C rr rr     	jmp     incsp6
000094r 1  A0 03        L007F:	ldy     #$03
000096r 1  20 rr rr     	jsr     ldaxysp
000099r 1  20 rr rr     	jsr     _execute
00009Cr 1  4C rr rr     L0097:	jmp     incsp6
00009Fr 1               
00009Fr 1               .endproc
00009Fr 1               
00009Fr 1               ; ---------------------------------------------------------------
00009Fr 1               ; void __near__ syntax_error (void)
00009Fr 1               ; ---------------------------------------------------------------
00009Fr 1               
00009Fr 1               .segment	"CODE"
00009Fr 1               
00009Fr 1               .proc	_syntax_error: near
00009Fr 1               
00009Fr 1               .segment	"CODE"
00009Fr 1               
00009Fr 1  A9 rr        	lda     #<(L0316)
0000A1r 1  A2 rr        	ldx     #>(L0316)
0000A3r 1  20 rr rr     	jsr     pushax
0000A6r 1  A2 00        	ldx     #$00
0000A8r 1  8A           	txa
0000A9r 1  4C rr rr     	jmp     _syntax_error_msg_with_arg
0000ACr 1               
0000ACr 1               .endproc
0000ACr 1               
0000ACr 1               ; ---------------------------------------------------------------
0000ACr 1               ; void __near__ syntax_error_msg_with_arg (__near__ const unsigned char *, __near__ const unsigned char *)
0000ACr 1               ; ---------------------------------------------------------------
0000ACr 1               
0000ACr 1               .segment	"CODE"
0000ACr 1               
0000ACr 1               .proc	_syntax_error_msg_with_arg: near
0000ACr 1               
0000ACr 1               .segment	"CODE"
0000ACr 1               
0000ACr 1  20 rr rr     	jsr     pushax
0000AFr 1  A9 01        	lda     #$01
0000B1r 1  8D rr rr     	sta     _error
0000B4r 1  AD rr rr     	lda     _current_line
0000B7r 1  0D rr rr     	ora     _current_line+1
0000BAr 1  F0 23        	beq     L0302
0000BCr 1  A9 rr        	lda     #<(_print_buffer)
0000BEr 1  A2 rr        	ldx     #>(_print_buffer)
0000C0r 1  20 rr rr     	jsr     pushax
0000C3r 1  A9 rr        	lda     #<(L0306)
0000C5r 1  A2 rr        	ldx     #>(L0306)
0000C7r 1  20 rr rr     	jsr     pushax
0000CAr 1  AD rr rr     	lda     _current_line
0000CDr 1  AE rr rr     	ldx     _current_line+1
0000D0r 1  20 rr rr     	jsr     pushw
0000D3r 1  A0 06        	ldy     #$06
0000D5r 1  20 rr rr     	jsr     _sprintf
0000D8r 1  A9 rr        	lda     #<(_print_buffer)
0000DAr 1  A2 rr        	ldx     #>(_print_buffer)
0000DCr 1  20 rr rr     	jsr     _acia_puts
0000DFr 1  A0 03        L0302:	ldy     #$03
0000E1r 1  20 rr rr     	jsr     ldaxysp
0000E4r 1  20 rr rr     	jsr     _acia_puts
0000E7r 1  A0 01        	ldy     #$01
0000E9r 1  B1 rr        	lda     (sp),y
0000EBr 1  88           	dey
0000ECr 1  11 rr        	ora     (sp),y
0000EEr 1  F0 06        	beq     L030D
0000F0r 1  20 rr rr     	jsr     ldax0sp
0000F3r 1  20 rr rr     	jsr     _acia_puts
0000F6r 1  A9 rr        L030D:	lda     #<(L0312)
0000F8r 1  A2 rr        	ldx     #>(L0312)
0000FAr 1  20 rr rr     	jsr     _acia_puts
0000FDr 1  4C rr rr     	jmp     incsp4
000100r 1               
000100r 1               .endproc
000100r 1               
000100r 1               ; ---------------------------------------------------------------
000100r 1               ; void __near__ execute (__near__ unsigned char *)
000100r 1               ; ---------------------------------------------------------------
000100r 1               
000100r 1               .segment	"CODE"
000100r 1               
000100r 1               .proc	_execute: near
000100r 1               
000100r 1               .segment	"CODE"
000100r 1               
000100r 1  20 rr rr     	jsr     pushax
000103r 1  20 rr rr     	jsr     decsp3
000106r 1  A9 00        	lda     #$00
000108r 1  85 rr        	sta     _interrupted
00010Ar 1  85 rr        	sta     _interrupted+1
00010Cr 1  85 rr        	sta     _interrupted+2
00010Er 1  85 rr        	sta     _interrupted+3
000110r 1  A0 04        	ldy     #$04
000112r 1  20 rr rr     	jsr     ldaxysp
000115r 1  20 rr rr     	jsr     _skip_whitespace
000118r 1  A0 03        	ldy     #$03
00011Ar 1  20 rr rr     	jsr     staxysp
00011Dr 1  20 rr rr     	jsr     _find_args
000120r 1  20 rr rr     	jsr     stax0sp
000123r 1  A0 04        	ldy     #$04
000125r 1  20 rr rr     	jsr     ldaxysp
000128r 1  20 rr rr     	jsr     _find_keyword
00012Br 1  A0 02        	ldy     #$02
00012Dr 1  91 rr        	sta     (sp),y
00012Fr 1  C9 FF        	cmp     #$FF
000131r 1  F0 31        	beq     L00A6
000133r 1  A2 00        	ldx     #$00
000135r 1  B1 rr        	lda     (sp),y
000137r 1  0A           	asl     a
000138r 1  90 02        	bcc     L0559
00013Ar 1  E8           	inx
00013Br 1  18           	clc
00013Cr 1  69 rr        L0559:	adc     #<(_command_functions)
00013Er 1  A8           	tay
00013Fr 1  8A           	txa
000140r 1  69 rr        	adc     #>(_command_functions)
000142r 1  AA           	tax
000143r 1  98           	tya
000144r 1  20 rr rr     	jsr     pushw
000147r 1  A0 03        	ldy     #$03
000149r 1  20 rr rr     	jsr     ldaxysp
00014Cr 1  48           	pha
00014Dr 1  A0 00        	ldy     #$00
00014Fr 1  B1 rr        	lda     (sp),y
000151r 1  8D rr rr     	sta     jmpvec+1
000154r 1  C8           	iny
000155r 1  B1 rr        	lda     (sp),y
000157r 1  8D rr rr     	sta     jmpvec+2
00015Ar 1  68           	pla
00015Br 1  20 rr rr     	jsr     jmpvec
00015Er 1  20 rr rr     	jsr     incsp2
000161r 1  4C rr rr     	jmp     incsp5
000164r 1  A9 rr        L00A6:	lda     #<(L00AD)
000166r 1  A2 rr        	ldx     #>(L00AD)
000168r 1  20 rr rr     	jsr     _acia_puts
00016Br 1  4C rr rr     	jmp     incsp5
00016Er 1               
00016Er 1               .endproc
00016Er 1               
00016Er 1               ; ---------------------------------------------------------------
00016Er 1               ; void __near__ print_ready (void)
00016Er 1               ; ---------------------------------------------------------------
00016Er 1               
00016Er 1               .segment	"CODE"
00016Er 1               
00016Er 1               .proc	_print_ready: near
00016Er 1               
00016Er 1               .segment	"CODE"
00016Er 1               
00016Er 1  AD rr rr     	lda     _running
000171r 1  D0 07        	bne     L00B0
000173r 1  A9 rr        	lda     #<(L00B3)
000175r 1  A2 rr        	ldx     #>(L00B3)
000177r 1  4C rr rr     	jmp     _acia_puts
00017Ar 1  60           L00B0:	rts
00017Br 1               
00017Br 1               .endproc
00017Br 1               
00017Br 1               ; ---------------------------------------------------------------
00017Br 1               ; void __near__ print_interrupted (void)
00017Br 1               ; ---------------------------------------------------------------
00017Br 1               
00017Br 1               .segment	"CODE"
00017Br 1               
00017Br 1               .proc	_print_interrupted: near
00017Br 1               
00017Br 1               .segment	"CODE"
00017Br 1               
00017Br 1  A9 rr        	lda     #<(L00B7)
00017Dr 1  A2 rr        	ldx     #>(L00B7)
00017Fr 1  4C rr rr     	jmp     _acia_puts
000182r 1               
000182r 1               .endproc
000182r 1               
000182r 1               ; ---------------------------------------------------------------
000182r 1               ; __near__ unsigned char * __near__ parse_number_expression (__near__ unsigned char *, __near__ int *)
000182r 1               ; ---------------------------------------------------------------
000182r 1               
000182r 1               .segment	"CODE"
000182r 1               
000182r 1               .proc	_parse_number_expression: near
000182r 1               
000182r 1               .segment	"CODE"
000182r 1               
000182r 1  20 rr rr     	jsr     pushax
000185r 1  A0 03        	ldy     #$03
000187r 1  20 rr rr     	jsr     ldaxysp
00018Ar 1  20 rr rr     	jsr     _next_token
00018Dr 1  20 rr rr     	jsr     pusha
000190r 1  A0 00        	ldy     #$00
000192r 1  B1 rr        	lda     (sp),y
000194r 1  C9 02        	cmp     #$02
000196r 1  F0 0F        	beq     L055F
000198r 1  C9 07        	cmp     #$07
00019Ar 1  F0 0B        	beq     L055F
00019Cr 1  C9 08        	cmp     #$08
00019Er 1  F0 07        	beq     L055F
0001A0r 1  C9 04        	cmp     #$04
0001A2r 1  F0 03 4C rr  	jne     L0561
0001A6r 1  rr           
0001A7r 1  20 rr rr     L055F:	jsr     decsp2
0001AAr 1  A0 08        	ldy     #$08
0001ACr 1  20 rr rr     	jsr     pushwysp
0001AFr 1  A0 06        	ldy     #$06
0001B1r 1  20 rr rr     	jsr     ldaxysp
0001B4r 1  20 rr rr     	jsr     _parse_number_term
0001B7r 1  A0 05        	ldy     #$05
0001B9r 1  20 rr rr     	jsr     staxysp
0001BCr 1  86 rr        	stx     tmp1
0001BEr 1  05 rr        	ora     tmp1
0001C0r 1  D0 03 4C rr  	jeq     L0164
0001C4r 1  rr           
0001C5r 1  A0 06        L00C7:	ldy     #$06
0001C7r 1  20 rr rr     	jsr     ldaxysp
0001CAr 1  20 rr rr     	jsr     _next_token
0001CDr 1  A0 02        	ldy     #$02
0001CFr 1  91 rr        	sta     (sp),y
0001D1r 1  C9 07        	cmp     #$07
0001D3r 1  F0 27        	beq     L00CF
0001D5r 1  C9 08        	cmp     #$08
0001D7r 1  F0 23        	beq     L00CF
0001D9r 1  C9 09        	cmp     #$09
0001DBr 1  F0 1F        	beq     L00CF
0001DDr 1  C9 0A        	cmp     #$0A
0001DFr 1  F0 1B        	beq     L00CF
0001E1r 1  C9 0B        	cmp     #$0B
0001E3r 1  F0 17        	beq     L00CF
0001E5r 1  C9 0D        	cmp     #$0D
0001E7r 1  F0 13        	beq     L00CF
0001E9r 1  C9 0F        	cmp     #$0F
0001EBr 1  F0 0F        	beq     L00CF
0001EDr 1  C9 10        	cmp     #$10
0001EFr 1  F0 0B        	beq     L00CF
0001F1r 1  C9 11        	cmp     #$11
0001F3r 1  F0 07        	beq     L00CF
0001F5r 1  C9 12        	cmp     #$12
0001F7r 1  F0 03 4C rr  	jne     L011A
0001FBr 1  rr           
0001FCr 1  A0 08        L00CF:	ldy     #$08
0001FEr 1  20 rr rr     	jsr     pushwysp
000201r 1  A0 04        	ldy     #$04
000203r 1  B1 rr        	lda     (sp),y
000205r 1  20 rr rr     	jsr     _consume_token
000208r 1  A0 05        	ldy     #$05
00020Ar 1  20 rr rr     	jsr     staxysp
00020Dr 1  20 rr rr     	jsr     pushax
000210r 1  A9 02        	lda     #$02
000212r 1  20 rr rr     	jsr     leaa0sp
000215r 1  20 rr rr     	jsr     _parse_number_term
000218r 1  A0 05        	ldy     #$05
00021Ar 1  20 rr rr     	jsr     staxysp
00021Dr 1  86 rr        	stx     tmp1
00021Fr 1  05 rr        	ora     tmp1
000221r 1  F0 A2        	beq     L00C7
000223r 1  A0 02        	ldy     #$02
000225r 1  B1 rr        	lda     (sp),y
000227r 1  C9 07        	cmp     #$07
000229r 1  F0 46        	beq     L00EF
00022Br 1  C9 08        	cmp     #$08
00022Dr 1  F0 67        	beq     L00F3
00022Fr 1  C9 09        	cmp     #$09
000231r 1  D0 03 4C rr  	jeq     L00F7
000235r 1  rr           
000236r 1  C9 0A        	cmp     #$0A
000238r 1  D0 03 4C rr  	jeq     L00FB
00023Cr 1  rr           
00023Dr 1  C9 0B        	cmp     #$0B
00023Fr 1  D0 03 4C rr  	jeq     L00FF
000243r 1  rr           
000244r 1  C9 0D        	cmp     #$0D
000246r 1  D0 03 4C rr  	jeq     L0103
00024Ar 1  rr           
00024Br 1  C9 0E        	cmp     #$0E
00024Dr 1  D0 03 4C rr  	jeq     L0107
000251r 1  rr           
000252r 1  C9 0F        	cmp     #$0F
000254r 1  D0 03 4C rr  	jeq     L010B
000258r 1  rr           
000259r 1  C9 10        	cmp     #$10
00025Br 1  D0 03 4C rr  	jeq     L010F
00025Fr 1  rr           
000260r 1  C9 11        	cmp     #$11
000262r 1  D0 03 4C rr  	jeq     L0113
000266r 1  rr           
000267r 1  C9 12        	cmp     #$12
000269r 1  D0 03 4C rr  	jeq     L0117
00026Dr 1  rr           
00026Er 1  4C rr rr     	jmp     L00C7
000271r 1  A0 04        L00EF:	ldy     #$04
000273r 1  20 rr rr     	jsr     ldaxysp
000276r 1  20 rr rr     	jsr     pushax
000279r 1  20 rr rr     	jsr     ldaxi
00027Cr 1  85 rr        	sta     ptr1
00027Er 1  86 rr        	stx     ptr1+1
000280r 1  A0 03        	ldy     #$03
000282r 1  20 rr rr     	jsr     ldaxysp
000285r 1  18           	clc
000286r 1  65 rr        	adc     ptr1
000288r 1  48           	pha
000289r 1  8A           	txa
00028Ar 1  65 rr        	adc     ptr1+1
00028Cr 1  AA           	tax
00028Dr 1  68           	pla
00028Er 1  A0 00        	ldy     #$00
000290r 1  20 rr rr     	jsr     staxspidx
000293r 1  4C rr rr     	jmp     L00C7
000296r 1  A0 04        L00F3:	ldy     #$04
000298r 1  20 rr rr     	jsr     ldaxysp
00029Br 1  20 rr rr     	jsr     pushax
00029Er 1  20 rr rr     	jsr     ldaxi
0002A1r 1  38           	sec
0002A2r 1  A0 02        	ldy     #$02
0002A4r 1  F1 rr        	sbc     (sp),y
0002A6r 1  48           	pha
0002A7r 1  8A           	txa
0002A8r 1  C8           	iny
0002A9r 1  F1 rr        	sbc     (sp),y
0002ABr 1  AA           	tax
0002ACr 1  68           	pla
0002ADr 1  A0 00        	ldy     #$00
0002AFr 1  20 rr rr     	jsr     staxspidx
0002B2r 1  4C rr rr     	jmp     L00C7
0002B5r 1  A0 04        L00F7:	ldy     #$04
0002B7r 1  20 rr rr     	jsr     ldaxysp
0002BAr 1  20 rr rr     	jsr     pushax
0002BDr 1  20 rr rr     	jsr     pushw
0002C0r 1  A0 05        	ldy     #$05
0002C2r 1  20 rr rr     	jsr     ldaxysp
0002C5r 1  20 rr rr     	jsr     tosmulax
0002C8r 1  A0 00        	ldy     #$00
0002CAr 1  20 rr rr     	jsr     staxspidx
0002CDr 1  4C rr rr     	jmp     L00C7
0002D0r 1  A0 04        L00FB:	ldy     #$04
0002D2r 1  20 rr rr     	jsr     ldaxysp
0002D5r 1  20 rr rr     	jsr     pushax
0002D8r 1  20 rr rr     	jsr     pushw
0002DBr 1  A0 05        	ldy     #$05
0002DDr 1  20 rr rr     	jsr     ldaxysp
0002E0r 1  20 rr rr     	jsr     tosdivax
0002E3r 1  A0 00        	ldy     #$00
0002E5r 1  20 rr rr     	jsr     staxspidx
0002E8r 1  4C rr rr     	jmp     L00C7
0002EBr 1  A0 04        L00FF:	ldy     #$04
0002EDr 1  20 rr rr     	jsr     ldaxysp
0002F0r 1  20 rr rr     	jsr     pushax
0002F3r 1  20 rr rr     	jsr     pushw
0002F6r 1  A0 05        	ldy     #$05
0002F8r 1  20 rr rr     	jsr     ldaxysp
0002FBr 1  20 rr rr     	jsr     tosmodax
0002FEr 1  A0 00        	ldy     #$00
000300r 1  20 rr rr     	jsr     staxspidx
000303r 1  4C rr rr     	jmp     L00C7
000306r 1  A0 06        L0103:	ldy     #$06
000308r 1  20 rr rr     	jsr     pushwysp
00030Br 1  A0 06        	ldy     #$06
00030Dr 1  20 rr rr     	jsr     ldaxysp
000310r 1  20 rr rr     	jsr     ldaxi
000313r 1  A0 02        	ldy     #$02
000315r 1  D1 rr        	cmp     (sp),y
000317r 1  D0 04        	bne     L055A
000319r 1  8A           	txa
00031Ar 1  C8           	iny
00031Br 1  D1 rr        	cmp     (sp),y
00031Dr 1  20 rr rr     L055A:	jsr     booleq
000320r 1  A0 00        	ldy     #$00
000322r 1  20 rr rr     	jsr     staxspidx
000325r 1  4C rr rr     	jmp     L00C7
000328r 1  A0 06        L0107:	ldy     #$06
00032Ar 1  20 rr rr     	jsr     pushwysp
00032Dr 1  A0 06        	ldy     #$06
00032Fr 1  20 rr rr     	jsr     ldaxysp
000332r 1  20 rr rr     	jsr     ldaxi
000335r 1  A0 02        	ldy     #$02
000337r 1  D1 rr        	cmp     (sp),y
000339r 1  D0 04        	bne     L055B
00033Br 1  8A           	txa
00033Cr 1  C8           	iny
00033Dr 1  D1 rr        	cmp     (sp),y
00033Fr 1  20 rr rr     L055B:	jsr     boolne
000342r 1  A0 00        	ldy     #$00
000344r 1  20 rr rr     	jsr     staxspidx
000347r 1  4C rr rr     	jmp     L00C7
00034Ar 1  A0 04        L010B:	ldy     #$04
00034Cr 1  20 rr rr     	jsr     ldaxysp
00034Fr 1  85 rr        	sta     sreg
000351r 1  86 rr        	stx     sreg+1
000353r 1  A0 04        	ldy     #$04
000355r 1  20 rr rr     	jsr     ldaxysp
000358r 1  20 rr rr     	jsr     ldaxi
00035Br 1  A0 00        	ldy     #$00
00035Dr 1  D1 rr        	cmp     (sp),y
00035Fr 1  8A           	txa
000360r 1  C8           	iny
000361r 1  F1 rr        	sbc     (sp),y
000363r 1  50 02        	bvc     L055C
000365r 1  49 80        	eor     #$80
000367r 1  0A           L055C:	asl     a
000368r 1  A9 00        	lda     #$00
00036Ar 1  2A           	rol     a
00036Br 1  88           	dey
00036Cr 1  91 rr        	sta     (sreg),y
00036Er 1  C8           	iny
00036Fr 1  A9 00        	lda     #$00
000371r 1  91 rr        	sta     (sreg),y
000373r 1  4C rr rr     	jmp     L00C7
000376r 1  A0 06        L010F:	ldy     #$06
000378r 1  20 rr rr     	jsr     pushwysp
00037Br 1  A0 06        	ldy     #$06
00037Dr 1  20 rr rr     	jsr     ldaxysp
000380r 1  20 rr rr     	jsr     pushw
000383r 1  A0 05        	ldy     #$05
000385r 1  20 rr rr     	jsr     ldaxysp
000388r 1  20 rr rr     	jsr     tosleax
00038Br 1  A0 00        	ldy     #$00
00038Dr 1  20 rr rr     	jsr     staxspidx
000390r 1  4C rr rr     	jmp     L00C7
000393r 1  A0 06        L0113:	ldy     #$06
000395r 1  20 rr rr     	jsr     pushwysp
000398r 1  A0 06        	ldy     #$06
00039Ar 1  20 rr rr     	jsr     ldaxysp
00039Dr 1  20 rr rr     	jsr     pushw
0003A0r 1  A0 05        	ldy     #$05
0003A2r 1  20 rr rr     	jsr     ldaxysp
0003A5r 1  20 rr rr     	jsr     tosgtax
0003A8r 1  A0 00        	ldy     #$00
0003AAr 1  20 rr rr     	jsr     staxspidx
0003ADr 1  4C rr rr     	jmp     L00C7
0003B0r 1  A0 04        L0117:	ldy     #$04
0003B2r 1  20 rr rr     	jsr     ldaxysp
0003B5r 1  85 rr        	sta     sreg
0003B7r 1  86 rr        	stx     sreg+1
0003B9r 1  A0 04        	ldy     #$04
0003BBr 1  20 rr rr     	jsr     ldaxysp
0003BEr 1  20 rr rr     	jsr     ldaxi
0003C1r 1  A0 00        	ldy     #$00
0003C3r 1  D1 rr        	cmp     (sp),y
0003C5r 1  8A           	txa
0003C6r 1  C8           	iny
0003C7r 1  F1 rr        	sbc     (sp),y
0003C9r 1  70 02        	bvs     L055D
0003CBr 1  49 80        	eor     #$80
0003CDr 1  0A           L055D:	asl     a
0003CEr 1  A9 00        	lda     #$00
0003D0r 1  2A           	rol     a
0003D1r 1  88           	dey
0003D2r 1  91 rr        	sta     (sreg),y
0003D4r 1  C8           	iny
0003D5r 1  A9 00        	lda     #$00
0003D7r 1  91 rr        	sta     (sreg),y
0003D9r 1  4C rr rr     	jmp     L00C7
0003DCr 1  A0 06        L011A:	ldy     #$06
0003DEr 1  20 rr rr     	jsr     ldaxysp
0003E1r 1  20 rr rr     	jsr     incsp2
0003E4r 1  4C rr rr     	jmp     incsp5
0003E7r 1  B1 rr        L0561:	lda     (sp),y
0003E9r 1  C9 03        	cmp     #$03
0003EBr 1  F0 0A        	beq     L0562
0003EDr 1  C9 05        	cmp     #$05
0003EFr 1  F0 06        	beq     L0562
0003F1r 1  A2 00        	ldx     #$00
0003F3r 1  8A           	txa
0003F4r 1  4C rr rr     	jmp     incsp5
0003F7r 1  20 rr rr     L0562:	jsr     decsp2
0003FAr 1  A0 08        	ldy     #$08
0003FCr 1  20 rr rr     	jsr     pushwysp
0003FFr 1  A9 02        	lda     #$02
000401r 1  20 rr rr     	jsr     leaa0sp
000404r 1  20 rr rr     	jsr     _parse_string_expression
000407r 1  A0 05        	ldy     #$05
000409r 1  20 rr rr     	jsr     staxysp
00040Cr 1  86 rr        	stx     tmp1
00040Er 1  05 rr        	ora     tmp1
000410r 1  D0 03 4C rr  	jeq     L0164
000414r 1  rr           
000415r 1  A0 06        	ldy     #$06
000417r 1  20 rr rr     	jsr     ldaxysp
00041Ar 1  20 rr rr     	jsr     _next_token
00041Dr 1  A0 02        	ldy     #$02
00041Fr 1  91 rr        	sta     (sp),y
000421r 1  C9 0D        	cmp     #$0D
000423r 1  F0 19        	beq     L0563
000425r 1  B1 rr        	lda     (sp),y
000427r 1  C9 0E        	cmp     #$0E
000429r 1  F0 13        	beq     L0563
00042Br 1  C9 0F        	cmp     #$0F
00042Dr 1  F0 0F        	beq     L0563
00042Fr 1  C9 10        	cmp     #$10
000431r 1  F0 0B        	beq     L0563
000433r 1  C9 11        	cmp     #$11
000435r 1  F0 07        	beq     L0563
000437r 1  C9 12        	cmp     #$12
000439r 1  F0 03 4C rr  	jne     L0564
00043Dr 1  rr           
00043Er 1  A0 08        L0563:	ldy     #$08
000440r 1  20 rr rr     	jsr     pushwysp
000443r 1  A0 04        	ldy     #$04
000445r 1  B1 rr        	lda     (sp),y
000447r 1  20 rr rr     	jsr     _consume_token
00044Ar 1  A0 05        	ldy     #$05
00044Cr 1  20 rr rr     	jsr     staxysp
00044Fr 1  A9 rr        	lda     #<(_tmpbuf)
000451r 1  A2 rr        	ldx     #>(_tmpbuf)
000453r 1  20 rr rr     	jsr     pushax
000456r 1  A0 03        	ldy     #$03
000458r 1  20 rr rr     	jsr     ldaxysp
00045Br 1  20 rr rr     	jsr     _strcpy
00045Er 1  A0 08        	ldy     #$08
000460r 1  20 rr rr     	jsr     pushwysp
000463r 1  A9 02        	lda     #$02
000465r 1  20 rr rr     	jsr     leaa0sp
000468r 1  20 rr rr     	jsr     _parse_string_expression
00046Br 1  A0 05        	ldy     #$05
00046Dr 1  20 rr rr     	jsr     staxysp
000470r 1  86 rr        	stx     tmp1
000472r 1  05 rr        	ora     tmp1
000474r 1  D0 03 4C rr  	jeq     L0164
000478r 1  rr           
000479r 1  A0 02        	ldy     #$02
00047Br 1  B1 rr        	lda     (sp),y
00047Dr 1  C9 0D        	cmp     #$0D
00047Fr 1  F0 1D        	beq     L013C
000481r 1  C9 0E        	cmp     #$0E
000483r 1  F0 39        	beq     L0143
000485r 1  C9 0F        	cmp     #$0F
000487r 1  F0 55        	beq     L014A
000489r 1  C9 10        	cmp     #$10
00048Br 1  F0 6E        	beq     L0150
00048Dr 1  C9 11        	cmp     #$11
00048Fr 1  D0 03 4C rr  	jeq     L0157
000493r 1  rr           
000494r 1  C9 12        	cmp     #$12
000496r 1  D0 03 4C rr  	jeq     L015E
00049Ar 1  rr           
00049Br 1  4C rr rr     	jmp     L013A
00049Er 1  A0 06        L013C:	ldy     #$06
0004A0r 1  20 rr rr     	jsr     pushwysp
0004A3r 1  A9 rr        	lda     #<(_tmpbuf)
0004A5r 1  A2 rr        	ldx     #>(_tmpbuf)
0004A7r 1  20 rr rr     	jsr     pushax
0004AAr 1  A0 05        	ldy     #$05
0004ACr 1  20 rr rr     	jsr     ldaxysp
0004AFr 1  20 rr rr     	jsr     _strcmp
0004B2r 1  E0 00        	cpx     #$00
0004B4r 1  D0 02        	bne     L0141
0004B6r 1  C9 00        	cmp     #$00
0004B8r 1  20 rr rr     L0141:	jsr     booleq
0004BBr 1  4C rr rr     	jmp     L0566
0004BEr 1  A0 06        L0143:	ldy     #$06
0004C0r 1  20 rr rr     	jsr     pushwysp
0004C3r 1  A9 rr        	lda     #<(_tmpbuf)
0004C5r 1  A2 rr        	ldx     #>(_tmpbuf)
0004C7r 1  20 rr rr     	jsr     pushax
0004CAr 1  A0 05        	ldy     #$05
0004CCr 1  20 rr rr     	jsr     ldaxysp
0004CFr 1  20 rr rr     	jsr     _strcmp
0004D2r 1  E0 00        	cpx     #$00
0004D4r 1  D0 02        	bne     L0148
0004D6r 1  C9 00        	cmp     #$00
0004D8r 1  20 rr rr     L0148:	jsr     boolne
0004DBr 1  4C rr rr     	jmp     L0566
0004DEr 1  A0 06        L014A:	ldy     #$06
0004E0r 1  20 rr rr     	jsr     pushwysp
0004E3r 1  A9 rr        	lda     #<(_tmpbuf)
0004E5r 1  A2 rr        	ldx     #>(_tmpbuf)
0004E7r 1  20 rr rr     	jsr     pushax
0004EAr 1  A0 05        	ldy     #$05
0004ECr 1  20 rr rr     	jsr     ldaxysp
0004EFr 1  20 rr rr     	jsr     _strcmp
0004F2r 1  E0 80        	cpx     #$80
0004F4r 1  A9 00        	lda     #$00
0004F6r 1  AA           	tax
0004F7r 1  2A           	rol     a
0004F8r 1  4C rr rr     	jmp     L0566
0004FBr 1  A0 06        L0150:	ldy     #$06
0004FDr 1  20 rr rr     	jsr     pushwysp
000500r 1  A9 rr        	lda     #<(_tmpbuf)
000502r 1  A2 rr        	ldx     #>(_tmpbuf)
000504r 1  20 rr rr     	jsr     pushax
000507r 1  A0 05        	ldy     #$05
000509r 1  20 rr rr     	jsr     ldaxysp
00050Cr 1  20 rr rr     	jsr     _strcmp
00050Fr 1  C9 01        	cmp     #$01
000511r 1  8A           	txa
000512r 1  E9 00        	sbc     #$00
000514r 1  50 02        	bvc     L0155
000516r 1  49 80        	eor     #$80
000518r 1  0A           L0155:	asl     a
000519r 1  A9 00        	lda     #$00
00051Br 1  AA           	tax
00051Cr 1  2A           	rol     a
00051Dr 1  4C rr rr     	jmp     L0566
000520r 1  A0 06        L0157:	ldy     #$06
000522r 1  20 rr rr     	jsr     pushwysp
000525r 1  A9 rr        	lda     #<(_tmpbuf)
000527r 1  A2 rr        	ldx     #>(_tmpbuf)
000529r 1  20 rr rr     	jsr     pushax
00052Cr 1  A0 05        	ldy     #$05
00052Er 1  20 rr rr     	jsr     ldaxysp
000531r 1  20 rr rr     	jsr     _strcmp
000534r 1  C9 01        	cmp     #$01
000536r 1  8A           	txa
000537r 1  E9 00        	sbc     #$00
000539r 1  70 02        	bvs     L015C
00053Br 1  49 80        	eor     #$80
00053Dr 1  0A           L015C:	asl     a
00053Er 1  A9 00        	lda     #$00
000540r 1  AA           	tax
000541r 1  2A           	rol     a
000542r 1  4C rr rr     	jmp     L0566
000545r 1  A0 06        L015E:	ldy     #$06
000547r 1  20 rr rr     	jsr     pushwysp
00054Ar 1  A9 rr        	lda     #<(_tmpbuf)
00054Cr 1  A2 rr        	ldx     #>(_tmpbuf)
00054Er 1  20 rr rr     	jsr     pushax
000551r 1  A0 05        	ldy     #$05
000553r 1  20 rr rr     	jsr     ldaxysp
000556r 1  20 rr rr     	jsr     _strcmp
000559r 1  8A           	txa
00055Ar 1  20 rr rr     	jsr     boolge
00055Dr 1  A0 00        L0566:	ldy     #$00
00055Fr 1  20 rr rr     	jsr     staxspidx
000562r 1  A0 06        L013A:	ldy     #$06
000564r 1  20 rr rr     	jsr     ldaxysp
000567r 1  20 rr rr     	jsr     incsp2
00056Ar 1  4C rr rr     	jmp     incsp5
00056Dr 1  B1 rr        L0564:	lda     (sp),y
00056Fr 1  20 rr rr     	jsr     _syntax_error_invalid_token
000572r 1  20 rr rr     L0164:	jsr     incsp2
000575r 1  A2 00        	ldx     #$00
000577r 1  8A           	txa
000578r 1  4C rr rr     	jmp     incsp5
00057Br 1               
00057Br 1               .endproc
00057Br 1               
00057Br 1               ; ---------------------------------------------------------------
00057Br 1               ; __near__ unsigned char * __near__ parse_number_term (__near__ unsigned char *, __near__ int *)
00057Br 1               ; ---------------------------------------------------------------
00057Br 1               
00057Br 1               .segment	"CODE"
00057Br 1               
00057Br 1               .proc	_parse_number_term: near
00057Br 1               
00057Br 1               .segment	"CODE"
00057Br 1               
00057Br 1  20 rr rr     	jsr     pushax
00057Er 1  20 rr rr     	jsr     decsp1
000581r 1  A0 04        	ldy     #$04
000583r 1  20 rr rr     	jsr     ldaxysp
000586r 1  20 rr rr     	jsr     _skip_whitespace
000589r 1  A0 03        	ldy     #$03
00058Br 1  20 rr rr     	jsr     staxysp
00058Er 1  20 rr rr     	jsr     _next_token
000591r 1  A0 00        	ldy     #$00
000593r 1  91 rr        	sta     (sp),y
000595r 1  C9 02        	cmp     #$02
000597r 1  F0 0A        	beq     L0567
000599r 1  B1 rr        	lda     (sp),y
00059Br 1  C9 07        	cmp     #$07
00059Dr 1  F0 04        	beq     L0567
00059Fr 1  C9 08        	cmp     #$08
0005A1r 1  D0 30        	bne     L0569
0005A3r 1  A0 06        L0567:	ldy     #$06
0005A5r 1  20 rr rr     	jsr     pushwysp
0005A8r 1  A0 04        	ldy     #$04
0005AAr 1  20 rr rr     	jsr     ldaxysp
0005ADr 1  20 rr rr     	jsr     _parse_integer
0005B0r 1  A0 03        	ldy     #$03
0005B2r 1  20 rr rr     	jsr     staxysp
0005B5r 1  86 rr        	stx     tmp1
0005B7r 1  05 rr        	ora     tmp1
0005B9r 1  F0 08        	beq     L0172
0005BBr 1  A0 04        	ldy     #$04
0005BDr 1  20 rr rr     	jsr     ldaxysp
0005C0r 1  4C rr rr     	jmp     incsp5
0005C3r 1  A9 rr        L0172:	lda     #<(L017A)
0005C5r 1  A2 rr        	ldx     #>(L017A)
0005C7r 1  20 rr rr     	jsr     pushax
0005CAr 1  A2 00        	ldx     #$00
0005CCr 1  8A           	txa
0005CDr 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
0005D0r 1  4C rr rr     	jmp     L0195
0005D3r 1  B1 rr        L0569:	lda     (sp),y
0005D5r 1  C9 04        	cmp     #$04
0005D7r 1  D0 67        	bne     L017E
0005D9r 1  20 rr rr     	jsr     decsp5
0005DCr 1  A0 0B        	ldy     #$0B
0005DEr 1  20 rr rr     	jsr     pushwysp
0005E1r 1  A9 05        	lda     #$05
0005E3r 1  20 rr rr     	jsr     leaa0sp
0005E6r 1  20 rr rr     	jsr     pushax
0005E9r 1  A9 06        	lda     #$06
0005EBr 1  20 rr rr     	jsr     leaa0sp
0005EEr 1  20 rr rr     	jsr     _parse_variable
0005F1r 1  A0 08        	ldy     #$08
0005F3r 1  20 rr rr     	jsr     staxysp
0005F6r 1  A0 06        	ldy     #$06
0005F8r 1  20 rr rr     	jsr     pushwysp
0005FBr 1  A9 00        	lda     #$00
0005FDr 1  20 rr rr     	jsr     pusha
000600r 1  AA           	tax
000601r 1  20 rr rr     	jsr     _find_variable
000604r 1  20 rr rr     	jsr     stax0sp
000607r 1  A0 01        	ldy     #$01
000609r 1  B1 rr        	lda     (sp),y
00060Br 1  88           	dey
00060Cr 1  11 rr        	ora     (sp),y
00060Er 1  F0 1D        	beq     L018A
000610r 1  A0 09        	ldy     #$09
000612r 1  20 rr rr     	jsr     pushwysp
000615r 1  A0 03        	ldy     #$03
000617r 1  20 rr rr     	jsr     ldaxysp
00061Ar 1  20 rr rr     	jsr     _get_integer_variable_value
00061Dr 1  A0 00        	ldy     #$00
00061Fr 1  20 rr rr     	jsr     staxspidx
000622r 1  A0 09        	ldy     #$09
000624r 1  20 rr rr     	jsr     ldaxysp
000627r 1  20 rr rr     	jsr     incsp5
00062Ar 1  4C rr rr     	jmp     incsp5
00062Dr 1  A9 rr        L018A:	lda     #<(L0192)
00062Fr 1  A2 rr        	ldx     #>(L0192)
000631r 1  20 rr rr     	jsr     pushax
000634r 1  A2 00        	ldx     #$00
000636r 1  8A           	txa
000637r 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
00063Ar 1  20 rr rr     	jsr     incsp5
00063Dr 1  4C rr rr     	jmp     L0195
000640r 1  20 rr rr     L017E:	jsr     _syntax_error
000643r 1  A2 00        L0195:	ldx     #$00
000645r 1  8A           	txa
000646r 1  4C rr rr     	jmp     incsp5
000649r 1               
000649r 1               .endproc
000649r 1               
000649r 1               ; ---------------------------------------------------------------
000649r 1               ; __near__ unsigned char * __near__ parse_integer (__near__ unsigned char *, __near__ int *)
000649r 1               ; ---------------------------------------------------------------
000649r 1               
000649r 1               .segment	"CODE"
000649r 1               
000649r 1               .proc	_parse_integer: near
000649r 1               
000649r 1               .segment	"CODE"
000649r 1               
000649r 1  20 rr rr     	jsr     pushax
00064Cr 1  A0 03        	ldy     #$03
00064Er 1  20 rr rr     	jsr     ldaxysp
000651r 1  20 rr rr     	jsr     _skip_whitespace
000654r 1  A0 02        	ldy     #$02
000656r 1  20 rr rr     	jsr     staxysp
000659r 1  85 rr        	sta     ptr1
00065Br 1  86 rr        	stx     ptr1+1
00065Dr 1  A0 00        	ldy     #$00
00065Fr 1  B1 rr        	lda     (ptr1),y
000661r 1  C9 2B        	cmp     #$2B
000663r 1  F0 2D        	beq     L056B
000665r 1  A0 03        	ldy     #$03
000667r 1  20 rr rr     	jsr     ldaxysp
00066Ar 1  85 rr        	sta     ptr1
00066Cr 1  86 rr        	stx     ptr1+1
00066Er 1  A0 00        	ldy     #$00
000670r 1  B1 rr        	lda     (ptr1),y
000672r 1  C9 2D        	cmp     #$2D
000674r 1  F0 1C        	beq     L056B
000676r 1  A0 03        	ldy     #$03
000678r 1  20 rr rr     	jsr     ldaxysp
00067Br 1  85 rr        	sta     ptr1
00067Dr 1  86 rr        	stx     ptr1+1
00067Fr 1  A0 00        	ldy     #$00
000681r 1  B1 rr        	lda     (ptr1),y
000683r 1  A2 00        	ldx     #$00
000685r 1  20 rr rr     	jsr     _isdigit
000688r 1  86 rr        	stx     tmp1
00068Ar 1  05 rr        	ora     tmp1
00068Cr 1  D0 04        	bne     L056B
00068Er 1  AA           	tax
00068Fr 1  4C rr rr     	jmp     incsp4
000692r 1  A0 05        L056B:	ldy     #$05
000694r 1  20 rr rr     	jsr     pushwysp
000697r 1  A9 rr        	lda     #<(L01EA)
000699r 1  A2 rr        	ldx     #>(L01EA)
00069Br 1  20 rr rr     	jsr     pushax
00069Er 1  A0 07        	ldy     #$07
0006A0r 1  20 rr rr     	jsr     pushwysp
0006A3r 1  A0 06        	ldy     #$06
0006A5r 1  20 rr rr     	jsr     _sscanf
0006A8r 1  A0 02        L01EE:	ldy     #$02
0006AAr 1  A2 00        	ldx     #$00
0006ACr 1  A9 01        	lda     #$01
0006AEr 1  20 rr rr     	jsr     addeqysp
0006B1r 1  A0 03        	ldy     #$03
0006B3r 1  20 rr rr     	jsr     ldaxysp
0006B6r 1  85 rr        	sta     ptr1
0006B8r 1  86 rr        	stx     ptr1+1
0006BAr 1  A0 00        	ldy     #$00
0006BCr 1  B1 rr        	lda     (ptr1),y
0006BEr 1  A2 00        	ldx     #$00
0006C0r 1  20 rr rr     	jsr     _isdigit
0006C3r 1  86 rr        	stx     tmp1
0006C5r 1  05 rr        	ora     tmp1
0006C7r 1  D0 DF        	bne     L01EE
0006C9r 1  A0 03        	ldy     #$03
0006CBr 1  20 rr rr     	jsr     ldaxysp
0006CEr 1  4C rr rr     	jmp     incsp4
0006D1r 1               
0006D1r 1               .endproc
0006D1r 1               
0006D1r 1               ; ---------------------------------------------------------------
0006D1r 1               ; __near__ unsigned char * __near__ parse_string_expression (__near__ unsigned char *, __near__ __near__ unsigned char * *)
0006D1r 1               ; ---------------------------------------------------------------
0006D1r 1               
0006D1r 1               .segment	"CODE"
0006D1r 1               
0006D1r 1               .proc	_parse_string_expression: near
0006D1r 1               
0006D1r 1               .segment	"CODE"
0006D1r 1               
0006D1r 1  20 rr rr     	jsr     pushax
0006D4r 1  20 rr rr     	jsr     decsp6
0006D7r 1  A0 09        	ldy     #$09
0006D9r 1  20 rr rr     	jsr     ldaxysp
0006DCr 1  20 rr rr     	jsr     _skip_whitespace
0006DFr 1  A0 08        	ldy     #$08
0006E1r 1  20 rr rr     	jsr     staxysp
0006E4r 1  20 rr rr     	jsr     _next_token
0006E7r 1  A0 00        	ldy     #$00
0006E9r 1  91 rr        	sta     (sp),y
0006EBr 1  C9 03        	cmp     #$03
0006EDr 1  D0 43        	bne     L0570
0006EFr 1  A0 0B        	ldy     #$0B
0006F1r 1  20 rr rr     	jsr     pushwysp
0006F4r 1  A9 rr        	lda     #<(_parsebuf)
0006F6r 1  A2 rr        	ldx     #>(_parsebuf)
0006F8r 1  20 rr rr     	jsr     _parse_string
0006FBr 1  A0 08        	ldy     #$08
0006FDr 1  20 rr rr     	jsr     staxysp
000700r 1  86 rr        	stx     tmp1
000702r 1  05 rr        	ora     tmp1
000704r 1  F0 1C        	beq     L01A1
000706r 1  A0 07        	ldy     #$07
000708r 1  20 rr rr     	jsr     ldaxysp
00070Br 1  85 rr        	sta     ptr1
00070Dr 1  86 rr        	stx     ptr1+1
00070Fr 1  A9 rr        	lda     #<(_parsebuf)
000711r 1  A0 00        	ldy     #$00
000713r 1  91 rr        	sta     (ptr1),y
000715r 1  C8           	iny
000716r 1  A9 rr        	lda     #>(_parsebuf)
000718r 1  91 rr        	sta     (ptr1),y
00071Ar 1  A0 09        	ldy     #$09
00071Cr 1  20 rr rr     	jsr     ldaxysp
00071Fr 1  4C rr rr     	jmp     L0198
000722r 1  A9 rr        L01A1:	lda     #<(L01AB)
000724r 1  A2 rr        	ldx     #>(L01AB)
000726r 1  20 rr rr     	jsr     pushax
000729r 1  A2 00        	ldx     #$00
00072Br 1  8A           	txa
00072Cr 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
00072Fr 1  4C rr rr     	jmp     L01C6
000732r 1  B1 rr        L0570:	lda     (sp),y
000734r 1  C9 05        	cmp     #$05
000736r 1  D0 62        	bne     L01AF
000738r 1  A0 0B        	ldy     #$0B
00073Ar 1  20 rr rr     	jsr     pushwysp
00073Dr 1  A9 06        	lda     #$06
00073Fr 1  20 rr rr     	jsr     leaa0sp
000742r 1  20 rr rr     	jsr     pushax
000745r 1  A9 05        	lda     #$05
000747r 1  20 rr rr     	jsr     leaa0sp
00074Ar 1  20 rr rr     	jsr     _parse_variable
00074Dr 1  A0 08        	ldy     #$08
00074Fr 1  20 rr rr     	jsr     staxysp
000752r 1  A0 07        	ldy     #$07
000754r 1  20 rr rr     	jsr     pushwysp
000757r 1  A9 01        	lda     #$01
000759r 1  20 rr rr     	jsr     pusha
00075Cr 1  A2 00        	ldx     #$00
00075Er 1  8A           	txa
00075Fr 1  20 rr rr     	jsr     _find_variable
000762r 1  A0 02        	ldy     #$02
000764r 1  20 rr rr     	jsr     staxysp
000767r 1  A0 03        	ldy     #$03
000769r 1  B1 rr        	lda     (sp),y
00076Br 1  88           	dey
00076Cr 1  11 rr        	ora     (sp),y
00076Er 1  F0 1A        	beq     L01BB
000770r 1  A0 09        	ldy     #$09
000772r 1  20 rr rr     	jsr     pushwysp
000775r 1  A0 05        	ldy     #$05
000777r 1  20 rr rr     	jsr     ldaxysp
00077Ar 1  20 rr rr     	jsr     _get_string_variable_value
00077Dr 1  A0 00        	ldy     #$00
00077Fr 1  20 rr rr     	jsr     staxspidx
000782r 1  A0 09        	ldy     #$09
000784r 1  20 rr rr     	jsr     ldaxysp
000787r 1  4C rr rr     	jmp     L0198
00078Ar 1  A9 rr        L01BB:	lda     #<(L01C3)
00078Cr 1  A2 rr        	ldx     #>(L01C3)
00078Er 1  20 rr rr     	jsr     pushax
000791r 1  A2 00        	ldx     #$00
000793r 1  8A           	txa
000794r 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
000797r 1  4C rr rr     	jmp     L01C6
00079Ar 1  20 rr rr     L01AF:	jsr     _syntax_error
00079Dr 1  A2 00        L01C6:	ldx     #$00
00079Fr 1  8A           	txa
0007A0r 1  A0 0A        L0198:	ldy     #$0A
0007A2r 1  4C rr rr     	jmp     addysp
0007A5r 1               
0007A5r 1               .endproc
0007A5r 1               
0007A5r 1               ; ---------------------------------------------------------------
0007A5r 1               ; __near__ unsigned char * __near__ parse_string (__near__ unsigned char *, __near__ unsigned char *)
0007A5r 1               ; ---------------------------------------------------------------
0007A5r 1               
0007A5r 1               .segment	"CODE"
0007A5r 1               
0007A5r 1               .proc	_parse_string: near
0007A5r 1               
0007A5r 1               .segment	"CODE"
0007A5r 1               
0007A5r 1  20 rr rr     	jsr     pushax
0007A8r 1  20 rr rr     	jsr     decsp2
0007ABr 1  A0 05        	ldy     #$05
0007ADr 1  20 rr rr     	jsr     ldaxysp
0007B0r 1  20 rr rr     	jsr     _skip_whitespace
0007B3r 1  A0 04        	ldy     #$04
0007B5r 1  20 rr rr     	jsr     staxysp
0007B8r 1  85 rr        	sta     ptr1
0007BAr 1  86 rr        	stx     ptr1+1
0007BCr 1  A2 00        	ldx     #$00
0007BEr 1  A1 rr        	lda     (ptr1,x)
0007C0r 1  C9 22        	cmp     #$22
0007C2r 1  D0 67        	bne     L0571
0007C4r 1  A0 04        	ldy     #$04
0007C6r 1  A9 01        	lda     #$01
0007C8r 1  20 rr rr     	jsr     addeqysp
0007CBr 1  A0 07        	ldy     #$07
0007CDr 1  20 rr rr     	jsr     pushwysp
0007D0r 1  A2 00        	ldx     #$00
0007D2r 1  A9 22        	lda     #$22
0007D4r 1  20 rr rr     	jsr     _strchr
0007D7r 1  20 rr rr     	jsr     stax0sp
0007DAr 1  A0 01        	ldy     #$01
0007DCr 1  B1 rr        	lda     (sp),y
0007DEr 1  88           	dey
0007DFr 1  11 rr        	ora     (sp),y
0007E1r 1  F0 47        	beq     L01D4
0007E3r 1  20 rr rr     	jsr     ldax0sp
0007E6r 1  38           	sec
0007E7r 1  A0 04        	ldy     #$04
0007E9r 1  F1 rr        	sbc     (sp),y
0007EBr 1  48           	pha
0007ECr 1  8A           	txa
0007EDr 1  C8           	iny
0007EEr 1  F1 rr        	sbc     (sp),y
0007F0r 1  AA           	tax
0007F1r 1  68           	pla
0007F2r 1  20 rr rr     	jsr     pushax
0007F5r 1  A0 07        	ldy     #$07
0007F7r 1  20 rr rr     	jsr     pushwysp
0007FAr 1  A0 0B        	ldy     #$0B
0007FCr 1  20 rr rr     	jsr     pushwysp
0007FFr 1  A0 05        	ldy     #$05
000801r 1  20 rr rr     	jsr     ldaxysp
000804r 1  20 rr rr     	jsr     _strncpy
000807r 1  20 rr rr     	jsr     ldax0sp
00080Ar 1  18           	clc
00080Br 1  A0 04        	ldy     #$04
00080Dr 1  71 rr        	adc     (sp),y
00080Fr 1  85 rr        	sta     ptr1
000811r 1  8A           	txa
000812r 1  C8           	iny
000813r 1  71 rr        	adc     (sp),y
000815r 1  85 rr        	sta     ptr1+1
000817r 1  A9 00        	lda     #$00
000819r 1  A8           	tay
00081Ar 1  91 rr        	sta     (ptr1),y
00081Cr 1  A0 03        	ldy     #$03
00081Er 1  20 rr rr     	jsr     ldaxysp
000821r 1  20 rr rr     	jsr     incax1
000824r 1  20 rr rr     	jsr     incsp2
000827r 1  4C rr rr     	jmp     incsp6
00082Ar 1  AA           L01D4:	tax
00082Br 1  8A           L0571:	txa
00082Cr 1  4C rr rr     	jmp     incsp6
00082Fr 1               
00082Fr 1               .endproc
00082Fr 1               
00082Fr 1               ; ---------------------------------------------------------------
00082Fr 1               ; __near__ unsigned char * __near__ parse_variable (__near__ unsigned char *, __near__ unsigned int *, __near__ unsigned char *)
00082Fr 1               ; ---------------------------------------------------------------
00082Fr 1               
00082Fr 1               .segment	"CODE"
00082Fr 1               
00082Fr 1               .proc	_parse_variable: near
00082Fr 1               
00082Fr 1               .segment	"CODE"
00082Fr 1               
00082Fr 1  20 rr rr     	jsr     pushax
000832r 1  A0 05        	ldy     #$05
000834r 1  20 rr rr     	jsr     ldaxysp
000837r 1  20 rr rr     	jsr     _skip_whitespace
00083Ar 1  A0 04        	ldy     #$04
00083Cr 1  20 rr rr     	jsr     staxysp
00083Fr 1  85 rr        	sta     ptr1
000841r 1  86 rr        	stx     ptr1+1
000843r 1  A0 00        	ldy     #$00
000845r 1  B1 rr        	lda     (ptr1),y
000847r 1  A2 00        	ldx     #$00
000849r 1  20 rr rr     	jsr     _isalpha
00084Cr 1  86 rr        	stx     tmp1
00084Er 1  05 rr        	ora     tmp1
000850r 1  D0 03 4C rr  	jeq     L01FA
000854r 1  rr           
000855r 1  A0 05        	ldy     #$05
000857r 1  20 rr rr     	jsr     pushwysp
00085Ar 1  A0 07        	ldy     #$07
00085Cr 1  20 rr rr     	jsr     ldaxysp
00085Fr 1  85 rr        	sta     ptr1
000861r 1  86 rr        	stx     ptr1+1
000863r 1  A0 00        	ldy     #$00
000865r 1  B1 rr        	lda     (ptr1),y
000867r 1  A2 00        	ldx     #$00
000869r 1  20 rr rr     	jsr     staxspidx
00086Cr 1  A0 04        	ldy     #$04
00086Er 1  A9 01        	lda     #$01
000870r 1  20 rr rr     	jsr     addeqysp
000873r 1  A0 05        	ldy     #$05
000875r 1  20 rr rr     	jsr     ldaxysp
000878r 1  85 rr        	sta     ptr1
00087Ar 1  86 rr        	stx     ptr1+1
00087Cr 1  A0 00        	ldy     #$00
00087Er 1  B1 rr        	lda     (ptr1),y
000880r 1  A2 00        	ldx     #$00
000882r 1  20 rr rr     	jsr     _isalnum
000885r 1  86 rr        	stx     tmp1
000887r 1  05 rr        	ora     tmp1
000889r 1  F0 3E        	beq     L0209
00088Br 1  A0 03        	ldy     #$03
00088Dr 1  20 rr rr     	jsr     ldaxysp
000890r 1  20 rr rr     	jsr     pushax
000893r 1  20 rr rr     	jsr     ldaxi
000896r 1  AA           	tax
000897r 1  A9 00        	lda     #$00
000899r 1  A8           	tay
00089Ar 1  20 rr rr     	jsr     staxspidx
00089Dr 1  A0 03        	ldy     #$03
00089Fr 1  20 rr rr     	jsr     ldaxysp
0008A2r 1  20 rr rr     	jsr     pushax
0008A5r 1  20 rr rr     	jsr     pushw
0008A8r 1  A0 09        	ldy     #$09
0008AAr 1  20 rr rr     	jsr     ldaxysp
0008ADr 1  85 rr        	sta     ptr1
0008AFr 1  86 rr        	stx     ptr1+1
0008B1r 1  A2 00        	ldx     #$00
0008B3r 1  A1 rr        	lda     (ptr1,x)
0008B5r 1  20 rr rr     	jsr     tosora0
0008B8r 1  A0 00        	ldy     #$00
0008BAr 1  20 rr rr     	jsr     staxspidx
0008BDr 1  4C rr rr     	jmp     L0209
0008C0r 1  A0 04        L0207:	ldy     #$04
0008C2r 1  A2 00        	ldx     #$00
0008C4r 1  A9 01        	lda     #$01
0008C6r 1  20 rr rr     	jsr     addeqysp
0008C9r 1  A0 05        L0209:	ldy     #$05
0008CBr 1  20 rr rr     	jsr     ldaxysp
0008CEr 1  85 rr        	sta     ptr1
0008D0r 1  86 rr        	stx     ptr1+1
0008D2r 1  A0 00        	ldy     #$00
0008D4r 1  B1 rr        	lda     (ptr1),y
0008D6r 1  A2 00        	ldx     #$00
0008D8r 1  20 rr rr     	jsr     _isalnum
0008DBr 1  86 rr        	stx     tmp1
0008DDr 1  05 rr        	ora     tmp1
0008DFr 1  D0 DF        	bne     L0207
0008E1r 1  A0 05        	ldy     #$05
0008E3r 1  20 rr rr     	jsr     ldaxysp
0008E6r 1  85 rr        	sta     ptr1
0008E8r 1  86 rr        	stx     ptr1+1
0008EAr 1  A0 00        	ldy     #$00
0008ECr 1  B1 rr        	lda     (ptr1),y
0008EEr 1  C9 24        	cmp     #$24
0008F0r 1  D0 15        	bne     L020D
0008F2r 1  A0 04        	ldy     #$04
0008F4r 1  A2 00        	ldx     #$00
0008F6r 1  A9 01        	lda     #$01
0008F8r 1  20 rr rr     	jsr     addeqysp
0008FBr 1  20 rr rr     	jsr     ldax0sp
0008FEr 1  85 rr        	sta     ptr1
000900r 1  86 rr        	stx     ptr1+1
000902r 1  A9 01        	lda     #$01
000904r 1  4C rr rr     	jmp     L0573
000907r 1  20 rr rr     L020D:	jsr     ldax0sp
00090Ar 1  85 rr        	sta     ptr1
00090Cr 1  86 rr        	stx     ptr1+1
00090Er 1  A9 00        	lda     #$00
000910r 1  A0 00        L0573:	ldy     #$00
000912r 1  91 rr        	sta     (ptr1),y
000914r 1  A0 05        	ldy     #$05
000916r 1  20 rr rr     	jsr     ldaxysp
000919r 1  4C rr rr     	jmp     incsp6
00091Cr 1  AA           L01FA:	tax
00091Dr 1  4C rr rr     	jmp     incsp6
000920r 1               
000920r 1               .endproc
000920r 1               
000920r 1               ; ---------------------------------------------------------------
000920r 1               ; unsigned char __near__ next_token (__near__ unsigned char *)
000920r 1               ; ---------------------------------------------------------------
000920r 1               
000920r 1               .segment	"CODE"
000920r 1               
000920r 1               .proc	_next_token: near
000920r 1               
000920r 1               .segment	"CODE"
000920r 1               
000920r 1  20 rr rr     	jsr     pushax
000923r 1  20 rr rr     	jsr     ldax0sp
000926r 1  20 rr rr     	jsr     _skip_whitespace
000929r 1  20 rr rr     	jsr     stax0sp
00092Cr 1  85 rr        	sta     ptr1
00092Er 1  86 rr        	stx     ptr1+1
000930r 1  A0 00        	ldy     #$00
000932r 1  B1 rr        	lda     (ptr1),y
000934r 1  A2 00        	ldx     #$00
000936r 1  20 rr rr     	jsr     _isdigit
000939r 1  86 rr        	stx     tmp1
00093Br 1  05 rr        	ora     tmp1
00093Dr 1  F0 07        	beq     L027C
00093Fr 1  A2 00        	ldx     #$00
000941r 1  A9 02        	lda     #$02
000943r 1  4C rr rr     	jmp     incsp2
000946r 1  20 rr rr     L027C:	jsr     pushw0sp
000949r 1  A9 rr        	lda     #<(L0284)
00094Br 1  A2 rr        	ldx     #>(L0284)
00094Dr 1  20 rr rr     	jsr     pushax
000950r 1  A2 00        	ldx     #$00
000952r 1  A9 04        	lda     #$04
000954r 1  20 rr rr     	jsr     _strncasecmp
000957r 1  E0 00        	cpx     #$00
000959r 1  D0 09        	bne     L0281
00095Br 1  C9 00        	cmp     #$00
00095Dr 1  D0 05        	bne     L0281
00095Fr 1  A9 13        	lda     #$13
000961r 1  4C rr rr     	jmp     incsp2
000964r 1  20 rr rr     L0281:	jsr     pushw0sp
000967r 1  A9 rr        	lda     #<(L028D)
000969r 1  A2 rr        	ldx     #>(L028D)
00096Br 1  20 rr rr     	jsr     pushax
00096Er 1  A2 00        	ldx     #$00
000970r 1  A9 07        	lda     #$07
000972r 1  20 rr rr     	jsr     _strncasecmp
000975r 1  E0 00        	cpx     #$00
000977r 1  D0 09        	bne     L028A
000979r 1  C9 00        	cmp     #$00
00097Br 1  D0 05        	bne     L028A
00097Dr 1  A9 14        	lda     #$14
00097Fr 1  4C rr rr     	jmp     incsp2
000982r 1  20 rr rr     L028A:	jsr     ldax0sp
000985r 1  85 rr        	sta     ptr1
000987r 1  86 rr        	stx     ptr1+1
000989r 1  A0 00        	ldy     #$00
00098Br 1  B1 rr        	lda     (ptr1),y
00098Dr 1  A2 00        	ldx     #$00
00098Fr 1  20 rr rr     	jsr     _isalpha
000992r 1  86 rr        	stx     tmp1
000994r 1  05 rr        	ora     tmp1
000996r 1  F0 39        	beq     L0293
000998r 1  4C rr rr     	jmp     L0298
00099Br 1  A2 00        L0296:	ldx     #$00
00099Dr 1  A9 01        	lda     #$01
00099Fr 1  20 rr rr     	jsr     addeq0sp
0009A2r 1  20 rr rr     L0298:	jsr     ldax0sp
0009A5r 1  85 rr        	sta     ptr1
0009A7r 1  86 rr        	stx     ptr1+1
0009A9r 1  A0 00        	ldy     #$00
0009ABr 1  B1 rr        	lda     (ptr1),y
0009ADr 1  A2 00        	ldx     #$00
0009AFr 1  20 rr rr     	jsr     _isalnum
0009B2r 1  86 rr        	stx     tmp1
0009B4r 1  05 rr        	ora     tmp1
0009B6r 1  D0 E3        	bne     L0296
0009B8r 1  20 rr rr     	jsr     ldax0sp
0009BBr 1  85 rr        	sta     ptr1
0009BDr 1  86 rr        	stx     ptr1+1
0009BFr 1  A2 00        	ldx     #$00
0009C1r 1  A1 rr        	lda     (ptr1,x)
0009C3r 1  C9 24        	cmp     #$24
0009C5r 1  D0 05        	bne     L0574
0009C7r 1  A9 05        	lda     #$05
0009C9r 1  4C rr rr     	jmp     incsp2
0009CCr 1  A9 04        L0574:	lda     #$04
0009CEr 1  4C rr rr     	jmp     incsp2
0009D1r 1  20 rr rr     L0293:	jsr     ldax0sp
0009D4r 1  85 rr        	sta     ptr1
0009D6r 1  86 rr        	stx     ptr1+1
0009D8r 1  A0 00        	ldy     #$00
0009DAr 1  B1 rr        	lda     (ptr1),y
0009DCr 1  C9 22        	cmp     #$22
0009DEr 1  D0 07        	bne     L02A2
0009E0r 1  A2 00        	ldx     #$00
0009E2r 1  A9 03        	lda     #$03
0009E4r 1  4C rr rr     	jmp     incsp2
0009E7r 1  20 rr rr     L02A2:	jsr     ldax0sp
0009EAr 1  85 rr        	sta     ptr1
0009ECr 1  86 rr        	stx     ptr1+1
0009EEr 1  A0 00        	ldy     #$00
0009F0r 1  B1 rr        	lda     (ptr1),y
0009F2r 1  C9 3D        	cmp     #$3D
0009F4r 1  D0 20        	bne     L02A6
0009F6r 1  A2 00        	ldx     #$00
0009F8r 1  A9 01        	lda     #$01
0009FAr 1  20 rr rr     	jsr     addeq0sp
0009FDr 1  20 rr rr     	jsr     ldax0sp
000A00r 1  85 rr        	sta     ptr1
000A02r 1  86 rr        	stx     ptr1+1
000A04r 1  A2 00        	ldx     #$00
000A06r 1  A1 rr        	lda     (ptr1,x)
000A08r 1  C9 3D        	cmp     #$3D
000A0Ar 1  D0 05        	bne     L0575
000A0Cr 1  A9 0D        	lda     #$0D
000A0Er 1  4C rr rr     	jmp     incsp2
000A11r 1  A9 06        L0575:	lda     #$06
000A13r 1  4C rr rr     	jmp     incsp2
000A16r 1  20 rr rr     L02A6:	jsr     ldax0sp
000A19r 1  85 rr        	sta     ptr1
000A1Br 1  86 rr        	stx     ptr1+1
000A1Dr 1  A0 00        	ldy     #$00
000A1Fr 1  B1 rr        	lda     (ptr1),y
000A21r 1  C9 3C        	cmp     #$3C
000A23r 1  D0 20        	bne     L02AE
000A25r 1  A2 00        	ldx     #$00
000A27r 1  A9 01        	lda     #$01
000A29r 1  20 rr rr     	jsr     addeq0sp
000A2Cr 1  20 rr rr     	jsr     ldax0sp
000A2Fr 1  85 rr        	sta     ptr1
000A31r 1  86 rr        	stx     ptr1+1
000A33r 1  A2 00        	ldx     #$00
000A35r 1  A1 rr        	lda     (ptr1,x)
000A37r 1  C9 3D        	cmp     #$3D
000A39r 1  D0 05        	bne     L0576
000A3Br 1  A9 10        	lda     #$10
000A3Dr 1  4C rr rr     	jmp     incsp2
000A40r 1  A9 0F        L0576:	lda     #$0F
000A42r 1  4C rr rr     	jmp     incsp2
000A45r 1  20 rr rr     L02AE:	jsr     ldax0sp
000A48r 1  85 rr        	sta     ptr1
000A4Ar 1  86 rr        	stx     ptr1+1
000A4Cr 1  A0 00        	ldy     #$00
000A4Er 1  B1 rr        	lda     (ptr1),y
000A50r 1  C9 3E        	cmp     #$3E
000A52r 1  D0 20        	bne     L02B6
000A54r 1  A2 00        	ldx     #$00
000A56r 1  A9 01        	lda     #$01
000A58r 1  20 rr rr     	jsr     addeq0sp
000A5Br 1  20 rr rr     	jsr     ldax0sp
000A5Er 1  85 rr        	sta     ptr1
000A60r 1  86 rr        	stx     ptr1+1
000A62r 1  A2 00        	ldx     #$00
000A64r 1  A1 rr        	lda     (ptr1,x)
000A66r 1  C9 3D        	cmp     #$3D
000A68r 1  D0 05        	bne     L0577
000A6Ar 1  A9 12        	lda     #$12
000A6Cr 1  4C rr rr     	jmp     incsp2
000A6Fr 1  A9 11        L0577:	lda     #$11
000A71r 1  4C rr rr     	jmp     incsp2
000A74r 1  20 rr rr     L02B6:	jsr     ldax0sp
000A77r 1  85 rr        	sta     ptr1
000A79r 1  86 rr        	stx     ptr1+1
000A7Br 1  A0 00        	ldy     #$00
000A7Dr 1  B1 rr        	lda     (ptr1),y
000A7Fr 1  C9 2B        	cmp     #$2B
000A81r 1  D0 07        	bne     L02BE
000A83r 1  A2 00        	ldx     #$00
000A85r 1  A9 07        	lda     #$07
000A87r 1  4C rr rr     	jmp     incsp2
000A8Ar 1  20 rr rr     L02BE:	jsr     ldax0sp
000A8Dr 1  85 rr        	sta     ptr1
000A8Fr 1  86 rr        	stx     ptr1+1
000A91r 1  A0 00        	ldy     #$00
000A93r 1  B1 rr        	lda     (ptr1),y
000A95r 1  C9 2D        	cmp     #$2D
000A97r 1  D0 07        	bne     L02C2
000A99r 1  A2 00        	ldx     #$00
000A9Br 1  A9 08        	lda     #$08
000A9Dr 1  4C rr rr     	jmp     incsp2
000AA0r 1  20 rr rr     L02C2:	jsr     ldax0sp
000AA3r 1  85 rr        	sta     ptr1
000AA5r 1  86 rr        	stx     ptr1+1
000AA7r 1  A0 00        	ldy     #$00
000AA9r 1  B1 rr        	lda     (ptr1),y
000AABr 1  C9 2A        	cmp     #$2A
000AADr 1  D0 07        	bne     L02C6
000AAFr 1  A2 00        	ldx     #$00
000AB1r 1  A9 09        	lda     #$09
000AB3r 1  4C rr rr     	jmp     incsp2
000AB6r 1  20 rr rr     L02C6:	jsr     ldax0sp
000AB9r 1  85 rr        	sta     ptr1
000ABBr 1  86 rr        	stx     ptr1+1
000ABDr 1  A0 00        	ldy     #$00
000ABFr 1  B1 rr        	lda     (ptr1),y
000AC1r 1  C9 2F        	cmp     #$2F
000AC3r 1  D0 07        	bne     L02CA
000AC5r 1  A2 00        	ldx     #$00
000AC7r 1  A9 0A        	lda     #$0A
000AC9r 1  4C rr rr     	jmp     incsp2
000ACCr 1  20 rr rr     L02CA:	jsr     ldax0sp
000ACFr 1  85 rr        	sta     ptr1
000AD1r 1  86 rr        	stx     ptr1+1
000AD3r 1  A0 00        	ldy     #$00
000AD5r 1  B1 rr        	lda     (ptr1),y
000AD7r 1  C9 25        	cmp     #$25
000AD9r 1  D0 07        	bne     L02CE
000ADBr 1  A2 00        	ldx     #$00
000ADDr 1  A9 0B        	lda     #$0B
000ADFr 1  4C rr rr     	jmp     incsp2
000AE2r 1  20 rr rr     L02CE:	jsr     ldax0sp
000AE5r 1  85 rr        	sta     ptr1
000AE7r 1  86 rr        	stx     ptr1+1
000AE9r 1  A0 00        	ldy     #$00
000AEBr 1  B1 rr        	lda     (ptr1),y
000AEDr 1  C9 2C        	cmp     #$2C
000AEFr 1  D0 07        	bne     L02D2
000AF1r 1  A2 00        	ldx     #$00
000AF3r 1  A9 0C        	lda     #$0C
000AF5r 1  4C rr rr     	jmp     incsp2
000AF8r 1  20 rr rr     L02D2:	jsr     ldax0sp
000AFBr 1  85 rr        	sta     ptr1
000AFDr 1  86 rr        	stx     ptr1+1
000AFFr 1  A0 00        	ldy     #$00
000B01r 1  B1 rr        	lda     (ptr1),y
000B03r 1  F0 15        	beq     L0578
000B05r 1  20 rr rr     	jsr     ldax0sp
000B08r 1  85 rr        	sta     ptr1
000B0Ar 1  86 rr        	stx     ptr1+1
000B0Cr 1  A0 00        	ldy     #$00
000B0Er 1  B1 rr        	lda     (ptr1),y
000B10r 1  C9 3B        	cmp     #$3B
000B12r 1  F0 06        	beq     L0578
000B14r 1  A2 00        	ldx     #$00
000B16r 1  8A           	txa
000B17r 1  4C rr rr     	jmp     incsp2
000B1Ar 1  A2 00        L0578:	ldx     #$00
000B1Cr 1  A9 01        	lda     #$01
000B1Er 1  4C rr rr     	jmp     incsp2
000B21r 1               
000B21r 1               .endproc
000B21r 1               
000B21r 1               ; ---------------------------------------------------------------
000B21r 1               ; __near__ unsigned char * __near__ consume_token (__near__ unsigned char *, unsigned char)
000B21r 1               ; ---------------------------------------------------------------
000B21r 1               
000B21r 1               .segment	"CODE"
000B21r 1               
000B21r 1               .proc	_consume_token: near
000B21r 1               
000B21r 1               .segment	"CODE"
000B21r 1               
000B21r 1  20 rr rr     	jsr     pusha
000B24r 1  A0 02        	ldy     #$02
000B26r 1  20 rr rr     	jsr     ldaxysp
000B29r 1  20 rr rr     	jsr     _skip_whitespace
000B2Cr 1  A0 01        	ldy     #$01
000B2Er 1  20 rr rr     	jsr     staxysp
000B31r 1  A0 00        	ldy     #$00
000B33r 1  B1 rr        	lda     (sp),y
000B35r 1  C9 06        	cmp     #$06
000B37r 1  D0 14        	bne     L0584
000B39r 1  A0 02        	ldy     #$02
000B3Br 1  20 rr rr     	jsr     ldaxysp
000B3Er 1  85 rr        	sta     ptr1
000B40r 1  86 rr        	stx     ptr1+1
000B42r 1  A0 00        	ldy     #$00
000B44r 1  B1 rr        	lda     (ptr1),y
000B46r 1  C9 3D        	cmp     #$3D
000B48r 1  D0 03 4C rr  	jeq     L059E
000B4Cr 1  rr           
000B4Dr 1  B1 rr        L0584:	lda     (sp),y
000B4Fr 1  C9 07        	cmp     #$07
000B51r 1  D0 11        	bne     L0588
000B53r 1  A0 02        	ldy     #$02
000B55r 1  20 rr rr     	jsr     ldaxysp
000B58r 1  85 rr        	sta     ptr1
000B5Ar 1  86 rr        	stx     ptr1+1
000B5Cr 1  A0 00        	ldy     #$00
000B5Er 1  B1 rr        	lda     (ptr1),y
000B60r 1  C9 2B        	cmp     #$2B
000B62r 1  F0 73        	beq     L059E
000B64r 1  B1 rr        L0588:	lda     (sp),y
000B66r 1  C9 08        	cmp     #$08
000B68r 1  D0 11        	bne     L058C
000B6Ar 1  A0 02        	ldy     #$02
000B6Cr 1  20 rr rr     	jsr     ldaxysp
000B6Fr 1  85 rr        	sta     ptr1
000B71r 1  86 rr        	stx     ptr1+1
000B73r 1  A0 00        	ldy     #$00
000B75r 1  B1 rr        	lda     (ptr1),y
000B77r 1  C9 2D        	cmp     #$2D
000B79r 1  F0 5C        	beq     L059E
000B7Br 1  B1 rr        L058C:	lda     (sp),y
000B7Dr 1  C9 09        	cmp     #$09
000B7Fr 1  D0 11        	bne     L0590
000B81r 1  A0 02        	ldy     #$02
000B83r 1  20 rr rr     	jsr     ldaxysp
000B86r 1  85 rr        	sta     ptr1
000B88r 1  86 rr        	stx     ptr1+1
000B8Ar 1  A0 00        	ldy     #$00
000B8Cr 1  B1 rr        	lda     (ptr1),y
000B8Er 1  C9 2A        	cmp     #$2A
000B90r 1  F0 45        	beq     L059E
000B92r 1  B1 rr        L0590:	lda     (sp),y
000B94r 1  C9 0A        	cmp     #$0A
000B96r 1  D0 11        	bne     L0594
000B98r 1  A0 02        	ldy     #$02
000B9Ar 1  20 rr rr     	jsr     ldaxysp
000B9Dr 1  85 rr        	sta     ptr1
000B9Fr 1  86 rr        	stx     ptr1+1
000BA1r 1  A0 00        	ldy     #$00
000BA3r 1  B1 rr        	lda     (ptr1),y
000BA5r 1  C9 2F        	cmp     #$2F
000BA7r 1  F0 2E        	beq     L059E
000BA9r 1  B1 rr        L0594:	lda     (sp),y
000BABr 1  C9 0B        	cmp     #$0B
000BADr 1  D0 11        	bne     L0598
000BAFr 1  A0 02        	ldy     #$02
000BB1r 1  20 rr rr     	jsr     ldaxysp
000BB4r 1  85 rr        	sta     ptr1
000BB6r 1  86 rr        	stx     ptr1+1
000BB8r 1  A0 00        	ldy     #$00
000BBAr 1  B1 rr        	lda     (ptr1),y
000BBCr 1  C9 25        	cmp     #$25
000BBEr 1  F0 17        	beq     L059E
000BC0r 1  B1 rr        L0598:	lda     (sp),y
000BC2r 1  C9 0C        	cmp     #$0C
000BC4r 1  D0 1C        	bne     L05A0
000BC6r 1  A0 02        	ldy     #$02
000BC8r 1  20 rr rr     	jsr     ldaxysp
000BCBr 1  85 rr        	sta     ptr1
000BCDr 1  86 rr        	stx     ptr1+1
000BCFr 1  A0 00        	ldy     #$00
000BD1r 1  B1 rr        	lda     (ptr1),y
000BD3r 1  C9 2C        	cmp     #$2C
000BD5r 1  D0 0B        	bne     L05A0
000BD7r 1  A0 02        L059E:	ldy     #$02
000BD9r 1  20 rr rr     	jsr     ldaxysp
000BDCr 1  20 rr rr     	jsr     incax1
000BDFr 1  4C rr rr     	jmp     incsp3
000BE2r 1  B1 rr        L05A0:	lda     (sp),y
000BE4r 1  C9 06        	cmp     #$06
000BE6r 1  D0 30        	bne     L05A4
000BE8r 1  A0 02        	ldy     #$02
000BEAr 1  20 rr rr     	jsr     ldaxysp
000BEDr 1  85 rr        	sta     ptr1
000BEFr 1  86 rr        	stx     ptr1+1
000BF1r 1  A0 00        	ldy     #$00
000BF3r 1  B1 rr        	lda     (ptr1),y
000BF5r 1  C9 3D        	cmp     #$3D
000BF7r 1  D0 1F        	bne     L05A4
000BF9r 1  A0 02        	ldy     #$02
000BFBr 1  20 rr rr     	jsr     ldaxysp
000BFEr 1  20 rr rr     	jsr     incax1
000C01r 1  85 rr        	sta     ptr1
000C03r 1  86 rr        	stx     ptr1+1
000C05r 1  A0 00        	ldy     #$00
000C07r 1  B1 rr        	lda     (ptr1),y
000C09r 1  C9 3D        	cmp     #$3D
000C0Br 1  F0 0B        	beq     L05A4
000C0Dr 1  A0 02        	ldy     #$02
000C0Fr 1  20 rr rr     	jsr     ldaxysp
000C12r 1  20 rr rr     	jsr     incax1
000C15r 1  4C rr rr     	jmp     incsp3
000C18r 1  B1 rr        L05A4:	lda     (sp),y
000C1Ar 1  C9 0D        	cmp     #$0D
000C1Cr 1  D0 30        	bne     L05A8
000C1Er 1  A0 02        	ldy     #$02
000C20r 1  20 rr rr     	jsr     ldaxysp
000C23r 1  85 rr        	sta     ptr1
000C25r 1  86 rr        	stx     ptr1+1
000C27r 1  A0 00        	ldy     #$00
000C29r 1  B1 rr        	lda     (ptr1),y
000C2Br 1  C9 3D        	cmp     #$3D
000C2Dr 1  D0 1F        	bne     L05A8
000C2Fr 1  A0 02        	ldy     #$02
000C31r 1  20 rr rr     	jsr     ldaxysp
000C34r 1  20 rr rr     	jsr     incax1
000C37r 1  85 rr        	sta     ptr1
000C39r 1  86 rr        	stx     ptr1+1
000C3Br 1  A0 00        	ldy     #$00
000C3Dr 1  B1 rr        	lda     (ptr1),y
000C3Fr 1  C9 3D        	cmp     #$3D
000C41r 1  D0 0B        	bne     L05A8
000C43r 1  A0 02        	ldy     #$02
000C45r 1  20 rr rr     	jsr     ldaxysp
000C48r 1  20 rr rr     	jsr     incax2
000C4Br 1  4C rr rr     	jmp     incsp3
000C4Er 1  B1 rr        L05A8:	lda     (sp),y
000C50r 1  C9 0F        	cmp     #$0F
000C52r 1  D0 30        	bne     L05AC
000C54r 1  A0 02        	ldy     #$02
000C56r 1  20 rr rr     	jsr     ldaxysp
000C59r 1  85 rr        	sta     ptr1
000C5Br 1  86 rr        	stx     ptr1+1
000C5Dr 1  A0 00        	ldy     #$00
000C5Fr 1  B1 rr        	lda     (ptr1),y
000C61r 1  C9 3C        	cmp     #$3C
000C63r 1  D0 1F        	bne     L05AC
000C65r 1  A0 02        	ldy     #$02
000C67r 1  20 rr rr     	jsr     ldaxysp
000C6Ar 1  20 rr rr     	jsr     incax1
000C6Dr 1  85 rr        	sta     ptr1
000C6Fr 1  86 rr        	stx     ptr1+1
000C71r 1  A0 00        	ldy     #$00
000C73r 1  B1 rr        	lda     (ptr1),y
000C75r 1  C9 3D        	cmp     #$3D
000C77r 1  F0 0B        	beq     L05AC
000C79r 1  A0 02        	ldy     #$02
000C7Br 1  20 rr rr     	jsr     ldaxysp
000C7Er 1  20 rr rr     	jsr     incax1
000C81r 1  4C rr rr     	jmp     incsp3
000C84r 1  B1 rr        L05AC:	lda     (sp),y
000C86r 1  C9 10        	cmp     #$10
000C88r 1  D0 30        	bne     L05B0
000C8Ar 1  A0 02        	ldy     #$02
000C8Cr 1  20 rr rr     	jsr     ldaxysp
000C8Fr 1  85 rr        	sta     ptr1
000C91r 1  86 rr        	stx     ptr1+1
000C93r 1  A0 00        	ldy     #$00
000C95r 1  B1 rr        	lda     (ptr1),y
000C97r 1  C9 3C        	cmp     #$3C
000C99r 1  D0 1F        	bne     L05B0
000C9Br 1  A0 02        	ldy     #$02
000C9Dr 1  20 rr rr     	jsr     ldaxysp
000CA0r 1  20 rr rr     	jsr     incax1
000CA3r 1  85 rr        	sta     ptr1
000CA5r 1  86 rr        	stx     ptr1+1
000CA7r 1  A0 00        	ldy     #$00
000CA9r 1  B1 rr        	lda     (ptr1),y
000CABr 1  C9 3D        	cmp     #$3D
000CADr 1  D0 0B        	bne     L05B0
000CAFr 1  A0 02        	ldy     #$02
000CB1r 1  20 rr rr     	jsr     ldaxysp
000CB4r 1  20 rr rr     	jsr     incax2
000CB7r 1  4C rr rr     	jmp     incsp3
000CBAr 1  B1 rr        L05B0:	lda     (sp),y
000CBCr 1  C9 11        	cmp     #$11
000CBEr 1  D0 30        	bne     L05B4
000CC0r 1  A0 02        	ldy     #$02
000CC2r 1  20 rr rr     	jsr     ldaxysp
000CC5r 1  85 rr        	sta     ptr1
000CC7r 1  86 rr        	stx     ptr1+1
000CC9r 1  A0 00        	ldy     #$00
000CCBr 1  B1 rr        	lda     (ptr1),y
000CCDr 1  C9 3E        	cmp     #$3E
000CCFr 1  D0 1F        	bne     L05B4
000CD1r 1  A0 02        	ldy     #$02
000CD3r 1  20 rr rr     	jsr     ldaxysp
000CD6r 1  20 rr rr     	jsr     incax1
000CD9r 1  85 rr        	sta     ptr1
000CDBr 1  86 rr        	stx     ptr1+1
000CDDr 1  A0 00        	ldy     #$00
000CDFr 1  B1 rr        	lda     (ptr1),y
000CE1r 1  C9 3D        	cmp     #$3D
000CE3r 1  F0 0B        	beq     L05B4
000CE5r 1  A0 02        	ldy     #$02
000CE7r 1  20 rr rr     	jsr     ldaxysp
000CEAr 1  20 rr rr     	jsr     incax1
000CEDr 1  4C rr rr     	jmp     incsp3
000CF0r 1  B1 rr        L05B4:	lda     (sp),y
000CF2r 1  C9 12        	cmp     #$12
000CF4r 1  D0 30        	bne     L05B8
000CF6r 1  A0 02        	ldy     #$02
000CF8r 1  20 rr rr     	jsr     ldaxysp
000CFBr 1  85 rr        	sta     ptr1
000CFDr 1  86 rr        	stx     ptr1+1
000CFFr 1  A0 00        	ldy     #$00
000D01r 1  B1 rr        	lda     (ptr1),y
000D03r 1  C9 3E        	cmp     #$3E
000D05r 1  D0 1F        	bne     L05B8
000D07r 1  A0 02        	ldy     #$02
000D09r 1  20 rr rr     	jsr     ldaxysp
000D0Cr 1  20 rr rr     	jsr     incax1
000D0Fr 1  85 rr        	sta     ptr1
000D11r 1  86 rr        	stx     ptr1+1
000D13r 1  A0 00        	ldy     #$00
000D15r 1  B1 rr        	lda     (ptr1),y
000D17r 1  C9 3D        	cmp     #$3D
000D19r 1  D0 0B        	bne     L05B8
000D1Br 1  A0 02        	ldy     #$02
000D1Dr 1  20 rr rr     	jsr     ldaxysp
000D20r 1  20 rr rr     	jsr     incax2
000D23r 1  4C rr rr     	jmp     incsp3
000D26r 1  B1 rr        L05B8:	lda     (sp),y
000D28r 1  C9 13        	cmp     #$13
000D2Ar 1  D0 28        	bne     L05BD
000D2Cr 1  A0 04        	ldy     #$04
000D2Er 1  20 rr rr     	jsr     pushwysp
000D31r 1  A9 rr        	lda     #<(L0263)
000D33r 1  A2 rr        	ldx     #>(L0263)
000D35r 1  20 rr rr     	jsr     pushax
000D38r 1  A2 00        	ldx     #$00
000D3Ar 1  A9 04        	lda     #$04
000D3Cr 1  20 rr rr     	jsr     _strncmp
000D3Fr 1  E0 00        	cpx     #$00
000D41r 1  D0 0F        	bne     L025F
000D43r 1  C9 00        	cmp     #$00
000D45r 1  D0 0B        	bne     L025F
000D47r 1  A0 02        	ldy     #$02
000D49r 1  20 rr rr     	jsr     ldaxysp
000D4Cr 1  20 rr rr     	jsr     incax4
000D4Fr 1  4C rr rr     	jmp     incsp3
000D52r 1  A0 00        L025F:	ldy     #$00
000D54r 1  B1 rr        L05BD:	lda     (sp),y
000D56r 1  C9 14        	cmp     #$14
000D58r 1  D0 26        	bne     L026A
000D5Ar 1  A0 04        	ldy     #$04
000D5Cr 1  20 rr rr     	jsr     pushwysp
000D5Fr 1  A9 rr        	lda     #<(L026E)
000D61r 1  A2 rr        	ldx     #>(L026E)
000D63r 1  20 rr rr     	jsr     pushax
000D66r 1  A2 00        	ldx     #$00
000D68r 1  A9 07        	lda     #$07
000D6Ar 1  20 rr rr     	jsr     _strncmp
000D6Dr 1  E0 00        	cpx     #$00
000D6Fr 1  D0 0F        	bne     L026A
000D71r 1  C9 00        	cmp     #$00
000D73r 1  D0 0B        	bne     L026A
000D75r 1  A0 02        	ldy     #$02
000D77r 1  20 rr rr     	jsr     ldaxysp
000D7Ar 1  20 rr rr     	jsr     incax7
000D7Dr 1  4C rr rr     	jmp     incsp3
000D80r 1  A0 02        L026A:	ldy     #$02
000D82r 1  20 rr rr     	jsr     ldaxysp
000D85r 1  20 rr rr     	jsr     _next_token
000D88r 1  20 rr rr     	jsr     _syntax_error_invalid_token
000D8Br 1  A2 00        	ldx     #$00
000D8Dr 1  8A           	txa
000D8Er 1  4C rr rr     	jmp     incsp3
000D91r 1               
000D91r 1               .endproc
000D91r 1               
000D91r 1               ; ---------------------------------------------------------------
000D91r 1               ; __near__ unsigned char * __near__ skip_whitespace (__near__ unsigned char *)
000D91r 1               ; ---------------------------------------------------------------
000D91r 1               
000D91r 1               .segment	"CODE"
000D91r 1               
000D91r 1               .proc	_skip_whitespace: near
000D91r 1               
000D91r 1               .segment	"CODE"
000D91r 1               
000D91r 1  20 rr rr     	jsr     pushax
000D94r 1  4C rr rr     	jmp     L02DE
000D97r 1  A9 01        L05BF:	lda     #$01
000D99r 1  20 rr rr     	jsr     addeqysp
000D9Cr 1  20 rr rr     L02DE:	jsr     ldax0sp
000D9Fr 1  85 rr        	sta     ptr1
000DA1r 1  86 rr        	stx     ptr1+1
000DA3r 1  A0 00        	ldy     #$00
000DA5r 1  A2 00        	ldx     #$00
000DA7r 1  B1 rr        	lda     (ptr1),y
000DA9r 1  C9 20        	cmp     #$20
000DABr 1  F0 EA        	beq     L05BF
000DADr 1  20 rr rr     	jsr     ldax0sp
000DB0r 1  4C rr rr     	jmp     incsp2
000DB3r 1               
000DB3r 1               .endproc
000DB3r 1               
000DB3r 1               ; ---------------------------------------------------------------
000DB3r 1               ; __near__ unsigned char * __near__ find_args (__near__ unsigned char *)
000DB3r 1               ; ---------------------------------------------------------------
000DB3r 1               
000DB3r 1               .segment	"CODE"
000DB3r 1               
000DB3r 1               .proc	_find_args: near
000DB3r 1               
000DB3r 1               .segment	"CODE"
000DB3r 1               
000DB3r 1  20 rr rr     	jsr     pushax
000DB6r 1  20 rr rr     	jsr     pushw0sp
000DB9r 1  4C rr rr     	jmp     L02E6
000DBCr 1  20 rr rr     L05C3:	jsr     addeqysp
000DBFr 1  20 rr rr     L02E6:	jsr     ldax0sp
000DC2r 1  85 rr        	sta     ptr1
000DC4r 1  86 rr        	stx     ptr1+1
000DC6r 1  A0 00        	ldy     #$00
000DC8r 1  B1 rr        	lda     (ptr1),y
000DCAr 1  F0 16        	beq     L05C0
000DCCr 1  20 rr rr     	jsr     ldax0sp
000DCFr 1  85 rr        	sta     ptr1
000DD1r 1  86 rr        	stx     ptr1+1
000DD3r 1  A0 00        	ldy     #$00
000DD5r 1  A2 00        	ldx     #$00
000DD7r 1  B1 rr        	lda     (ptr1),y
000DD9r 1  C9 20        	cmp     #$20
000DDBr 1  F0 05        	beq     L05C0
000DDDr 1  A9 01        	lda     #$01
000DDFr 1  4C rr rr     	jmp     L05C3
000DE2r 1  20 rr rr     L05C0:	jsr     ldax0sp
000DE5r 1  20 rr rr     	jsr     _skip_whitespace
000DE8r 1  4C rr rr     	jmp     incsp4
000DEBr 1               
000DEBr 1               .endproc
000DEBr 1               
000DEBr 1               ; ---------------------------------------------------------------
000DEBr 1               ; unsigned char __near__ find_keyword (__near__ unsigned char *)
000DEBr 1               ; ---------------------------------------------------------------
000DEBr 1               
000DEBr 1               .segment	"CODE"
000DEBr 1               
000DEBr 1               .proc	_find_keyword: near
000DEBr 1               
000DEBr 1               .segment	"CODE"
000DEBr 1               
000DEBr 1  20 rr rr     	jsr     pushax
000DEEr 1  A9 00        	lda     #$00
000DF0r 1  20 rr rr     	jsr     pusha
000DF3r 1  A9 rr        	lda     #<(_keywords)
000DF5r 1  A2 rr        	ldx     #>(_keywords)
000DF7r 1  20 rr rr     	jsr     pushax
000DFAr 1  4C rr rr     	jmp     L02F2
000DFDr 1  20 rr rr     L05C7:	jsr     ldaxysp
000E00r 1  20 rr rr     	jsr     pushw
000E03r 1  A0 08        	ldy     #$08
000E05r 1  20 rr rr     	jsr     pushwysp
000E08r 1  A0 05        	ldy     #$05
000E0Ar 1  20 rr rr     	jsr     ldaxysp
000E0Dr 1  20 rr rr     	jsr     ldaxi
000E10r 1  20 rr rr     	jsr     _strlen
000E13r 1  20 rr rr     	jsr     _strncasecmp
000E16r 1  E0 00        	cpx     #$00
000E18r 1  D0 0B        	bne     L02F4
000E1Ar 1  C9 00        	cmp     #$00
000E1Cr 1  D0 07        	bne     L02F4
000E1Er 1  A0 02        	ldy     #$02
000E20r 1  B1 rr        	lda     (sp),y
000E22r 1  4C rr rr     	jmp     incsp5
000E25r 1  A0 02        L02F4:	ldy     #$02
000E27r 1  18           	clc
000E28r 1  A9 01        	lda     #$01
000E2Ar 1  71 rr        	adc     (sp),y
000E2Cr 1  91 rr        	sta     (sp),y
000E2Er 1  A2 00        	ldx     #$00
000E30r 1  98           	tya
000E31r 1  20 rr rr     	jsr     addeq0sp
000E34r 1  20 rr rr     L02F2:	jsr     ldax0sp
000E37r 1  A0 00        	ldy     #$00
000E39r 1  85 rr        	sta     ptr1
000E3Br 1  86 rr        	stx     ptr1+1
000E3Dr 1  B1 rr        	lda     (ptr1),y
000E3Fr 1  C8           	iny
000E40r 1  11 rr        	ora     (ptr1),y
000E42r 1  D0 B9        	bne     L05C7
000E44r 1  AA           	tax
000E45r 1  A9 FF        	lda     #$FF
000E47r 1  4C rr rr     	jmp     incsp5
000E4Ar 1               
000E4Ar 1               .endproc
000E4Ar 1               
000E4Ar 1               ; ---------------------------------------------------------------
000E4Ar 1               ; void __near__ syntax_error_invalid_token (unsigned char)
000E4Ar 1               ; ---------------------------------------------------------------
000E4Ar 1               
000E4Ar 1               .segment	"CODE"
000E4Ar 1               
000E4Ar 1               .proc	_syntax_error_invalid_token: near
000E4Ar 1               
000E4Ar 1               .segment	"CODE"
000E4Ar 1               
000E4Ar 1  20 rr rr     	jsr     pusha
000E4Dr 1  A2 00        	ldx     #$00
000E4Fr 1  A1 rr        	lda     (sp,x)
000E51r 1  0A           	asl     a
000E52r 1  90 02        	bcc     L05C9
000E54r 1  E8           	inx
000E55r 1  18           	clc
000E56r 1  69 rr        L05C9:	adc     #<(_token_strings)
000E58r 1  A8           	tay
000E59r 1  8A           	txa
000E5Ar 1  69 rr        	adc     #>(_token_strings)
000E5Cr 1  AA           	tax
000E5Dr 1  98           	tya
000E5Er 1  20 rr rr     	jsr     pushw
000E61r 1  A9 rr        	lda     #<(L031D)
000E63r 1  A2 rr        	ldx     #>(L031D)
000E65r 1  20 rr rr     	jsr     pushax
000E68r 1  A0 03        	ldy     #$03
000E6Ar 1  20 rr rr     	jsr     ldaxysp
000E6Dr 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
000E70r 1  4C rr rr     	jmp     incsp3
000E73r 1               
000E73r 1               .endproc
000E73r 1               
000E73r 1               ; ---------------------------------------------------------------
000E73r 1               ; void __near__ delete_line (unsigned int)
000E73r 1               ; ---------------------------------------------------------------
000E73r 1               
000E73r 1               .segment	"CODE"
000E73r 1               
000E73r 1               .proc	_delete_line: near
000E73r 1               
000E73r 1               .segment	"CODE"
000E73r 1               
000E73r 1  20 rr rr     	jsr     pushax
000E76r 1  20 rr rr     	jsr     push0
000E79r 1  AD rr rr     	lda     _program
000E7Cr 1  AE rr rr     	ldx     _program+1
000E7Fr 1  20 rr rr     	jsr     pushax
000E82r 1  4C rr rr     	jmp     L0325
000E85r 1  20 rr rr     L0323:	jsr     ldax0sp
000E88r 1  20 rr rr     	jsr     ldaxi
000E8Br 1  A0 04        	ldy     #$04
000E8Dr 1  D1 rr        	cmp     (sp),y
000E8Fr 1  D0 4C        	bne     L0327
000E91r 1  8A           	txa
000E92r 1  C8           	iny
000E93r 1  D1 rr        	cmp     (sp),y
000E95r 1  D0 46        	bne     L0327
000E97r 1  A0 03        	ldy     #$03
000E99r 1  B1 rr        	lda     (sp),y
000E9Br 1  88           	dey
000E9Cr 1  11 rr        	ora     (sp),y
000E9Er 1  F0 1B        	beq     L0329
000EA0r 1  C8           	iny
000EA1r 1  20 rr rr     	jsr     ldaxysp
000EA4r 1  85 rr        	sta     sreg
000EA6r 1  86 rr        	stx     sreg+1
000EA8r 1  20 rr rr     	jsr     ldax0sp
000EABr 1  A0 06        	ldy     #$06
000EADr 1  20 rr rr     	jsr     ldaxidx
000EB0r 1  A0 05        	ldy     #$05
000EB2r 1  91 rr        	sta     (sreg),y
000EB4r 1  C8           	iny
000EB5r 1  8A           	txa
000EB6r 1  91 rr        	sta     (sreg),y
000EB8r 1  4C rr rr     	jmp     L032D
000EBBr 1  20 rr rr     L0329:	jsr     ldax0sp
000EBEr 1  A0 06        	ldy     #$06
000EC0r 1  20 rr rr     	jsr     ldaxidx
000EC3r 1  8D rr rr     	sta     _program
000EC6r 1  8E rr rr     	stx     _program+1
000EC9r 1  20 rr rr     L032D:	jsr     ldax0sp
000ECCr 1  A0 04        	ldy     #$04
000ECEr 1  20 rr rr     	jsr     ldaxidx
000ED1r 1  20 rr rr     	jsr     _free
000ED4r 1  20 rr rr     	jsr     ldax0sp
000ED7r 1  20 rr rr     	jsr     _free
000EDAr 1  4C rr rr     	jmp     incsp6
000EDDr 1  20 rr rr     L0327:	jsr     ldax0sp
000EE0r 1  A0 02        	ldy     #$02
000EE2r 1  20 rr rr     	jsr     staxysp
000EE5r 1  20 rr rr     	jsr     ldax0sp
000EE8r 1  A0 06        	ldy     #$06
000EEAr 1  20 rr rr     	jsr     ldaxidx
000EEDr 1  20 rr rr     	jsr     stax0sp
000EF0r 1  A0 01        L0325:	ldy     #$01
000EF2r 1  B1 rr        	lda     (sp),y
000EF4r 1  88           	dey
000EF5r 1  11 rr        	ora     (sp),y
000EF7r 1  D0 8C        	bne     L0323
000EF9r 1  4C rr rr     	jmp     incsp6
000EFCr 1               
000EFCr 1               .endproc
000EFCr 1               
000EFCr 1               ; ---------------------------------------------------------------
000EFCr 1               ; void __near__ create_line (unsigned int, __near__ unsigned char *)
000EFCr 1               ; ---------------------------------------------------------------
000EFCr 1               
000EFCr 1               .segment	"CODE"
000EFCr 1               
000EFCr 1               .proc	_create_line: near
000EFCr 1               
000EFCr 1               .segment	"CODE"
000EFCr 1               
000EFCr 1  20 rr rr     	jsr     pushax
000EFFr 1  20 rr rr     	jsr     decsp5
000F02r 1  A0 06        	ldy     #$06
000F04r 1  20 rr rr     	jsr     ldaxysp
000F07r 1  20 rr rr     	jsr     _find_args
000F0Ar 1  A0 02        	ldy     #$02
000F0Cr 1  20 rr rr     	jsr     staxysp
000F0Fr 1  A0 06        	ldy     #$06
000F11r 1  20 rr rr     	jsr     ldaxysp
000F14r 1  20 rr rr     	jsr     _find_keyword
000F17r 1  A0 04        	ldy     #$04
000F19r 1  91 rr        	sta     (sp),y
000F1Br 1  C9 FF        	cmp     #$FF
000F1Dr 1  D0 03 4C rr  	jeq     L033F
000F21r 1  rr           
000F22r 1  A0 08        	ldy     #$08
000F24r 1  20 rr rr     	jsr     ldaxysp
000F27r 1  20 rr rr     	jsr     _delete_line
000F2Ar 1  A2 00        	ldx     #$00
000F2Cr 1  A9 07        	lda     #$07
000F2Er 1  20 rr rr     	jsr     _malloc
000F31r 1  20 rr rr     	jsr     stax0sp
000F34r 1  85 rr        	sta     ptr1
000F36r 1  86 rr        	stx     ptr1+1
000F38r 1  A0 08        	ldy     #$08
000F3Ar 1  20 rr rr     	jsr     ldaxysp
000F3Dr 1  A0 00        	ldy     #$00
000F3Fr 1  91 rr        	sta     (ptr1),y
000F41r 1  C8           	iny
000F42r 1  8A           	txa
000F43r 1  91 rr        	sta     (ptr1),y
000F45r 1  20 rr rr     	jsr     ldax0sp
000F48r 1  85 rr        	sta     ptr1
000F4Ar 1  86 rr        	stx     ptr1+1
000F4Cr 1  A0 04        	ldy     #$04
000F4Er 1  B1 rr        	lda     (sp),y
000F50r 1  A0 02        	ldy     #$02
000F52r 1  91 rr        	sta     (ptr1),y
000F54r 1  20 rr rr     	jsr     pushw0sp
000F57r 1  A0 05        	ldy     #$05
000F59r 1  20 rr rr     	jsr     ldaxysp
000F5Cr 1  20 rr rr     	jsr     _strlen
000F5Fr 1  20 rr rr     	jsr     incax1
000F62r 1  20 rr rr     	jsr     _malloc
000F65r 1  A0 03        	ldy     #$03
000F67r 1  20 rr rr     	jsr     staxspidx
000F6Ar 1  20 rr rr     	jsr     ldax0sp
000F6Dr 1  A0 04        	ldy     #$04
000F6Fr 1  20 rr rr     	jsr     pushwidx
000F72r 1  A0 05        	ldy     #$05
000F74r 1  20 rr rr     	jsr     ldaxysp
000F77r 1  20 rr rr     	jsr     _strcpy
000F7Ar 1  AD rr rr     	lda     _program
000F7Dr 1  0D rr rr     	ora     _program+1
000F80r 1  D0 03 4C rr  	jeq     L0351
000F84r 1  rr           
000F85r 1  A0 0A        	ldy     #$0A
000F87r 1  20 rr rr     	jsr     pushwysp
000F8Ar 1  AD rr rr     	lda     _program
000F8Dr 1  AE rr rr     	ldx     _program+1
000F90r 1  20 rr rr     	jsr     ldaxi
000F93r 1  20 rr rr     	jsr     tosicmp
000F96r 1  F0 75        	beq     L0351
000F98r 1  90 73        	bcc     L0351
000F9Ar 1  AD rr rr     	lda     _program
000F9Dr 1  AE rr rr     	ldx     _program+1
000FA0r 1  20 rr rr     	jsr     pushax
000FA3r 1  4C rr rr     	jmp     L0358
000FA6r 1  20 rr rr     L0356:	jsr     ldax0sp
000FA9r 1  A0 06        	ldy     #$06
000FABr 1  20 rr rr     	jsr     ldaxidx
000FAEr 1  20 rr rr     	jsr     stax0sp
000FB1r 1  20 rr rr     L0358:	jsr     ldax0sp
000FB4r 1  A0 05        	ldy     #$05
000FB6r 1  85 rr        	sta     ptr1
000FB8r 1  86 rr        	stx     ptr1+1
000FBAr 1  B1 rr        	lda     (ptr1),y
000FBCr 1  C8           	iny
000FBDr 1  11 rr        	ora     (ptr1),y
000FBFr 1  F0 19        	beq     L05CB
000FC1r 1  A0 0C        	ldy     #$0C
000FC3r 1  20 rr rr     	jsr     pushwysp
000FC6r 1  A0 03        	ldy     #$03
000FC8r 1  20 rr rr     	jsr     ldaxysp
000FCBr 1  A0 06        	ldy     #$06
000FCDr 1  20 rr rr     	jsr     ldaxidx
000FD0r 1  20 rr rr     	jsr     ldaxi
000FD3r 1  20 rr rr     	jsr     tosicmp
000FD6r 1  F0 02        	beq     L05CB
000FD8r 1  B0 CC        	bcs     L0356
000FDAr 1  A0 03        L05CB:	ldy     #$03
000FDCr 1  20 rr rr     	jsr     ldaxysp
000FDFr 1  85 rr        	sta     sreg
000FE1r 1  86 rr        	stx     sreg+1
000FE3r 1  20 rr rr     	jsr     ldax0sp
000FE6r 1  A0 06        	ldy     #$06
000FE8r 1  20 rr rr     	jsr     ldaxidx
000FEBr 1  A0 05        	ldy     #$05
000FEDr 1  91 rr        	sta     (sreg),y
000FEFr 1  C8           	iny
000FF0r 1  8A           	txa
000FF1r 1  91 rr        	sta     (sreg),y
000FF3r 1  20 rr rr     	jsr     ldax0sp
000FF6r 1  85 rr        	sta     ptr1
000FF8r 1  86 rr        	stx     ptr1+1
000FFAr 1  A0 03        	ldy     #$03
000FFCr 1  20 rr rr     	jsr     ldaxysp
000FFFr 1  A0 05        	ldy     #$05
001001r 1  91 rr        	sta     (ptr1),y
001003r 1  C8           	iny
001004r 1  8A           	txa
001005r 1  91 rr        	sta     (ptr1),y
001007r 1  20 rr rr     	jsr     incsp2
00100Ar 1  4C rr rr     	jmp     L0367
00100Dr 1  20 rr rr     L0351:	jsr     ldax0sp
001010r 1  85 rr        	sta     ptr1
001012r 1  86 rr        	stx     ptr1+1
001014r 1  AD rr rr     	lda     _program
001017r 1  A0 05        	ldy     #$05
001019r 1  91 rr        	sta     (ptr1),y
00101Br 1  C8           	iny
00101Cr 1  AD rr rr     	lda     _program+1
00101Fr 1  91 rr        	sta     (ptr1),y
001021r 1  20 rr rr     	jsr     ldax0sp
001024r 1  8D rr rr     	sta     _program
001027r 1  8E rr rr     	stx     _program+1
00102Ar 1  4C rr rr     	jmp     L0367
00102Dr 1  A9 rr        L033F:	lda     #<(L0369)
00102Fr 1  A2 rr        	ldx     #>(L0369)
001031r 1  20 rr rr     	jsr     _acia_puts
001034r 1  A0 09        L0367:	ldy     #$09
001036r 1  4C rr rr     	jmp     addysp
001039r 1               
001039r 1               .endproc
001039r 1               
001039r 1               ; ---------------------------------------------------------------
001039r 1               ; void __near__ cmd_goto (__near__ unsigned char *)
001039r 1               ; ---------------------------------------------------------------
001039r 1               
001039r 1               .segment	"CODE"
001039r 1               
001039r 1               .proc	_cmd_goto: near
001039r 1               
001039r 1               .segment	"CODE"
001039r 1               
001039r 1  20 rr rr     	jsr     pushax
00103Cr 1  20 rr rr     	jsr     decsp4
00103Fr 1  A0 05        	ldy     #$05
001041r 1  20 rr rr     	jsr     ldaxysp
001044r 1  85 rr        	sta     ptr1
001046r 1  86 rr        	stx     ptr1+1
001048r 1  A0 00        	ldy     #$00
00104Ar 1  B1 rr        	lda     (ptr1),y
00104Cr 1  A2 00        	ldx     #$00
00104Er 1  20 rr rr     	jsr     _isdigit
001051r 1  86 rr        	stx     tmp1
001053r 1  05 rr        	ora     tmp1
001055r 1  F0 69        	beq     L0403
001057r 1  A0 07        	ldy     #$07
001059r 1  20 rr rr     	jsr     pushwysp
00105Cr 1  A9 rr        	lda     #<(L0409)
00105Er 1  A2 rr        	ldx     #>(L0409)
001060r 1  20 rr rr     	jsr     pushax
001063r 1  A9 06        	lda     #$06
001065r 1  20 rr rr     	jsr     leaa0sp
001068r 1  20 rr rr     	jsr     pushax
00106Br 1  A0 06        	ldy     #$06
00106Dr 1  20 rr rr     	jsr     _sscanf
001070r 1  AD rr rr     	lda     _program
001073r 1  AE rr rr     	ldx     _program+1
001076r 1  4C rr rr     	jmp     L05CE
001079r 1  20 rr rr     L040E:	jsr     ldax0sp
00107Cr 1  20 rr rr     	jsr     ldaxi
00107Fr 1  A0 02        	ldy     #$02
001081r 1  D1 rr        	cmp     (sp),y
001083r 1  D0 17        	bne     L0412
001085r 1  8A           	txa
001086r 1  C8           	iny
001087r 1  D1 rr        	cmp     (sp),y
001089r 1  D0 11        	bne     L0412
00108Br 1  20 rr rr     	jsr     ldax0sp
00108Er 1  8D rr rr     	sta     _current_line
001091r 1  8E rr rr     	stx     _current_line+1
001094r 1  A9 01        	lda     #$01
001096r 1  8D rr rr     	sta     _current_line_changed
001099r 1  4C rr rr     	jmp     incsp6
00109Cr 1  20 rr rr     L0412:	jsr     ldax0sp
00109Fr 1  A0 06        	ldy     #$06
0010A1r 1  20 rr rr     	jsr     ldaxidx
0010A4r 1  20 rr rr     L05CE:	jsr     stax0sp
0010A7r 1  A0 01        	ldy     #$01
0010A9r 1  B1 rr        	lda     (sp),y
0010ABr 1  88           	dey
0010ACr 1  11 rr        	ora     (sp),y
0010AEr 1  D0 C9        	bne     L040E
0010B0r 1  A9 rr        	lda     #<(L041B)
0010B2r 1  A2 rr        	ldx     #>(L041B)
0010B4r 1  20 rr rr     	jsr     pushax
0010B7r 1  A2 00        	ldx     #$00
0010B9r 1  8A           	txa
0010BAr 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
0010BDr 1  4C rr rr     	jmp     incsp6
0010C0r 1  20 rr rr     L0403:	jsr     _syntax_error
0010C3r 1  4C rr rr     	jmp     incsp6
0010C6r 1               
0010C6r 1               .endproc
0010C6r 1               
0010C6r 1               ; ---------------------------------------------------------------
0010C6r 1               ; void __near__ cmd_run (__near__ unsigned char *)
0010C6r 1               ; ---------------------------------------------------------------
0010C6r 1               
0010C6r 1               .segment	"CODE"
0010C6r 1               
0010C6r 1               .proc	_cmd_run: near
0010C6r 1               
0010C6r 1               .segment	"CODE"
0010C6r 1               
0010C6r 1  20 rr rr     	jsr     pushax
0010C9r 1  20 rr rr     	jsr     decsp1
0010CCr 1  A9 00        	lda     #$00
0010CEr 1  8D rr rr     	sta     _error
0010D1r 1  A9 01        	lda     #$01
0010D3r 1  8D rr rr     	sta     _running
0010D6r 1  AD rr rr     	lda     _program
0010D9r 1  8D rr rr     	sta     _current_line
0010DCr 1  AD rr rr     	lda     _program+1
0010DFr 1  8D rr rr     	sta     _current_line+1
0010E2r 1  A9 00        	lda     #$00
0010E4r 1  8D rr rr     	sta     _current_line_changed
0010E7r 1  4C rr rr     	jmp     L03EC
0010EAr 1  A5 rr        L03EA:	lda     _interrupted+3
0010ECr 1  05 rr        	ora     _interrupted+2
0010EEr 1  05 rr        	ora     _interrupted+1
0010F0r 1  05 rr        	ora     _interrupted+0
0010F2r 1  F0 06        	beq     L03EE
0010F4r 1  20 rr rr     	jsr     _print_interrupted
0010F7r 1  4C rr rr     	jmp     L03EB
0010FAr 1  AD rr rr     L03EE:	lda     _current_line
0010FDr 1  85 rr        	sta     ptr1
0010FFr 1  AD rr rr     	lda     _current_line+1
001102r 1  85 rr        	sta     ptr1+1
001104r 1  A0 02        	ldy     #$02
001106r 1  B1 rr        	lda     (ptr1),y
001108r 1  A0 00        	ldy     #$00
00110Ar 1  91 rr        	sta     (sp),y
00110Cr 1  A2 00        	ldx     #$00
00110Er 1  B1 rr        	lda     (sp),y
001110r 1  0A           	asl     a
001111r 1  90 02        	bcc     L05D0
001113r 1  E8           	inx
001114r 1  18           	clc
001115r 1  69 rr        L05D0:	adc     #<(_command_functions)
001117r 1  A8           	tay
001118r 1  8A           	txa
001119r 1  69 rr        	adc     #>(_command_functions)
00111Br 1  AA           	tax
00111Cr 1  98           	tya
00111Dr 1  20 rr rr     	jsr     pushw
001120r 1  AD rr rr     	lda     _current_line
001123r 1  AE rr rr     	ldx     _current_line+1
001126r 1  A0 04        	ldy     #$04
001128r 1  20 rr rr     	jsr     ldaxidx
00112Br 1  48           	pha
00112Cr 1  A0 00        	ldy     #$00
00112Er 1  B1 rr        	lda     (sp),y
001130r 1  8D rr rr     	sta     jmpvec+1
001133r 1  C8           	iny
001134r 1  B1 rr        	lda     (sp),y
001136r 1  8D rr rr     	sta     jmpvec+2
001139r 1  68           	pla
00113Ar 1  20 rr rr     	jsr     jmpvec
00113Dr 1  20 rr rr     	jsr     incsp2
001140r 1  AD rr rr     	lda     _error
001143r 1  D0 31        	bne     L03EB
001145r 1  AD rr rr     	lda     _current_line_changed
001148r 1  F0 10        	beq     L03F8
00114Ar 1  A9 00        	lda     #$00
00114Cr 1  8D rr rr     	sta     _current_line_changed
00114Fr 1  AD rr rr     	lda     _current_line
001152r 1  0D rr rr     	ora     _current_line+1
001155r 1  D0 14        	bne     L03EC
001157r 1  4C rr rr     	jmp     L03EB
00115Ar 1  AD rr rr     L03F8:	lda     _current_line
00115Dr 1  AE rr rr     	ldx     _current_line+1
001160r 1  A0 06        	ldy     #$06
001162r 1  20 rr rr     	jsr     ldaxidx
001165r 1  8D rr rr     	sta     _current_line
001168r 1  8E rr rr     	stx     _current_line+1
00116Br 1  AD rr rr     L03EC:	lda     _current_line
00116Er 1  0D rr rr     	ora     _current_line+1
001171r 1  F0 03 4C rr  	jne     L03EA
001175r 1  rr           
001176r 1  20 rr rr     L03EB:	jsr     _print_ready
001179r 1  4C rr rr     	jmp     incsp3
00117Cr 1               
00117Cr 1               .endproc
00117Cr 1               
00117Cr 1               ; ---------------------------------------------------------------
00117Cr 1               ; void __near__ cmd_led (__near__ unsigned char *)
00117Cr 1               ; ---------------------------------------------------------------
00117Cr 1               
00117Cr 1               .segment	"CODE"
00117Cr 1               
00117Cr 1               .proc	_cmd_led: near
00117Cr 1               
00117Cr 1               .segment	"CODE"
00117Cr 1               
00117Cr 1  20 rr rr     	jsr     pushax
00117Fr 1  A9 rr        	lda     #<(L036E)
001181r 1  A2 rr        	ldx     #>(L036E)
001183r 1  20 rr rr     	jsr     pushax
001186r 1  A0 03        	ldy     #$03
001188r 1  20 rr rr     	jsr     ldaxysp
00118Br 1  20 rr rr     	jsr     _strcmp
00118Er 1  E0 00        	cpx     #$00
001190r 1  D0 0C        	bne     L036C
001192r 1  C9 00        	cmp     #$00
001194r 1  D0 08        	bne     L036C
001196r 1  A9 01        	lda     #$01
001198r 1  20 rr rr     	jsr     _led_set
00119Br 1  4C rr rr     	jmp     incsp2
00119Er 1  A9 rr        L036C:	lda     #<(L0377)
0011A0r 1  A2 rr        	ldx     #>(L0377)
0011A2r 1  20 rr rr     	jsr     pushax
0011A5r 1  A0 03        	ldy     #$03
0011A7r 1  20 rr rr     	jsr     ldaxysp
0011AAr 1  20 rr rr     	jsr     _strcmp
0011ADr 1  E0 00        	cpx     #$00
0011AFr 1  D0 0A        	bne     L0375
0011B1r 1  C9 00        	cmp     #$00
0011B3r 1  D0 06        	bne     L0375
0011B5r 1  20 rr rr     	jsr     _led_set
0011B8r 1  4C rr rr     	jmp     incsp2
0011BBr 1  20 rr rr     L0375:	jsr     _syntax_error
0011BEr 1  4C rr rr     	jmp     incsp2
0011C1r 1               
0011C1r 1               .endproc
0011C1r 1               
0011C1r 1               ; ---------------------------------------------------------------
0011C1r 1               ; void __near__ cmd_print (__near__ unsigned char *)
0011C1r 1               ; ---------------------------------------------------------------
0011C1r 1               
0011C1r 1               .segment	"CODE"
0011C1r 1               
0011C1r 1               .proc	_cmd_print: near
0011C1r 1               
0011C1r 1               .segment	"CODE"
0011C1r 1               
0011C1r 1  20 rr rr     	jsr     pushax
0011C4r 1  20 rr rr     	jsr     ldax0sp
0011C7r 1  20 rr rr     	jsr     _cmd_put
0011CAr 1  AD rr rr     	lda     _error
0011CDr 1  D0 03        	bne     L03B0
0011CFr 1  20 rr rr     	jsr     _acia_put_newline
0011D2r 1  4C rr rr     L03B0:	jmp     incsp2
0011D5r 1               
0011D5r 1               .endproc
0011D5r 1               
0011D5r 1               ; ---------------------------------------------------------------
0011D5r 1               ; void __near__ cmd_put (__near__ unsigned char *)
0011D5r 1               ; ---------------------------------------------------------------
0011D5r 1               
0011D5r 1               .segment	"CODE"
0011D5r 1               
0011D5r 1               .proc	_cmd_put: near
0011D5r 1               
0011D5r 1               .segment	"CODE"
0011D5r 1               
0011D5r 1  20 rr rr     	jsr     pushax
0011D8r 1  20 rr rr     	jsr     decsp5
0011DBr 1  4C rr rr     	jmp     L0382
0011DEr 1  A0 06        L0380:	ldy     #$06
0011E0r 1  20 rr rr     	jsr     ldaxysp
0011E3r 1  20 rr rr     	jsr     _next_token
0011E6r 1  A0 00        	ldy     #$00
0011E8r 1  91 rr        	sta     (sp),y
0011EAr 1  C9 03        	cmp     #$03
0011ECr 1  F0 06        	beq     L05D1
0011EEr 1  B1 rr        	lda     (sp),y
0011F0r 1  C9 05        	cmp     #$05
0011F2r 1  D0 23        	bne     L05D3
0011F4r 1  A0 08        L05D1:	ldy     #$08
0011F6r 1  20 rr rr     	jsr     pushwysp
0011F9r 1  A9 03        	lda     #$03
0011FBr 1  20 rr rr     	jsr     leaa0sp
0011FEr 1  20 rr rr     	jsr     _parse_string_expression
001201r 1  A0 05        	ldy     #$05
001203r 1  20 rr rr     	jsr     staxysp
001206r 1  86 rr        	stx     tmp1
001208r 1  05 rr        	ora     tmp1
00120Ar 1  F0 7D        	beq     L0382
00120Cr 1  A0 02        	ldy     #$02
00120Er 1  20 rr rr     	jsr     ldaxysp
001211r 1  20 rr rr     	jsr     _acia_puts
001214r 1  4C rr rr     	jmp     L0382
001217r 1  B1 rr        L05D3:	lda     (sp),y
001219r 1  C9 02        	cmp     #$02
00121Br 1  F0 0C        	beq     L05D4
00121Dr 1  C9 07        	cmp     #$07
00121Fr 1  F0 08        	beq     L05D4
001221r 1  C9 08        	cmp     #$08
001223r 1  F0 04        	beq     L05D4
001225r 1  C9 04        	cmp     #$04
001227r 1  D0 3A        	bne     L05D6
001229r 1  A0 08        L05D4:	ldy     #$08
00122Br 1  20 rr rr     	jsr     pushwysp
00122Er 1  A9 05        	lda     #$05
001230r 1  20 rr rr     	jsr     leaa0sp
001233r 1  20 rr rr     	jsr     _parse_number_expression
001236r 1  A0 05        	ldy     #$05
001238r 1  20 rr rr     	jsr     staxysp
00123Br 1  86 rr        	stx     tmp1
00123Dr 1  05 rr        	ora     tmp1
00123Fr 1  F0 48        	beq     L0382
001241r 1  A9 rr        	lda     #<(_print_buffer)
001243r 1  A2 rr        	ldx     #>(_print_buffer)
001245r 1  20 rr rr     	jsr     pushax
001248r 1  A9 rr        	lda     #<(L039C)
00124Ar 1  A2 rr        	ldx     #>(L039C)
00124Cr 1  20 rr rr     	jsr     pushax
00124Fr 1  A0 0A        	ldy     #$0A
001251r 1  20 rr rr     	jsr     pushwysp
001254r 1  A0 06        	ldy     #$06
001256r 1  20 rr rr     	jsr     _sprintf
001259r 1  A9 rr        	lda     #<(_print_buffer)
00125Br 1  A2 rr        	ldx     #>(_print_buffer)
00125Dr 1  20 rr rr     	jsr     _acia_puts
001260r 1  4C rr rr     	jmp     L0382
001263r 1  B1 rr        L05D6:	lda     (sp),y
001265r 1  C9 0C        	cmp     #$0C
001267r 1  D0 14        	bne     L05D8
001269r 1  A0 08        	ldy     #$08
00126Br 1  20 rr rr     	jsr     pushwysp
00126Er 1  A0 02        	ldy     #$02
001270r 1  B1 rr        	lda     (sp),y
001272r 1  20 rr rr     	jsr     _consume_token
001275r 1  A0 05        	ldy     #$05
001277r 1  20 rr rr     	jsr     staxysp
00127Ar 1  4C rr rr     	jmp     L0382
00127Dr 1  B1 rr        L05D8:	lda     (sp),y
00127Fr 1  C9 01        	cmp     #$01
001281r 1  F0 0E        	beq     L0381
001283r 1  20 rr rr     	jsr     _syntax_error
001286r 1  4C rr rr     	jmp     incsp7
001289r 1  AD rr rr     L0382:	lda     _error
00128Cr 1  D0 03 4C rr  	jeq     L0380
001290r 1  rr           
001291r 1  4C rr rr     L0381:	jmp     incsp7
001294r 1               
001294r 1               .endproc
001294r 1               
001294r 1               ; ---------------------------------------------------------------
001294r 1               ; void __near__ cmd_list (__near__ unsigned char *)
001294r 1               ; ---------------------------------------------------------------
001294r 1               
001294r 1               .segment	"CODE"
001294r 1               
001294r 1               .proc	_cmd_list: near
001294r 1               
001294r 1               .segment	"CODE"
001294r 1               
001294r 1  20 rr rr     	jsr     pushax
001297r 1  A9 00        	lda     #$00
001299r 1  20 rr rr     	jsr     pusha
00129Cr 1  20 rr rr     	jsr     decsp6
00129Fr 1  A9 01        	lda     #$01
0012A1r 1  20 rr rr     	jsr     pusha
0012A4r 1  A0 09        	ldy     #$09
0012A6r 1  20 rr rr     	jsr     ldaxysp
0012A9r 1  85 rr        	sta     ptr1
0012ABr 1  86 rr        	stx     ptr1+1
0012ADr 1  A0 00        	ldy     #$00
0012AFr 1  B1 rr        	lda     (ptr1),y
0012B1r 1  A2 00        	ldx     #$00
0012B3r 1  20 rr rr     	jsr     _isdigit
0012B6r 1  86 rr        	stx     tmp1
0012B8r 1  05 rr        	ora     tmp1
0012BAr 1  F0 29        	beq     L03B6
0012BCr 1  A0 0B        	ldy     #$0B
0012BEr 1  20 rr rr     	jsr     pushwysp
0012C1r 1  A9 rr        	lda     #<(L03BC)
0012C3r 1  A2 rr        	ldx     #>(L03BC)
0012C5r 1  20 rr rr     	jsr     pushax
0012C8r 1  A9 09        	lda     #$09
0012CAr 1  20 rr rr     	jsr     leaa0sp
0012CDr 1  20 rr rr     	jsr     pushax
0012D0r 1  A0 06        	ldy     #$06
0012D2r 1  20 rr rr     	jsr     _sscanf
0012D5r 1  A0 06        	ldy     #$06
0012D7r 1  20 rr rr     	jsr     ldaxysp
0012DAr 1  A0 03        	ldy     #$03
0012DCr 1  20 rr rr     	jsr     staxysp
0012DFr 1  A9 01        	lda     #$01
0012E1r 1  A0 07        	ldy     #$07
0012E3r 1  91 rr        	sta     (sp),y
0012E5r 1  AD rr rr     L03B6:	lda     _program
0012E8r 1  AE rr rr     	ldx     _program+1
0012EBr 1  4C rr rr     	jmp     L05E3
0012EEr 1  A0 07        L03C5:	ldy     #$07
0012F0r 1  B1 rr        	lda     (sp),y
0012F2r 1  F0 2B        	beq     L05E2
0012F4r 1  A0 02        	ldy     #$02
0012F6r 1  20 rr rr     	jsr     ldaxysp
0012F9r 1  20 rr rr     	jsr     ldaxi
0012FCr 1  A0 05        	ldy     #$05
0012FEr 1  D1 rr        	cmp     (sp),y
001300r 1  8A           	txa
001301r 1  C8           	iny
001302r 1  F1 rr        	sbc     (sp),y
001304r 1  90 6D        	bcc     L03C9
001306r 1  A0 02        	ldy     #$02
001308r 1  20 rr rr     	jsr     ldaxysp
00130Br 1  20 rr rr     	jsr     ldaxi
00130Er 1  38           	sec
00130Fr 1  A0 03        	ldy     #$03
001311r 1  F1 rr        	sbc     (sp),y
001313r 1  85 rr        	sta     tmp1
001315r 1  8A           	txa
001316r 1  C8           	iny
001317r 1  F1 rr        	sbc     (sp),y
001319r 1  05 rr        	ora     tmp1
00131Br 1  90 02        	bcc     L05E2
00131Dr 1  D0 54        	bne     L03C9
00131Fr 1  A0 00        L05E2:	ldy     #$00
001321r 1  B1 rr        	lda     (sp),y
001323r 1  F0 03        	beq     L03CF
001325r 1  98           	tya
001326r 1  91 rr        	sta     (sp),y
001328r 1  A9 rr        L03CF:	lda     #<(_print_buffer)
00132Ar 1  A2 rr        	ldx     #>(_print_buffer)
00132Cr 1  20 rr rr     	jsr     pushax
00132Fr 1  A9 rr        	lda     #<(L03D6)
001331r 1  A2 rr        	ldx     #>(L03D6)
001333r 1  20 rr rr     	jsr     pushax
001336r 1  A0 06        	ldy     #$06
001338r 1  20 rr rr     	jsr     ldaxysp
00133Br 1  20 rr rr     	jsr     pushw
00133Er 1  A0 08        	ldy     #$08
001340r 1  20 rr rr     	jsr     ldaxysp
001343r 1  85 rr        	sta     ptr1
001345r 1  86 rr        	stx     ptr1+1
001347r 1  A0 02        	ldy     #$02
001349r 1  A2 00        	ldx     #$00
00134Br 1  B1 rr        	lda     (ptr1),y
00134Dr 1  0A           	asl     a
00134Er 1  90 02        	bcc     L05DC
001350r 1  E8           	inx
001351r 1  18           	clc
001352r 1  69 rr        L05DC:	adc     #<(_keywords)
001354r 1  A8           	tay
001355r 1  8A           	txa
001356r 1  69 rr        	adc     #>(_keywords)
001358r 1  AA           	tax
001359r 1  98           	tya
00135Ar 1  20 rr rr     	jsr     pushw
00135Dr 1  A0 0A        	ldy     #$0A
00135Fr 1  20 rr rr     	jsr     ldaxysp
001362r 1  A0 04        	ldy     #$04
001364r 1  20 rr rr     	jsr     pushwidx
001367r 1  A0 0A        	ldy     #$0A
001369r 1  20 rr rr     	jsr     _sprintf
00136Cr 1  A9 rr        	lda     #<(_print_buffer)
00136Er 1  A2 rr        	ldx     #>(_print_buffer)
001370r 1  20 rr rr     	jsr     _acia_puts
001373r 1  A0 02        L03C9:	ldy     #$02
001375r 1  20 rr rr     	jsr     ldaxysp
001378r 1  A0 06        	ldy     #$06
00137Ar 1  20 rr rr     	jsr     ldaxidx
00137Dr 1  A0 01        L05E3:	ldy     #$01
00137Fr 1  20 rr rr     	jsr     staxysp
001382r 1  A0 02        	ldy     #$02
001384r 1  B1 rr        	lda     (sp),y
001386r 1  88           	dey
001387r 1  11 rr        	ora     (sp),y
001389r 1  F0 03 4C rr  	jne     L03C5
00138Dr 1  rr           
00138Er 1  20 rr rr     	jsr     _print_ready
001391r 1  A0 0A        	ldy     #$0A
001393r 1  4C rr rr     	jmp     addysp
001396r 1               
001396r 1               .endproc
001396r 1               
001396r 1               ; ---------------------------------------------------------------
001396r 1               ; void __near__ cmd_new (__near__ unsigned char *)
001396r 1               ; ---------------------------------------------------------------
001396r 1               
001396r 1               .segment	"CODE"
001396r 1               
001396r 1               .proc	_cmd_new: near
001396r 1               
001396r 1               .segment	"CODE"
001396r 1               
001396r 1  20 rr rr     	jsr     pushax
001399r 1  AD rr rr     	lda     _program
00139Cr 1  AE rr rr     	ldx     _program+1
00139Fr 1  20 rr rr     	jsr     pushax
0013A2r 1  4C rr rr     	jmp     L0424
0013A5r 1  20 rr rr     L0422:	jsr     ldax0sp
0013A8r 1  A0 06        	ldy     #$06
0013AAr 1  20 rr rr     	jsr     pushwidx
0013ADr 1  A0 03        	ldy     #$03
0013AFr 1  20 rr rr     	jsr     ldaxysp
0013B2r 1  A0 04        	ldy     #$04
0013B4r 1  20 rr rr     	jsr     ldaxidx
0013B7r 1  20 rr rr     	jsr     _free
0013BAr 1  A0 03        	ldy     #$03
0013BCr 1  20 rr rr     	jsr     ldaxysp
0013BFr 1  20 rr rr     	jsr     _free
0013C2r 1  20 rr rr     	jsr     ldax0sp
0013C5r 1  A0 02        	ldy     #$02
0013C7r 1  20 rr rr     	jsr     staxysp
0013CAr 1  20 rr rr     	jsr     incsp2
0013CDr 1  A0 01        L0424:	ldy     #$01
0013CFr 1  B1 rr        	lda     (sp),y
0013D1r 1  88           	dey
0013D2r 1  11 rr        	ora     (sp),y
0013D4r 1  D0 CF        	bne     L0422
0013D6r 1  8D rr rr     	sta     _program
0013D9r 1  8D rr rr     	sta     _program+1
0013DCr 1  4C rr rr     	jmp     incsp4
0013DFr 1               
0013DFr 1               .endproc
0013DFr 1               
0013DFr 1               ; ---------------------------------------------------------------
0013DFr 1               ; void __near__ cmd_free (__near__ unsigned char *)
0013DFr 1               ; ---------------------------------------------------------------
0013DFr 1               
0013DFr 1               .segment	"CODE"
0013DFr 1               
0013DFr 1               .proc	_cmd_free: near
0013DFr 1               
0013DFr 1               .segment	"CODE"
0013DFr 1               
0013DFr 1  20 rr rr     	jsr     pushax
0013E2r 1  A9 rr        	lda     #<(_print_buffer)
0013E4r 1  A2 rr        	ldx     #>(_print_buffer)
0013E6r 1  20 rr rr     	jsr     pushax
0013E9r 1  A9 rr        	lda     #<(L0432)
0013EBr 1  A2 rr        	ldx     #>(L0432)
0013EDr 1  20 rr rr     	jsr     pushax
0013F0r 1  20 rr rr     	jsr     __heapmemavail
0013F3r 1  20 rr rr     	jsr     pushax
0013F6r 1  A0 06        	ldy     #$06
0013F8r 1  20 rr rr     	jsr     _sprintf
0013FBr 1  A9 rr        	lda     #<(_print_buffer)
0013FDr 1  A2 rr        	ldx     #>(_print_buffer)
0013FFr 1  20 rr rr     	jsr     _acia_puts
001402r 1  4C rr rr     	jmp     incsp2
001405r 1               
001405r 1               .endproc
001405r 1               
001405r 1               ; ---------------------------------------------------------------
001405r 1               ; void __near__ cmd_load (__near__ unsigned char *)
001405r 1               ; ---------------------------------------------------------------
001405r 1               
001405r 1               .segment	"CODE"
001405r 1               
001405r 1               .proc	_cmd_load: near
001405r 1               
001405r 1               .segment	"CODE"
001405r 1               
001405r 1  20 rr rr     	jsr     pushax
001408r 1  20 rr rr     	jsr     decsp2
00140Br 1  A0 05        	ldy     #$05
00140Dr 1  20 rr rr     	jsr     pushwysp
001410r 1  A9 02        	lda     #$02
001412r 1  20 rr rr     	jsr     leaa0sp
001415r 1  20 rr rr     	jsr     _parse_string_expression
001418r 1  86 rr        	stx     tmp1
00141Ar 1  05 rr        	ora     tmp1
00141Cr 1  D0 03 4C rr  	jeq     L0438
001420r 1  rr           
001421r 1  A2 00        	ldx     #$00
001423r 1  8A           	txa
001424r 1  20 rr rr     	jsr     _cmd_new
001427r 1  A9 rr        	lda     #<(L043F)
001429r 1  A2 rr        	ldx     #>(L043F)
00142Br 1  20 rr rr     	jsr     _acia_puts
00142Er 1  A9 rr        	lda     #<(L0442)
001430r 1  A2 rr        	ldx     #>(L0442)
001432r 1  20 rr rr     	jsr     _acia_puts
001435r 1  20 rr rr     	jsr     ldax0sp
001438r 1  20 rr rr     	jsr     _acia_puts
00143Br 1  A9 rr        	lda     #<(L0447)
00143Dr 1  A2 rr        	ldx     #>(L0447)
00143Fr 1  20 rr rr     	jsr     _acia_puts
001442r 1  A9 rr        L044C:	lda     #<(L044E)
001444r 1  A2 rr        	ldx     #>(L044E)
001446r 1  20 rr rr     	jsr     _acia_puts
001449r 1  A9 rr        	lda     #<(_readline_buffer)
00144Br 1  A2 rr        	ldx     #>(_readline_buffer)
00144Dr 1  20 rr rr     	jsr     pushax
001450r 1  A9 FF        	lda     #$FF
001452r 1  20 rr rr     	jsr     _acia_gets
001455r 1  A9 rr        	lda     #<(L0455)
001457r 1  A2 rr        	ldx     #>(L0455)
001459r 1  20 rr rr     	jsr     pushax
00145Cr 1  A9 rr        	lda     #<(_readline_buffer)
00145Er 1  A2 rr        	ldx     #>(_readline_buffer)
001460r 1  20 rr rr     	jsr     pushax
001463r 1  A2 00        	ldx     #$00
001465r 1  A9 04        	lda     #$04
001467r 1  20 rr rr     	jsr     _strncmp
00146Ar 1  E0 00        	cpx     #$00
00146Cr 1  D0 04        	bne     L05E4
00146Er 1  C9 00        	cmp     #$00
001470r 1  F0 3F        	beq     L044A
001472r 1  A9 rr        L05E4:	lda     #<(L045D)
001474r 1  A2 rr        	ldx     #>(L045D)
001476r 1  20 rr rr     	jsr     pushax
001479r 1  A9 rr        	lda     #<(_readline_buffer)
00147Br 1  A2 rr        	ldx     #>(_readline_buffer)
00147Dr 1  20 rr rr     	jsr     pushax
001480r 1  A2 00        	ldx     #$00
001482r 1  A9 09        	lda     #$09
001484r 1  20 rr rr     	jsr     _strncmp
001487r 1  E0 00        	cpx     #$00
001489r 1  D0 17        	bne     L045B
00148Br 1  C9 00        	cmp     #$00
00148Dr 1  D0 13        	bne     L045B
00148Fr 1  20 rr rr     	jsr     _acia_put_newline
001492r 1  A9 rr        	lda     #<(L0464)
001494r 1  A2 rr        	ldx     #>(L0464)
001496r 1  20 rr rr     	jsr     pushax
001499r 1  A2 00        	ldx     #$00
00149Br 1  8A           	txa
00149Cr 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
00149Fr 1  4C rr rr     	jmp     L044A
0014A2r 1  A9 2E        L045B:	lda     #$2E
0014A4r 1  20 rr rr     	jsr     _acia_putc
0014A7r 1  A9 rr        	lda     #<(_readline_buffer)
0014A9r 1  A2 rr        	ldx     #>(_readline_buffer)
0014ABr 1  20 rr rr     	jsr     _interpret
0014AEr 1  4C rr rr     	jmp     L044C
0014B1r 1  AD rr rr     L044A:	lda     _error
0014B4r 1  D0 16        	bne     L0470
0014B6r 1  20 rr rr     	jsr     _acia_put_newline
0014B9r 1  20 rr rr     	jsr     _print_ready
0014BCr 1  4C rr rr     	jmp     incsp4
0014BFr 1  A9 rr        L0438:	lda     #<(L0472)
0014C1r 1  A2 rr        	ldx     #>(L0472)
0014C3r 1  20 rr rr     	jsr     pushax
0014C6r 1  A2 00        	ldx     #$00
0014C8r 1  8A           	txa
0014C9r 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
0014CCr 1  4C rr rr     L0470:	jmp     incsp4
0014CFr 1               
0014CFr 1               .endproc
0014CFr 1               
0014CFr 1               ; ---------------------------------------------------------------
0014CFr 1               ; void __near__ cmd_sleep (__near__ unsigned char *)
0014CFr 1               ; ---------------------------------------------------------------
0014CFr 1               
0014CFr 1               .segment	"CODE"
0014CFr 1               
0014CFr 1               .proc	_cmd_sleep: near
0014CFr 1               
0014CFr 1               .segment	"BSS"
00022Cr 1               
00022Cr 1               L0476:
00022Cr 1  00 00 00 00  	.res	4,$00
000230r 1               L0477:
000230r 1  00 00 00 00  	.res	4,$00
000234r 1               
000234r 1               .segment	"CODE"
0014CFr 1               
0014CFr 1  20 rr rr     	jsr     pushax
0014D2r 1  20 rr rr     	jsr     ldax0sp
0014D5r 1  85 rr        	sta     ptr1
0014D7r 1  86 rr        	stx     ptr1+1
0014D9r 1  A0 00        	ldy     #$00
0014DBr 1  B1 rr        	lda     (ptr1),y
0014DDr 1  A2 00        	ldx     #$00
0014DFr 1  20 rr rr     	jsr     _isdigit
0014E2r 1  86 rr        	stx     tmp1
0014E4r 1  05 rr        	ora     tmp1
0014E6r 1  D0 03 4C rr  	jeq     L0478
0014EAr 1  rr           
0014EBr 1  20 rr rr     	jsr     pushw0sp
0014EEr 1  A9 rr        	lda     #<(L047E)
0014F0r 1  A2 rr        	ldx     #>(L047E)
0014F2r 1  20 rr rr     	jsr     pushax
0014F5r 1  A9 rr        	lda     #<(L0476)
0014F7r 1  A2 rr        	ldx     #>(L0476)
0014F9r 1  20 rr rr     	jsr     pushax
0014FCr 1  A0 06        	ldy     #$06
0014FEr 1  20 rr rr     	jsr     _sscanf
001501r 1  A5 rr        	lda     _millis+3
001503r 1  85 rr        	sta     sreg+1
001505r 1  A5 rr        	lda     _millis+2
001507r 1  85 rr        	sta     sreg
001509r 1  A6 rr        	ldx     _millis+1
00150Br 1  A5 rr        	lda     _millis
00150Dr 1  20 rr rr     	jsr     pusheax
001510r 1  AD rr rr     	lda     L0476+3
001513r 1  85 rr        	sta     sreg+1
001515r 1  AD rr rr     	lda     L0476+2
001518r 1  85 rr        	sta     sreg
00151Ar 1  AE rr rr     	ldx     L0476+1
00151Dr 1  AD rr rr     	lda     L0476
001520r 1  20 rr rr     	jsr     tosaddeax
001523r 1  8D rr rr     	sta     L0477
001526r 1  8E rr rr     	stx     L0477+1
001529r 1  A4 rr        	ldy     sreg
00152Br 1  8C rr rr     	sty     L0477+2
00152Er 1  A4 rr        	ldy     sreg+1
001530r 1  8C rr rr     	sty     L0477+3
001533r 1  4C rr rr     	jmp     L0485
001536r 1  A5 rr        L0483:	lda     _interrupted+3
001538r 1  05 rr        	ora     _interrupted+2
00153Ar 1  05 rr        	ora     _interrupted+1
00153Cr 1  05 rr        	ora     _interrupted+0
00153Er 1  D0 2A        	bne     L0489
001540r 1  A5 rr        L0485:	lda     _millis+3
001542r 1  85 rr        	sta     sreg+1
001544r 1  A5 rr        	lda     _millis+2
001546r 1  85 rr        	sta     sreg
001548r 1  A6 rr        	ldx     _millis+1
00154Ar 1  A5 rr        	lda     _millis
00154Cr 1  20 rr rr     	jsr     pusheax
00154Fr 1  AD rr rr     	lda     L0477+3
001552r 1  85 rr        	sta     sreg+1
001554r 1  AD rr rr     	lda     L0477+2
001557r 1  85 rr        	sta     sreg
001559r 1  AE rr rr     	ldx     L0477+1
00155Cr 1  AD rr rr     	lda     L0477
00155Fr 1  20 rr rr     	jsr     tosulteax
001562r 1  D0 D2        	bne     L0483
001564r 1  4C rr rr     	jmp     incsp2
001567r 1  20 rr rr     L0478:	jsr     _syntax_error
00156Ar 1  4C rr rr     L0489:	jmp     incsp2
00156Dr 1               
00156Dr 1               .endproc
00156Dr 1               
00156Dr 1               ; ---------------------------------------------------------------
00156Dr 1               ; void __near__ cmd_let (__near__ unsigned char *)
00156Dr 1               ; ---------------------------------------------------------------
00156Dr 1               
00156Dr 1               .segment	"CODE"
00156Dr 1               
00156Dr 1               .proc	_cmd_let: near
00156Dr 1               
00156Dr 1               .segment	"CODE"
00156Dr 1               
00156Dr 1  20 rr rr     	jsr     pushax
001570r 1  20 rr rr     	jsr     decsp4
001573r 1  A0 05        	ldy     #$05
001575r 1  20 rr rr     	jsr     ldaxysp
001578r 1  20 rr rr     	jsr     _skip_whitespace
00157Br 1  A0 05        	ldy     #$05
00157Dr 1  20 rr rr     	jsr     ldaxysp
001580r 1  85 rr        	sta     ptr1
001582r 1  86 rr        	stx     ptr1+1
001584r 1  A0 00        	ldy     #$00
001586r 1  B1 rr        	lda     (ptr1),y
001588r 1  D0 09        	bne     L048E
00158Ar 1  20 rr rr     	jsr     _print_all_variables
00158Dr 1  20 rr rr     	jsr     _print_ready
001590r 1  4C rr rr     	jmp     incsp6
001593r 1  A0 07        L048E:	ldy     #$07
001595r 1  20 rr rr     	jsr     pushwysp
001598r 1  A9 03        	lda     #$03
00159Ar 1  20 rr rr     	jsr     leaa0sp
00159Dr 1  20 rr rr     	jsr     pushax
0015A0r 1  A9 04        	lda     #$04
0015A2r 1  20 rr rr     	jsr     leaa0sp
0015A5r 1  20 rr rr     	jsr     _parse_variable
0015A8r 1  A0 04        	ldy     #$04
0015AAr 1  20 rr rr     	jsr     staxysp
0015ADr 1  86 rr        	stx     tmp1
0015AFr 1  05 rr        	ora     tmp1
0015B1r 1  D0 03 4C rr  	jeq     L0492
0015B5r 1  rr           
0015B6r 1  A0 05        	ldy     #$05
0015B8r 1  20 rr rr     	jsr     ldaxysp
0015BBr 1  20 rr rr     	jsr     _next_token
0015BEr 1  C9 06        	cmp     #$06
0015C0r 1  F0 03 4C rr  	jne     L0498
0015C4r 1  rr           
0015C5r 1  A0 05        	ldy     #$05
0015C7r 1  20 rr rr     	jsr     ldaxysp
0015CAr 1  20 rr rr     	jsr     _next_token
0015CDr 1  A0 03        	ldy     #$03
0015CFr 1  91 rr        	sta     (sp),y
0015D1r 1  A0 07        	ldy     #$07
0015D3r 1  20 rr rr     	jsr     pushwysp
0015D6r 1  A0 05        	ldy     #$05
0015D8r 1  B1 rr        	lda     (sp),y
0015DAr 1  20 rr rr     	jsr     _consume_token
0015DDr 1  A0 04        	ldy     #$04
0015DFr 1  20 rr rr     	jsr     staxysp
0015E2r 1  A0 00        	ldy     #$00
0015E4r 1  B1 rr        	lda     (sp),y
0015E6r 1  F0 07        	beq     L04A6
0015E8r 1  C9 01        	cmp     #$01
0015EAr 1  F0 33        	beq     L04B0
0015ECr 1  4C rr rr     	jmp     incsp6
0015EFr 1  20 rr rr     L04A6:	jsr     decsp2
0015F2r 1  A0 09        	ldy     #$09
0015F4r 1  20 rr rr     	jsr     pushwysp
0015F7r 1  A9 02        	lda     #$02
0015F9r 1  20 rr rr     	jsr     leaa0sp
0015FCr 1  20 rr rr     	jsr     _parse_number_expression
0015FFr 1  86 rr        	stx     tmp1
001601r 1  05 rr        	ora     tmp1
001603r 1  F0 14        	beq     L04A7
001605r 1  A0 06        	ldy     #$06
001607r 1  20 rr rr     	jsr     pushwysp
00160Ar 1  A0 04        	ldy     #$04
00160Cr 1  B1 rr        	lda     (sp),y
00160Er 1  20 rr rr     	jsr     pusha
001611r 1  A9 03        	lda     #$03
001613r 1  20 rr rr     	jsr     leaa0sp
001616r 1  20 rr rr     	jsr     _create_variable
001619r 1  20 rr rr     L04A7:	jsr     incsp2
00161Cr 1  4C rr rr     	jmp     incsp6
00161Fr 1  20 rr rr     L04B0:	jsr     decsp2
001622r 1  A0 09        	ldy     #$09
001624r 1  20 rr rr     	jsr     pushwysp
001627r 1  A9 02        	lda     #$02
001629r 1  20 rr rr     	jsr     leaa0sp
00162Cr 1  20 rr rr     	jsr     _parse_string_expression
00162Fr 1  86 rr        	stx     tmp1
001631r 1  05 rr        	ora     tmp1
001633r 1  F0 14        	beq     L04B1
001635r 1  A0 06        	ldy     #$06
001637r 1  20 rr rr     	jsr     pushwysp
00163Ar 1  A0 04        	ldy     #$04
00163Cr 1  B1 rr        	lda     (sp),y
00163Er 1  20 rr rr     	jsr     pusha
001641r 1  A0 04        	ldy     #$04
001643r 1  20 rr rr     	jsr     ldaxysp
001646r 1  20 rr rr     	jsr     _create_variable
001649r 1  20 rr rr     L04B1:	jsr     incsp2
00164Cr 1  4C rr rr     	jmp     incsp6
00164Fr 1  A0 05        L0498:	ldy     #$05
001651r 1  20 rr rr     	jsr     ldaxysp
001654r 1  85 rr        	sta     ptr1
001656r 1  86 rr        	stx     ptr1+1
001658r 1  A0 00        	ldy     #$00
00165Ar 1  B1 rr        	lda     (ptr1),y
00165Cr 1  D0 12        	bne     L04BF
00165Er 1  A0 04        	ldy     #$04
001660r 1  20 rr rr     	jsr     pushwysp
001663r 1  A0 02        	ldy     #$02
001665r 1  B1 rr        	lda     (sp),y
001667r 1  20 rr rr     	jsr     _delete_variable
00166Ar 1  4C rr rr     	jmp     incsp6
00166Dr 1  20 rr rr     L0492:	jsr     _syntax_error
001670r 1  4C rr rr     L04BF:	jmp     incsp6
001673r 1               
001673r 1               .endproc
001673r 1               
001673r 1               ; ---------------------------------------------------------------
001673r 1               ; void __near__ cmd_input (__near__ unsigned char *)
001673r 1               ; ---------------------------------------------------------------
001673r 1               
001673r 1               .segment	"CODE"
001673r 1               
001673r 1               .proc	_cmd_input: near
001673r 1               
001673r 1               .segment	"CODE"
001673r 1               
001673r 1  20 rr rr     	jsr     pushax
001676r 1  20 rr rr     	jsr     decsp3
001679r 1  A0 06        	ldy     #$06
00167Br 1  20 rr rr     	jsr     pushwysp
00167Er 1  A9 03        	lda     #$03
001680r 1  20 rr rr     	jsr     leaa0sp
001683r 1  20 rr rr     	jsr     pushax
001686r 1  A9 04        	lda     #$04
001688r 1  20 rr rr     	jsr     leaa0sp
00168Br 1  20 rr rr     	jsr     _parse_variable
00168Er 1  A0 03        	ldy     #$03
001690r 1  20 rr rr     	jsr     staxysp
001693r 1  A0 04        	ldy     #$04
001695r 1  B1 rr        	lda     (sp),y
001697r 1  88           	dey
001698r 1  11 rr        	ora     (sp),y
00169Ar 1  D0 03 4C rr  	jeq     L04CA
00169Er 1  rr           
00169Fr 1  A2 00        	ldx     #$00
0016A1r 1  A1 rr        	lda     (sp,x)
0016A3r 1  C9 01        	cmp     #$01
0016A5r 1  D0 20        	bne     L05E6
0016A7r 1  20 rr rr     	jsr     _readline
0016AAr 1  20 rr rr     	jsr     pushax
0016ADr 1  A0 06        	ldy     #$06
0016AFr 1  20 rr rr     	jsr     pushwysp
0016B2r 1  A0 04        	ldy     #$04
0016B4r 1  B1 rr        	lda     (sp),y
0016B6r 1  20 rr rr     	jsr     pusha
0016B9r 1  A0 04        	ldy     #$04
0016BBr 1  20 rr rr     	jsr     ldaxysp
0016BEr 1  20 rr rr     	jsr     _create_variable
0016C1r 1  20 rr rr     	jsr     incsp2
0016C4r 1  4C rr rr     	jmp     incsp5
0016C7r 1  A1 rr        L05E6:	lda     (sp,x)
0016C9r 1  F0 03 4C rr  	jne     L04D5
0016CDr 1  rr           
0016CEr 1  4C rr rr     	jmp     L05E8
0016D1r 1  20 rr rr     L05E8:	jsr     push0
0016D4r 1  A9 01        	lda     #$01
0016D6r 1  20 rr rr     	jsr     _readline
0016D9r 1  20 rr rr     	jsr     pushax
0016DCr 1  A5 rr        	lda     _interrupted+3
0016DEr 1  05 rr        	ora     _interrupted+2
0016E0r 1  05 rr        	ora     _interrupted+1
0016E2r 1  05 rr        	ora     _interrupted+0
0016E4r 1  F0 06        	beq     L04DE
0016E6r 1  20 rr rr     	jsr     incsp4
0016E9r 1  4C rr rr     	jmp     incsp5
0016ECr 1  20 rr rr     L04DE:	jsr     pushw0sp
0016EFr 1  A9 04        	lda     #$04
0016F1r 1  20 rr rr     	jsr     leaa0sp
0016F4r 1  20 rr rr     	jsr     _parse_integer
0016F7r 1  86 rr        	stx     tmp1
0016F9r 1  05 rr        	ora     tmp1
0016FBr 1  F0 1A        	beq     L04E0
0016FDr 1  A0 08        	ldy     #$08
0016FFr 1  20 rr rr     	jsr     pushwysp
001702r 1  A0 06        	ldy     #$06
001704r 1  B1 rr        	lda     (sp),y
001706r 1  20 rr rr     	jsr     pusha
001709r 1  A9 05        	lda     #$05
00170Br 1  20 rr rr     	jsr     leaa0sp
00170Er 1  20 rr rr     	jsr     _create_variable
001711r 1  20 rr rr     	jsr     incsp4
001714r 1  4C rr rr     	jmp     incsp5
001717r 1  A0 08        L04E0:	ldy     #$08
001719r 1  20 rr rr     	jsr     ldaxysp
00171Cr 1  20 rr rr     	jsr     _next_token
00171Fr 1  C9 14        	cmp     #$14
001721r 1  D0 18        	bne     L04E9
001723r 1  A0 0A        	ldy     #$0A
001725r 1  20 rr rr     	jsr     pushwysp
001728r 1  A9 14        	lda     #$14
00172Ar 1  20 rr rr     	jsr     _consume_token
00172Dr 1  A0 07        	ldy     #$07
00172Fr 1  20 rr rr     	jsr     staxysp
001732r 1  20 rr rr     	jsr     _execute
001735r 1  20 rr rr     	jsr     incsp4
001738r 1  4C rr rr     	jmp     incsp5
00173Br 1  A9 rr        L04E9:	lda     #<(L04F4)
00173Dr 1  A2 rr        	ldx     #>(L04F4)
00173Fr 1  20 rr rr     	jsr     pushax
001742r 1  A2 00        	ldx     #$00
001744r 1  8A           	txa
001745r 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
001748r 1  A9 rr        	lda     #<(L04F8)
00174Ar 1  A2 rr        	ldx     #>(L04F8)
00174Cr 1  20 rr rr     	jsr     _acia_puts
00174Fr 1  20 rr rr     	jsr     incsp4
001752r 1  4C rr rr     	jmp     L05E8
001755r 1  A9 rr        L04D5:	lda     #<(L04FC)
001757r 1  A2 rr        	ldx     #>(L04FC)
001759r 1  20 rr rr     	jsr     pushax
00175Cr 1  A2 00        	ldx     #$00
00175Er 1  8A           	txa
00175Fr 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
001762r 1  4C rr rr     	jmp     incsp5
001765r 1  A9 rr        L04CA:	lda     #<(L0501)
001767r 1  A2 rr        	ldx     #>(L0501)
001769r 1  20 rr rr     	jsr     pushax
00176Cr 1  A2 00        	ldx     #$00
00176Er 1  8A           	txa
00176Fr 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
001772r 1  4C rr rr     	jmp     incsp5
001775r 1               
001775r 1               .endproc
001775r 1               
001775r 1               ; ---------------------------------------------------------------
001775r 1               ; void __near__ cmd_seed (__near__ unsigned char *)
001775r 1               ; ---------------------------------------------------------------
001775r 1               
001775r 1               .segment	"CODE"
001775r 1               
001775r 1               .proc	_cmd_seed: near
001775r 1               
001775r 1               .segment	"CODE"
001775r 1               
001775r 1  20 rr rr     	jsr     pushax
001778r 1  20 rr rr     	jsr     decsp2
00177Br 1  A0 05        	ldy     #$05
00177Dr 1  20 rr rr     	jsr     pushwysp
001780r 1  A9 02        	lda     #$02
001782r 1  20 rr rr     	jsr     leaa0sp
001785r 1  20 rr rr     	jsr     _parse_number_expression
001788r 1  86 rr        	stx     tmp1
00178Ar 1  05 rr        	ora     tmp1
00178Cr 1  F0 06        	beq     L0505
00178Er 1  20 rr rr     	jsr     ldax0sp
001791r 1  20 rr rr     	jsr     _srand
001794r 1  4C rr rr     L0505:	jmp     incsp4
001797r 1               
001797r 1               .endproc
001797r 1               
001797r 1               ; ---------------------------------------------------------------
001797r 1               ; void __near__ cmd_if (__near__ unsigned char *)
001797r 1               ; ---------------------------------------------------------------
001797r 1               
001797r 1               .segment	"CODE"
001797r 1               
001797r 1               .proc	_cmd_if: near
001797r 1               
001797r 1               .segment	"CODE"
001797r 1               
001797r 1  20 rr rr     	jsr     pushax
00179Ar 1  20 rr rr     	jsr     decsp2
00179Dr 1  A0 05        	ldy     #$05
00179Fr 1  20 rr rr     	jsr     pushwysp
0017A2r 1  A9 02        	lda     #$02
0017A4r 1  20 rr rr     	jsr     leaa0sp
0017A7r 1  20 rr rr     	jsr     _parse_number_expression
0017AAr 1  A0 02        	ldy     #$02
0017ACr 1  20 rr rr     	jsr     staxysp
0017AFr 1  86 rr        	stx     tmp1
0017B1r 1  05 rr        	ora     tmp1
0017B3r 1  F0 26        	beq     L0513
0017B5r 1  A0 01        	ldy     #$01
0017B7r 1  B1 rr        	lda     (sp),y
0017B9r 1  88           	dey
0017BAr 1  11 rr        	ora     (sp),y
0017BCr 1  F0 1D        	beq     L0513
0017BEr 1  A0 05        	ldy     #$05
0017C0r 1  20 rr rr     	jsr     pushwysp
0017C3r 1  A9 13        	lda     #$13
0017C5r 1  20 rr rr     	jsr     _consume_token
0017C8r 1  A0 02        	ldy     #$02
0017CAr 1  20 rr rr     	jsr     staxysp
0017CDr 1  86 rr        	stx     tmp1
0017CFr 1  05 rr        	ora     tmp1
0017D1r 1  F0 08        	beq     L0513
0017D3r 1  A0 03        	ldy     #$03
0017D5r 1  20 rr rr     	jsr     ldaxysp
0017D8r 1  20 rr rr     	jsr     _execute
0017DBr 1  4C rr rr     L0513:	jmp     incsp4
0017DEr 1               
0017DEr 1               .endproc
0017DEr 1               
0017DEr 1               ; ---------------------------------------------------------------
0017DEr 1               ; void __near__ cmd_end (__near__ unsigned char *)
0017DEr 1               ; ---------------------------------------------------------------
0017DEr 1               
0017DEr 1               .segment	"CODE"
0017DEr 1               
0017DEr 1               .proc	_cmd_end: near
0017DEr 1               
0017DEr 1               .segment	"CODE"
0017DEr 1               
0017DEr 1  20 rr rr     	jsr     pushax
0017E1r 1  AD rr rr     	lda     _current_line
0017E4r 1  0D rr rr     	ora     _current_line+1
0017E7r 1  D0 03        	bne     L051B
0017E9r 1  20 rr rr     	jsr     _print_ready
0017ECr 1  A9 00        L051B:	lda     #$00
0017EEr 1  8D rr rr     	sta     _current_line
0017F1r 1  8D rr rr     	sta     _current_line+1
0017F4r 1  A9 01        	lda     #$01
0017F6r 1  8D rr rr     	sta     _current_line_changed
0017F9r 1  4C rr rr     	jmp     incsp2
0017FCr 1               
0017FCr 1               .endproc
0017FCr 1               
0017FCr 1               ; ---------------------------------------------------------------
0017FCr 1               ; void __near__ cmd_edit (__near__ unsigned char *)
0017FCr 1               ; ---------------------------------------------------------------
0017FCr 1               
0017FCr 1               .segment	"CODE"
0017FCr 1               
0017FCr 1               .proc	_cmd_edit: near
0017FCr 1               
0017FCr 1               .segment	"CODE"
0017FCr 1               
0017FCr 1  20 rr rr     	jsr     pushax
0017FFr 1  20 rr rr     	jsr     decsp4
001802r 1  A0 05        	ldy     #$05
001804r 1  20 rr rr     	jsr     ldaxysp
001807r 1  85 rr        	sta     ptr1
001809r 1  86 rr        	stx     ptr1+1
00180Br 1  A0 00        	ldy     #$00
00180Dr 1  B1 rr        	lda     (ptr1),y
00180Fr 1  A2 00        	ldx     #$00
001811r 1  20 rr rr     	jsr     _isdigit
001814r 1  86 rr        	stx     tmp1
001816r 1  05 rr        	ora     tmp1
001818r 1  D0 03 4C rr  	jeq     L0523
00181Cr 1  rr           
00181Dr 1  A0 07        	ldy     #$07
00181Fr 1  20 rr rr     	jsr     pushwysp
001822r 1  A9 rr        	lda     #<(L0529)
001824r 1  A2 rr        	ldx     #>(L0529)
001826r 1  20 rr rr     	jsr     pushax
001829r 1  A9 06        	lda     #$06
00182Br 1  20 rr rr     	jsr     leaa0sp
00182Er 1  20 rr rr     	jsr     pushax
001831r 1  A0 06        	ldy     #$06
001833r 1  20 rr rr     	jsr     _sscanf
001836r 1  AD rr rr     	lda     _program
001839r 1  AE rr rr     	ldx     _program+1
00183Cr 1  4C rr rr     	jmp     L05ED
00183Fr 1  20 rr rr     L052E:	jsr     ldax0sp
001842r 1  20 rr rr     	jsr     ldaxi
001845r 1  A0 02        	ldy     #$02
001847r 1  D1 rr        	cmp     (sp),y
001849r 1  D0 50        	bne     L0532
00184Br 1  8A           	txa
00184Cr 1  C8           	iny
00184Dr 1  D1 rr        	cmp     (sp),y
00184Fr 1  D0 4A        	bne     L0532
001851r 1  A9 rr        	lda     #<(_readline_buffer)
001853r 1  A2 rr        	ldx     #>(_readline_buffer)
001855r 1  20 rr rr     	jsr     pushax
001858r 1  A9 rr        	lda     #<(L0536)
00185Ar 1  A2 rr        	ldx     #>(L0536)
00185Cr 1  20 rr rr     	jsr     pushax
00185Fr 1  A0 05        	ldy     #$05
001861r 1  20 rr rr     	jsr     ldaxysp
001864r 1  20 rr rr     	jsr     pushw
001867r 1  A0 07        	ldy     #$07
001869r 1  20 rr rr     	jsr     ldaxysp
00186Cr 1  85 rr        	sta     ptr1
00186Er 1  86 rr        	stx     ptr1+1
001870r 1  A0 02        	ldy     #$02
001872r 1  A2 00        	ldx     #$00
001874r 1  B1 rr        	lda     (ptr1),y
001876r 1  0A           	asl     a
001877r 1  90 02        	bcc     L05EC
001879r 1  E8           	inx
00187Ar 1  18           	clc
00187Br 1  69 rr        L05EC:	adc     #<(_keywords)
00187Dr 1  A8           	tay
00187Er 1  8A           	txa
00187Fr 1  69 rr        	adc     #>(_keywords)
001881r 1  AA           	tax
001882r 1  98           	tya
001883r 1  20 rr rr     	jsr     pushw
001886r 1  A0 09        	ldy     #$09
001888r 1  20 rr rr     	jsr     ldaxysp
00188Br 1  A0 04        	ldy     #$04
00188Dr 1  20 rr rr     	jsr     pushwidx
001890r 1  A0 0A        	ldy     #$0A
001892r 1  20 rr rr     	jsr     _sprintf
001895r 1  20 rr rr     	jsr     _readline_reedit
001898r 1  4C rr rr     	jmp     incsp6
00189Br 1  20 rr rr     L0532:	jsr     ldax0sp
00189Er 1  A0 06        	ldy     #$06
0018A0r 1  20 rr rr     	jsr     ldaxidx
0018A3r 1  20 rr rr     L05ED:	jsr     stax0sp
0018A6r 1  A0 01        	ldy     #$01
0018A8r 1  B1 rr        	lda     (sp),y
0018AAr 1  88           	dey
0018ABr 1  11 rr        	ora     (sp),y
0018ADr 1  D0 90        	bne     L052E
0018AFr 1  A9 rr        	lda     #<(L0540)
0018B1r 1  A2 rr        	ldx     #>(L0540)
0018B3r 1  20 rr rr     	jsr     pushax
0018B6r 1  A2 00        	ldx     #$00
0018B8r 1  8A           	txa
0018B9r 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
0018BCr 1  4C rr rr     	jmp     incsp6
0018BFr 1  20 rr rr     L0523:	jsr     _syntax_error
0018C2r 1  4C rr rr     	jmp     incsp6
0018C5r 1               
0018C5r 1               .endproc
0018C5r 1               
0018C5r 1               ; ---------------------------------------------------------------
0018C5r 1               ; void __near__ cmd_rem (__near__ unsigned char *)
0018C5r 1               ; ---------------------------------------------------------------
0018C5r 1               
0018C5r 1               .segment	"CODE"
0018C5r 1               
0018C5r 1               .proc	_cmd_rem: near
0018C5r 1               
0018C5r 1               .segment	"CODE"
0018C5r 1               
0018C5r 1  20 rr rr     	jsr     pushax
0018C8r 1  4C rr rr     	jmp     incsp2
0018CBr 1               
0018CBr 1               .endproc
0018CBr 1               
0018CBr 1               ; ---------------------------------------------------------------
0018CBr 1               ; void __near__ cmd_write (__near__ unsigned char *)
0018CBr 1               ; ---------------------------------------------------------------
0018CBr 1               
0018CBr 1               .segment	"CODE"
0018CBr 1               
0018CBr 1               .proc	_cmd_write: near
0018CBr 1               
0018CBr 1               .segment	"CODE"
0018CBr 1               
0018CBr 1  20 rr rr     	jsr     pushax
0018CEr 1  20 rr rr     	jsr     decsp2
0018D1r 1  A0 05        	ldy     #$05
0018D3r 1  20 rr rr     	jsr     pushwysp
0018D6r 1  A9 02        	lda     #$02
0018D8r 1  20 rr rr     	jsr     leaa0sp
0018DBr 1  20 rr rr     	jsr     _parse_string_expression
0018DEr 1  86 rr        	stx     tmp1
0018E0r 1  05 rr        	ora     tmp1
0018E2r 1  F0 2E        	beq     L0552
0018E4r 1  20 rr rr     	jsr     ldax0sp
0018E7r 1  20 rr rr     	jsr     _strlen
0018EAr 1  E0 00        	cpx     #$00
0018ECr 1  D0 04        	bne     L05EE
0018EEr 1  C9 00        	cmp     #$00
0018F0r 1  F0 13        	beq     L054B
0018F2r 1  20 rr rr     L05EE:	jsr     ldax0sp
0018F5r 1  85 rr        	sta     ptr1
0018F7r 1  86 rr        	stx     ptr1+1
0018F9r 1  A0 00        	ldy     #$00
0018FBr 1  B1 rr        	lda     (ptr1),y
0018FDr 1  A2 00        	ldx     #$00
0018FFr 1  20 rr rr     	jsr     _acia_puts
001902r 1  4C rr rr     	jmp     incsp4
001905r 1  A9 rr        L054B:	lda     #<(L0554)
001907r 1  A2 rr        	ldx     #>(L0554)
001909r 1  20 rr rr     	jsr     pushax
00190Cr 1  A2 00        	ldx     #$00
00190Er 1  8A           	txa
00190Fr 1  20 rr rr     	jsr     _syntax_error_msg_with_arg
001912r 1  4C rr rr     L0552:	jmp     incsp4
001915r 1               
001915r 1               .endproc
001915r 1               
001915r 1               ; ---------------------------------------------------------------
001915r 1               ; void __near__ cmd_clear (__near__ unsigned char *)
001915r 1               ; ---------------------------------------------------------------
001915r 1               
001915r 1               .segment	"CODE"
001915r 1               
001915r 1               .proc	_cmd_clear: near
001915r 1               
001915r 1               .segment	"CODE"
001915r 1               
001915r 1  20 rr rr     	jsr     pushax
001918r 1  20 rr rr     	jsr     _clear_variables
00191Br 1  20 rr rr     	jsr     _print_ready
00191Er 1  4C rr rr     	jmp     incsp2
001921r 1               
001921r 1               .endproc
001921r 1               
001921r 1               
